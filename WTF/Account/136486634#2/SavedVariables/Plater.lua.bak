
PlaterDB = {
["captured_spells"] = {
[472819] = {
["encounterName"] = "Swampface",
["type"] = "DEBUFF",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3053,
},
[473836] = {
["encounterName"] = "Big M.O.M.M.A.",
["type"] = "DEBUFF",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3020,
},
[470090] = {
["encounterName"] = "Demolition Duo",
["type"] = "BUFF",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3019,
},
[463169] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Surveyor",
["npcID"] = 229686,
},
[1242187] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcana-Monger So'zer",
["npcID"] = 241956,
},
[468726] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Diver",
["npcID"] = 231496,
},
[468631] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Diver",
["npcID"] = 231496,
},
[461805] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[471585] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[466188] = {
["encounterName"] = "Geezle Gigazap",
["type"] = "DEBUFF",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3054,
},
[473713] = {
["encounterName"] = "Demolition Duo",
["type"] = "DEBUFF",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3019,
},
[460156] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[1216039] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[471841] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waterworks Bottomfeeder",
["npcID"] = 231312,
},
[1238902] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 26125,
},
[460602] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[471652] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Inspector",
["npcID"] = 226398,
},
[474351] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[459779] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["npcID"] = 226402,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[465463] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[465813] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Undercrawler",
["npcID"] = 231380,
},
[1216826] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Inspector",
["npcID"] = 230748,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[468672] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bombshell Crab",
["npcID"] = 231497,
},
[470038] = {
["encounterName"] = "Swampface",
["type"] = "DEBUFF",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3053,
},
[474388] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[473690] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[470039] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3053,
},
[462737] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Darkfuse Soldier",
["npcID"] = 228144,
},
[465595] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Electrician",
["npcID"] = 231312,
},
[465754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[472454] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[465120] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loaderbot",
["npcID"] = 231014,
},
[462771] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Surveyor",
["npcID"] = 229686,
},
[108446] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 417,
},
[460867] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[1213803] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[465408] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[1213805] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[468647] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Leaping Spark",
["npcID"] = 232690,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[1217456] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[469981] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[468616] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Leaping Spark",
["npcID"] = 232690,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[460393] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[468680] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bombshell Crab",
["npcID"] = 231497,
},
[460965] = {
["encounterName"] = "Demolition Duo",
["type"] = "DEBUFF",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3019,
},
[1216607] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Jumpstarter",
["npcID"] = 231325,
},
[465420] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Scaffolding",
["npcID"] = 231176,
},
[472452] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[473220] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[471736] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[472338] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Venture Co. Surveyor",
["npcID"] = 229686,
},
[1231345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcana-Monger So'zer",
["npcID"] = 241956,
},
[468841] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[466190] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[1214468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechadrone Sniper",
["npcID"] = 229069,
},
[465127] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loaderbot",
["npcID"] = 231014,
},
[473287] = {
["encounterName"] = "Big M.O.M.M.A.",
["type"] = "DEBUFF",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3020,
},
[444490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ancestor",
["npcID"] = 221177,
},
[473224] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[470022] = {
["encounterName"] = "Demolition Duo",
["type"] = "DEBUFF",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3019,
},
[469478] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3053,
},
[465827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Bloodwarper",
["npcID"] = 230748,
},
[465966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Electrician",
["npcID"] = 231312,
},
[471733] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[1217653] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[474337] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[461796] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[468813] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[465682] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Inspector",
["npcID"] = 231385,
},
[464655] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechadrone Sniper",
["npcID"] = 229069,
},
[460781] = {
["encounterName"] = "Demolition Duo",
["type"] = "DEBUFF",
["source"] = "Ticking Time Bomb",
["npcID"] = 234528,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3019,
},
[472878] = {
["encounterName"] = "Swampface",
["type"] = "DEBUFF",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3053,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[465830] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Darkfuse Bloodwarper",
["npcID"] = 230748,
},
[469799] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Electrician",
["npcID"] = 231312,
},
[468815] = {
["encounterName"] = "Geezle Gigazap",
["type"] = "DEBUFF",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 3054,
},
[473351] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[473070] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3053,
},
[466197] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[459799] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["npcID"] = 226402,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3019,
},
[468846] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[465666] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Jumpstarter",
["npcID"] = 231325,
},
[1231759] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Deputy Zo'bi",
["npcID"] = 241958,
},
[1238027] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Smuggler Ba'vaal",
["npcID"] = 232018,
},
[90328] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[473114] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3053,
},
},
["profileKeys"] = {
["Driplitty - Twisting Nether"] = "Default",
["Mbuzi - Twisting Nether"] = "Default",
["Bæenjoyer - Twisting Nether"] = "Default",
["Bægnaskeren - Twisting Nether"] = "Default",
["Kassedamen - Twisting Nether"] = "Default",
["Dådyret - Draenor"] = "Default",
["Mbuzipriest - Twisting Nether"] = "Default",
["Ponypala - Twisting Nether"] = "Default",
["Mbuzi - Draenor"] = "Default",
["Lilgoat - Twisting Nether"] = "Default",
},
["profiles"] = {
["FragUI"] = {
["focus_as_target_alpha"] = true,
["aura_breakline_space"] = 3,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --SETTINGS: NAMEPLATE\n    envTable.NameplateColor =\"gray\"\n    \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --insert code here\n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- if in combat\n    if (InCombatLockdown()) then\n        --update nameplate color\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    \nend\n\n\n",
["Time"] = 1743409167,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --SETTINGS: NAMEPLATE\n    envTable.NameplateColor =\"gray\"\n    \n    \nend",
["url"] = "https://wago.io/Dq5DaC3b4/8",
["Icon"] = 135964,
["Temp_Initialization"] = "function (scriptTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Revision"] = 117,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["SpellIds"] = {
383840,
379256,
388084,
369031,
336499,
347097,
328921,
329636,
350857,
365381,
367573,
361934,
362020,
352016,
260189,
261265,
261266,
271590,
202455,
197422,
232156,
229489,
235308,
235089,
376705,
},
["Prio"] = 99,
["Name"] = "Invalid Target",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- if in combat\n    if (InCombatLockdown()) then\n        --update nameplate color\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    \nend\n\n\n",
["version"] = 8,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --insert code here\n    \nend",
["semver"] = "1.0.7",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1743281252,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 162,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["NpcNames"] = {
"214840",
},
["Enabled"] = true,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1743281703,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = 610472,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 94,
["Options"] = {
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["SpellIds"] = {
343470,
423228,
},
["Prio"] = 99,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Time"] = 1743409175,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["url"] = "",
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1286,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.1,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["Enabled"] = true,
["Desc"] = "Abilities casted on the tank.",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Name"] = "Cast - Tankbuster [P]",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = -1,
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
},
},
["blizzard_nameplate_large_font"] = "Friz Quadrata TT",
["saved_cvars_last_change"] = {
["nameplateShowOnlyNames"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateSelectedAlpha"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5104",
["nameplateShowPersonalCooldowns"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMotionSpeed"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriendlyNPCs"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateSelectedScale"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateOverlapH"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriendlyBuffs"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMinAlpha"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMinAlphaDistance"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMotion"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateLargerScale"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5530",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5104",
["nameplatePlayerMaxDistance"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateOccludedAlphaMult"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5510",
["nameplateShowEnemies"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowSelf"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriends"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
},
["aura_cache_by_name"] = {
},
["url"] = "https://wago.io/tA5ADNfDG/11",
["blizzard_nameplate_font_override_enabled"] = true,
["aura_stack_anchor"] = {
["y"] = 15,
["side"] = 5,
},
["cast_statusbar_fadein_time"] = 0.019999999552965,
["target_shady_enabled"] = false,
["cast_statusbar_spark_alpha"] = 0,
["aura2_y_offset"] = 3,
["extra_icon_caster_size"] = 12,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["level_text_alpha"] = 0.3,
["module_enabled"] = false,
},
["friendlyplayer"] = {
["castbar_offset"] = -1,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Friz Quadrata TT",
["cast"] = {
210,
22,
},
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
210,
22,
},
["spellname_text_outline"] = "OUTLINE",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
0,
},
["percent_text_anchor"] = {
["side"] = 11,
["x"] = -1,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["big_actorname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["mana_incombat"] = {
nil,
4,
},
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actorname_text_font"] = "Friz Quadrata TT",
["castbar_offset_x"] = 11,
["all_names"] = true,
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_font"] = "Friz Quadrata TT",
["big_actortitle_text_size"] = 12,
["spellpercent_text_enabled"] = true,
["actorname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["spellname_text_size"] = 12,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["percent_text_font"] = "Friz Quadrata TT",
["buff_frame_y_offset"] = 0,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_enabled"] = true,
["spellpercent_text_size"] = 12,
["percent_text_size"] = 12,
["quest_color_enabled"] = true,
["health_incombat"] = {
232,
32,
},
["health"] = {
232,
32,
},
["level_text_alpha"] = 0.2999999821186066,
["big_actorname_text_size"] = 12,
["mana"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["actorname_text_size"] = 12,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Friz Quadrata TT",
["cast"] = {
210,
22,
},
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 12,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
210,
22,
},
["spellname_text_outline"] = "OUTLINE",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["side"] = 11,
["x"] = -1,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["actorname_text_size"] = 12,
["percent_text_enabled"] = true,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.2999999821186066,
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["percent_text_size"] = 12,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "Friz Quadrata TT",
["castbar_offset_x"] = 11,
["spellname_text_font"] = "Friz Quadrata TT",
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
232,
32,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 12,
["health"] = {
232,
32,
},
["castbar_offset"] = -1,
["spellpercent_text_size"] = 12,
["big_actorname_text_font"] = "Friz Quadrata TT",
["actorname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["spellpercent_text_enabled"] = true,
},
["global_health_width"] = 224,
["global_health_height"] = 28,
["enemyplayer"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Friz Quadrata TT",
["cast"] = {
210,
22,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 12,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
210,
22,
},
["spellname_text_outline"] = "OUTLINE",
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["side"] = 11,
["x"] = -1,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actorname_text_font"] = "Friz Quadrata TT",
["all_names"] = true,
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.2999999821186066,
["castbar_offset_x"] = 11,
["percent_text_size"] = 12,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "Friz Quadrata TT",
["spellname_text_font"] = "Friz Quadrata TT",
["castbar_offset"] = -1,
["quest_enabled"] = true,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 12,
["quest_color_enabled"] = true,
["health_incombat"] = {
232,
32,
},
["health"] = {
232,
32,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_show_health"] = false,
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["actorname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["castbar_offset"] = -1,
["spellpercent_text_font"] = "Friz Quadrata TT",
["big_actortitle_text_font"] = "Friz Quadrata TT",
["cast"] = {
160,
16,
},
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 11,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
160,
16,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["side"] = 11,
["x"] = -1,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["quest_color_neutral"] = {
nil,
0.50196081399918,
0.25098040699959,
},
["big_actorname_text_font"] = "Friz Quadrata TT",
["actorname_text_outline"] = "OUTLINE",
["percent_show_health"] = false,
["percent_text_size"] = 11,
["percent_text_font"] = "Friz Quadrata TT",
["quest_color_enemy"] = {
nil,
0.50196081399918,
0.25098040699959,
},
["castbar_offset_x"] = 8,
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_size"] = 11,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 11,
["health"] = {
176,
24,
},
["health_incombat"] = {
176,
24,
},
["spellname_text_font"] = "Friz Quadrata TT",
["actorname_text_anchor"] = {
["side"] = 10,
["x"] = 3,
},
["level_text_alpha"] = 0.2999999821186066,
["level_text_enabled"] = false,
},
},
["indicator_quest"] = false,
["aura_y_offset"] = 3,
["use_ui_parent"] = true,
["expansion_triggerwipe"] = {
[10] = true,
[9] = true,
},
["focus_texture"] = "Kait",
["cast_statusbar_color_nointerrupt"] = {
0.7803922295570374,
0.250980406999588,
0.250980406999588,
1,
},
["cast_statusbar_use_fade_effects"] = false,
["bossmod_support_bars_enabled"] = false,
["border_thickness"] = 0.4999999701976776,
["resources_settings"] = {
["global_settings"] = {
["show_depleted"] = false,
},
["chr"] = {
["Player-3674-0B4CEAF6"] = "HolyPower",
["Player-3674-0B10664D"] = "Runes",
["Player-3674-0B7E99BA"] = "Chi",
["Player-3674-0B290529"] = "Chi",
["Player-3674-0B6F6C67"] = "ComboPoints",
["Player-3674-0B54DA49"] = "Runes",
["Player-3674-0B1BB2A3"] = "ComboPoints",
["Player-3666-073F2CE7"] = "Chi",
["Player-3674-0B7EE2CB"] = "Chi",
["Player-3674-0B0A2407"] = "Essence",
["Player-3674-0B733AA8"] = "Runes",
["Player-3674-0B7DA606"] = "Chi",
["Player-3674-0B7DEF79"] = "Chi",
["Player-3674-0ABC0676"] = "ArcaneCharges",
["Player-3674-0B7429F4"] = "Runes",
["Player-3674-0B267A73"] = "HolyPower",
["Player-3674-0B6950F5"] = "ComboPoints",
["Player-3674-0B7AA5AA"] = "Chi",
["Player-5764-00087D02"] = "Chi",
["Player-3674-0B782F56"] = "Runes",
["Player-3674-0B436FA0"] = "ComboPoints",
["Player-3674-0B5833AE"] = "Chi",
["Player-3674-0B25F50F"] = "ComboPoints",
["Player-3674-0B1E76C1"] = "SoulShards",
["Player-3674-0B82DA01"] = "HolyPower",
},
},
["health_animation_time_dilatation"] = 2.6199998855591,
["npc_cache"] = {
[158158] = {
"Forge-Guard Hurrul",
"Horrific Vision of Stormwind",
"enUS",
},
[237272] = {
"Underpin's Friend's Broker",
"Excavation Site 9",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[158286] = {
"Reprogrammed Warbot",
"Horrific Vision of Stormwind",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[153760] = {
"Enthralled Footman",
"Horrific Vision of Stormwind",
"enUS",
},
[231312] = {
"Venture Co. Electrician",
"Operation: Floodgate",
"enUS",
},
[158478] = {
"Corruption Tumor",
"Horrific Vision of Stormwind",
"enUS",
},
[159275] = {
"Portal Keeper",
"Horrific Vision of Stormwind",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[230740] = {
"Shreddinator 3000",
"Operation: Floodgate",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[157811] = {
"Lilliam Sparkspindle",
"Horrific Vision of Stormwind",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
},
[229212] = {
"Darkfuse Demolitionist",
"Operation: Floodgate",
"enUS",
},
[233675] = {
"Alleria Windrunner",
"Horrific Vision of Stormwind",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[157813] = {
"Sprite Jumpsprocket",
"Horrific Vision of Stormwind",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
"enUS",
},
[152809] = {
"Alx'kov the Infested",
"Horrific Vision of Stormwind",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
"enUS",
},
[158452] = {
"Mindtwist Tendril",
"Horrific Vision of Stormwind",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
},
[156795] = {
"SI:7 Informant",
"Horrific Vision of Stormwind",
"enUS",
},
[159632] = {
"Cultist Shadowblade",
"Horrific Vision of Stormwind",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[153130] = {
"Greater Void Elemental",
"Horrific Vision of Stormwind",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[152939] = {
"Boundless Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Excavation Site 9",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
"enUS",
},
[233679] = {
"Therum Deepforge",
"Horrific Vision of Stormwind",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[158136] = {
"Inquisitor Darkspeak",
"Horrific Vision of Stormwind",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[230748] = {
"Darkfuse Bloodwarper",
"Operation: Floodgate",
"enUS",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
"enUS",
},
[212739] = {
"Consuming Voidstone",
"The Rookery",
"enUS",
},
[233681] = {
"Magister Umbric",
"Horrific Vision of Stormwind",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[229251] = {
"Venture Co. Architect",
"Operation: Floodgate",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
"enUS",
},
[88314] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[156641] = {
"Enthralled Weaponsmith",
"Horrific Vision of Stormwind",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[231325] = {
"Darkfuse Jumpstarter",
"Operation: Floodgate",
"enUS",
},
[156642] = {
"Enthralled Laborer",
"Horrific Vision of Stormwind",
"enUS",
},
[233684] = {
"Overlord Mathias Shaw",
"Horrific Vision of Stormwind",
"enUS",
},
[239836] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
"enUS",
},
[152722] = {
"Fallen Voidspeaker",
"Horrific Vision of Stormwind",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[233685] = {
"Slavemaster Ul'rok",
"Horrific Vision of Stormwind",
"enUS",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[156837] = {
"Valeera Sanguinar",
"Horrific Vision of Stormwind",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[137713] = {
"Big Money Crab",
"Zandalar",
"enUS",
},
[234900] = {
"Underpin's Adoring Fan",
"Excavation Site 9",
"enUS",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
},
[234901] = {
"Underpin's Well-Connected Friend",
"Excavation Site 9",
"enUS",
},
[157158] = {
"Cultist Slavedriver",
"Horrific Vision of Stormwind",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[234902] = {
"Underpin's Explosive Ally",
"Excavation Site 9",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
"enUS",
},
[234870] = {
"Invading Mite",
"Eco-Dome Al'dani",
"enUS",
},
[158690] = {
"Cultist Tormenter",
"Horrific Vision of Stormwind",
"enUS",
},
[242570] = {
"Haymar the Devout",
"Horrific Vision of Stormwind",
"enUS",
},
[237252] = {
"Underpin's Friend's Agent",
"Excavation Site 9",
"enUS",
},
[160061] = {
"Crawling Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[156949] = {
"Armsmaster Terenson",
"Horrific Vision of Stormwind",
"enUS",
},
[164188] = {
"Horrific Figment",
"Horrific Vision of Stormwind",
"enUS",
},
[156794] = {
"SI:7 Light-Hunter",
"Horrific Vision of Stormwind",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[158146] = {
"Fallen Riftwalker",
"Horrific Vision of Stormwind",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
},
[159633] = {
"Cultist Executioner",
"Horrific Vision of Stormwind",
"enUS",
},
[158373] = {
"Roberto Pupellyverbos",
"Horrific Vision of Stormwind",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[158437] = {
"Fallen Taskmaster",
"Horrific Vision of Stormwind",
"enUS",
},
[234204] = {
"Congealed Clot",
"Excavation Site 9",
"enUS",
},
[159266] = {
"Portal Master",
"Horrific Vision of Stormwind",
"enUS",
},
[87320] = {
"Raider's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[158279] = {
"Haywire Clockwork Rocket Bot",
"Horrific Vision of Stormwind",
"enUS",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[158092] = {
"Fallen Heartpiercer",
"Horrific Vision of Stormwind",
"enUS",
},
[234205] = {
"Corruption Parasite",
"Excavation Site 9",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[152669] = {
"Void Globule",
"Horrific Vision of Stormwind",
"enUS",
},
[158056] = {
"Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[152988] = {
"Faceless Shadowcaller",
"Horrific Vision of Stormwind",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[234206] = {
"Nightmare Crawler",
"Excavation Site 9",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[87317] = {
"Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[236942] = {
"The Underpin",
"Excavation Site 9",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[156145] = {
"Burrowing Appendage",
"Horrific Vision of Stormwind",
"enUS",
},
[234207] = {
"Tainted Feaster",
"Excavation Site 9",
"enUS",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[242209] = {
"Overgorged Mite",
"Eco-Dome Al'dani",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
"enUS",
},
[87318] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[234208] = {
"Hideous Amalgamation",
"Excavation Site 9",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[152704] = {
"Crawling Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[237651] = {
"Lit Fuse",
"Excavation Site 9",
"enUS",
},
[152987] = {
"Faceless Willbreaker",
"Horrific Vision of Stormwind",
"enUS",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[234209] = {
"Coagulated Mass",
"Excavation Site 9",
"enUS",
},
[157812] = {
"Billibub Cogspinner",
"Horrific Vision of Stormwind",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[158315] = {
"Eye of Chaos",
"Horrific Vision of Stormwind",
"enUS",
},
[239437] = {
"Hogger",
"Horrific Vision of Stormwind",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
},
[158411] = {
"Unstable Servant",
"Horrific Vision of Stormwind",
"enUS",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[234210] = {
"Silent Slitherer",
"Excavation Site 9",
"enUS",
},
[158774] = {
"Broken Citizen",
"Horrific Vision of Stormwind",
"enUS",
},
[158284] = {
"Craggle Wobbletop",
"Horrific Vision of Stormwind",
"enUS",
},
[158140] = {
"Frenzied Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[229686] = {
"Venture Co. Surveyor",
"Operation: Floodgate",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
},
[234912] = {
"Ravaging Scavenger",
"Eco-Dome Al'dani",
"enUS",
},
[158371] = {
"Zardeth of the Black Claw",
"Horrific Vision of Stormwind",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[158285] = {
"Tinkered Shieldbot",
"Horrific Vision of Stormwind",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
},
["indicator_scale"] = 1.200000047683716,
["aura_grow_direction"] = 1,
["focus_color"] = {
0.6274510025978088,
0.988235354423523,
0.4431372880935669,
1,
},
["indicator_anchor"] = {
["y"] = -5,
["x"] = 1,
["side"] = 1,
},
["npc_colors"] = {
[173044] = {
true,
false,
"deeppink",
},
[213954] = {
true,
false,
"orange",
},
[212827] = {
true,
false,
"orange",
},
[136643] = {
true,
false,
"orange",
},
[210812] = {
true,
false,
"deeppink",
},
[166299] = {
true,
false,
"deeppink",
},
[136470] = {
true,
false,
"deeppink",
},
[218671] = {
true,
false,
"deeppink",
},
[128969] = {
true,
false,
"orange",
},
[213893] = {
true,
false,
"deeppink",
},
[216338] = {
true,
false,
"orange",
},
[220815] = {
true,
false,
"deeppink",
},
[213338] = {
true,
false,
"deeppink",
},
[163618] = {
true,
false,
"orange",
},
[231325] = {
true,
false,
"orange",
},
[167111] = {
true,
false,
"deeppink",
},
[136139] = {
true,
false,
"orange",
},
[151649] = {
true,
false,
"orange",
},
[220626] = {
true,
false,
"orange",
},
[166302] = {
true,
false,
"deeppink",
},
[130661] = {
true,
false,
"deeppink",
},
[217531] = {
true,
false,
"deeppink",
},
[223770] = {
true,
false,
"deeppink",
},
[239836] = {
true,
false,
"orange",
},
[230740] = {
true,
false,
"orange",
},
[40167] = {
true,
false,
"deeppink",
},
[231312] = {
true,
false,
"deeppink",
},
[207198] = {
true,
false,
"deeppink",
},
[174210] = {
true,
false,
"deeppink",
},
[212453] = {
true,
false,
"deeppink",
},
[210818] = {
true,
false,
"deeppink",
},
[212739] = {
true,
false,
"orange",
},
[223423] = {
true,
false,
"orange",
},
[221979] = {
true,
false,
"deeppink",
},
[223773] = {
true,
false,
"deeppink",
},
[224962] = {
true,
false,
"deeppink",
},
[211121] = {
true,
false,
"orange",
},
[214439] = {
true,
false,
"deeppink",
},
[211228] = {
true,
false,
"deeppink",
},
[223844] = {
true,
false,
"deeppink",
},
[166301] = {
true,
false,
"orange",
},
[220599] = {
true,
false,
"deeppink",
},
[229251] = {
true,
false,
"orange",
},
[166275] = {
true,
false,
"deeppink",
},
[220196] = {
true,
false,
"deeppink",
},
[224219] = {
true,
false,
"deeppink",
},
[133430] = {
true,
false,
"orange",
},
[220195] = {
true,
false,
"deeppink",
},
[212826] = {
true,
false,
"orange",
},
[223775] = {
true,
false,
"deeppink",
},
[166276] = {
true,
false,
"orange",
},
[129370] = {
true,
false,
"deeppink",
},
[208456] = {
true,
false,
"deeppink",
},
[173016] = {
true,
false,
"deeppink",
},
[206704] = {
true,
false,
"orange",
},
[229212] = {
true,
false,
"orange",
},
[130485] = {
true,
false,
"orange",
},
[223776] = {
true,
false,
"deeppink",
},
[221760] = {
true,
false,
"deeppink",
},
[223772] = {
true,
false,
"deeppink",
},
[220141] = {
true,
false,
"deeppink",
},
[224221] = {
true,
false,
"orange",
},
[133432] = {
true,
false,
"deeppink",
},
[219046] = {
true,
false,
"deeppink",
},
[223253] = {
true,
false,
"deeppink",
},
[223777] = {
true,
false,
"deeppink",
},
[207207] = {
true,
false,
"orange",
},
[213741] = {
true,
false,
"orange",
},
[214697] = {
true,
false,
"orange",
},
[170882] = {
true,
false,
"deeppink",
},
[216364] = {
true,
false,
"deeppink",
},
[212412] = {
true,
false,
"deeppink",
},
[212786] = {
true,
false,
"orange",
},
[130435] = {
true,
false,
"orange",
},
[165919] = {
true,
false,
"deeppink",
},
[206697] = {
true,
false,
"deeppink",
},
[209801] = {
true,
false,
"orange",
},
[212793] = {
true,
false,
"deeppink",
},
[210269] = {
true,
false,
"orange",
},
[210539] = {
true,
false,
"orange",
},
[230748] = {
true,
false,
"orange",
},
[214762] = {
true,
false,
"deeppink",
},
[144293] = {
true,
false,
"orange",
},
[129367] = {
true,
false,
"deeppink",
},
[144071] = {
true,
false,
"deeppink",
},
[224732] = {
true,
false,
"deeppink",
},
[223774] = {
true,
false,
"deeppink",
},
[214350] = {
true,
false,
"deeppink",
},
[229686] = {
true,
false,
"deeppink",
},
[163126] = {
true,
false,
"deeppink",
},
[144294] = {
true,
false,
"deeppink",
},
[220946] = {
true,
false,
"orange",
},
[164921] = {
true,
false,
"deeppink",
},
[134232] = {
true,
false,
"deeppink",
},
},
["aura_stack_shadow_color"] = {
nil,
nil,
nil,
0,
},
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["aura_padding"] = 3,
["indicator_worldboss"] = false,
["hook_data"] = {
{
["OptionsValues"] = {
["replaceName"] = false,
["nameplateFlash"] = true,
["colorTick"] = {
1,
1,
1,
1,
},
["colorInterruptSoon"] = {
0.25098040699959,
1,
0.25098040699959,
1,
},
["colorInterruptAvailable"] = {
0.25098040699959,
1,
0.25098040699959,
1,
},
["colorNoInterrupt"] = {
0.80000007152557,
0.80000007152557,
0.80000007152557,
1,
},
["colorProtected"] = {
1,
0.25098040699959,
0.25098040699959,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.50196081399918,
0.50196081399918,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else\n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend",
["Initialization"] = "function (modTable)\n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts =\n    {\n        \n        -- Warrior\n        [1] =\n        {\n            [1] = 6552, -- Pummel (Arms)\n            [2] = 6552, -- Pummel (Fury)\n            [3] = 6552 --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] =\n        {\n            [1] = 96231, -- Rebuke (Holy)\n            [2] = 96231, -- Rebuke (Protection)\n            [3] = 96231 -- Rebuke (Retribution)\n        },\n        \n        -- Hunter\n        [3] =\n        {\n            [1] = 147362, -- Counter Shot (Beast Mastery)\n            [2] = 147362, -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        },\n        \n        -- Rogue\n        [4] =\n        {\n            [1] = 1766, -- Kick (Assassination)\n            [2] = 1766, -- Kick (Outlaw)\n            [3] = 1766 -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] =\n        {\n            [1] = nil,\n            [2] = nil,\n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] =\n        {\n            [1] = 47528, -- Mind Freeze (Blood)\n            [2] = 47528, -- Mind Freeze (Frost)\n            [3] = 47528 -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] =\n        {\n            [1] = 57994, -- Wind Shear (Elemental)\n            [2] = 57994, -- Wind Shear (Enhancement)\n            [3] = 57994 -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] =\n        {\n            [1] = 2139, -- Counterspell (Arcane)\n            [2] = 2139, -- Counterspell (Fire)\n            [3] = 2139 -- Counterspell (Frost)\n        },\n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] =\n        {\n            [1] = 116705, -- Spear Hand Strike (Brewmaster)\n            [2] = 116705, -- Spear Hand Strike (Mistweaver)\n            [3] = 116705 -- Spear Hand Strike (Windwalker)\n        },\n        \n        -- Druid\n        [11] =\n        {\n            [1] = 78675, -- Solar Beam (Balance)\n            [2] = 106839, -- Skull Bash (Feral)\n            [3] = 106839, -- Skull Bash (Guardian)\n            [4] = 106839 -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] =\n        {\n            [1] = 183752, -- Disrupt (Havoc)\n            [2] = 183752 -- Disrupt (Vengeance)\n        },\n        \n        -- Evoker\n        [13] =\n        {\n            [1] = 351338, -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \nend\n\n\n",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)\n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellID = castBar.SpellID\n            if BigWigsAPI then\n                spellName =  BigWigsAPI.GetSpellRename(spellID) or castBar.spellName\n            else\n                spellName = castBar.spellName\n            end\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)\n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then\n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end\n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then\n                        local castText = currentText .. \" - \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end\n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cd = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration  =  cd.startTime, cd.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then\n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end\n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)\n                end\n                \n            end\n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else\n            -- Otherwise no interrupt available    \n            return nil\n        end\n    end\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local GCD=C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = GCD.startTime, GCD.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local info = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = info.startTime, info.duration\n        local spellReadyTime = spellStart + spellDuration\n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["Time"] = 1753401350,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/L6ZlsbPEC/9",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1349,
["semver"] = "1.2.3",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = 9,
["PlaterCore"] = 1,
["Name"] = "Enhanced Enemy Castbar",
["Options"] = {
{
["Type"] = 5,
["Name"] = "CUSTOM CAST BAR COLORS",
["Value"] = "Feature - Custom cast bar coloring:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable custom colored enemy cast bars.",
["Value"] = true,
["Key"] = "showInterruptColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Value"] = true,
["Key"] = "showSecondaryInterrupts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is available.",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Key"] = "colorInterruptAvailable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Key"] = "colorInterruptSoon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is unavailable.",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Key"] = "colorNoInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Key"] = "colorSecondaryInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Name"] = "Color for casts that are protected/un-interruptable.",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Key"] = "colorProtected",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Key"] = "colorTick",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Name"] = "Settings Target Name",
["Value"] = "Feature - Show name of target in the cast bar:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show the name of cast targets in the cast bar.",
["Value"] = true,
["Key"] = "showTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Hide my name when not in a party.",
["Value"] = true,
["Key"] = "hideNameSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Show \"Me\" instead of my character name.",
["Value"] = true,
["Key"] = "replaceName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Value"] = 60,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castNameSize",
},
{
["Type"] = 5,
["Name"] = "Settings Border Flash",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Value"] = false,
["Key"] = "nameplateFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when not in a party.",
["Value"] = true,
["Key"] = "hideNameplateFlashSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Value"] = true,
["Key"] = "hideFlashAsTank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s < 5 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    local IconRowFunctions = DF.IconRowFunctions or DF.IconMixin\n    IconRowFunctions.FormatCooldownTimeOrig = IconRowFunctions.FormatCooldownTimeOrig or IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1753401349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mULsbUUxJ/13",
["Icon"] = "INTERFACE\\ICONS\\Ability_BossMagistrix_TimeWarp2",
["Enabled"] = true,
["Revision"] = 251,
["semver"] = "1.0.12",
["Author"] = "Viash-Thrall",
["Desc"] = "Overwrites the Plater time formatting to show second fractions.",
["Prio"] = 99,
["version"] = 13,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Format Aura Timers",
["Value"] = true,
["Key"] = "formatAuraTimers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Format Buff Special Timers",
["Value"] = true,
["Key"] = "formatBuffSpecialTimers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Detailed Time Format",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"#FF4040\",\n        okay = \"#FFFFFF\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 5.0,\n    }\n    \nend\n\n\n",
},
["Time"] = 1753401351,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CjOSTakvH/1",
["Icon"] = "Interface\\Timer\\Challenges-Logo",
["Enabled"] = true,
["Revision"] = 125,
["semver"] = "1.0.0",
["Author"] = "Ditador-Azralon",
["Desc"] = "Change the color of the aura timer by it's time left",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Paint Aura Timers",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = .5 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Time"] = 1741738545,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 202,
["semver"] = "",
["Author"] = "????????-Illidan",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Debuff Border",
},
{
["OptionsValues"] = {
["showBigIcon"] = false,
["SpellIconXOffset"] = 0,
["ReplaceDefaultBorder"] = false,
["TargetBorderSize"] = 1.5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Destructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.healthBar.border then unitFrame.healthBar.border:Hide() end\n    if unitFrame.healthBar.targetBorder then unitFrame.healthBar.targetBorder:Hide() end\n    if unitFrame.castBar.border then unitFrame.castBar.border:Hide() end\n    if unitFrame.castBar.Icon then unitFrame.castBar.Icon:Hide() end\n    if unitFrame.castBar.IconBorder then unitFrame.castBar.IconBorder:Hide() end\n    if unitFrame.castBar.BorderShield then unitFrame.castBar.BorderShield:Hide() end\nend",
["Initialization"] = "function (modTable)\n    \n    function modTable.UpdateIconPosition(unitFrame, envTable, modTable)\n        local castBar = unitFrame.castBar\n        local icon = unitFrame.castBar.Icon\n        local shield = unitFrame.castBar.BorderShield\n        icon:Hide()\n        castBar.IconBorder:Hide()\n        if (modTable.config.ShowSpellIcon) then\n            icon:ClearAllPoints()\n            if (modTable.config.showBigIcon) then\n                icon:SetPoint(\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            else\n                icon:SetPoint(\"topright\", unitFrame.castBar, \"topleft\", modTable.config.SpellIconXOffset, envTable.IconSizeOffset)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            end\n            icon:Show()\n            if modTable.config.SpellIconBorder then\n                castBar.IconBorder:SetVertexColor(\n                    DetailsFramework:ParseColors(modTable.config.SpellIconBorderColor)\n                )\n                castBar.IconBorder:SetBorderSizes(\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize\n                )\n                castBar.IconBorder:UpdateSizes()\n                castBar.IconBorder:Show()\n            end\n        end\n        \n        if modTable.config.CastBarBorder then\n            castBar.border:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.CastBarBorderColor)\n            )\n            castBar.border:SetBorderSizes(\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize\n            )\n            castBar.border:UpdateSizes()\n            castBar.border:Show()\n        else\n            castBar.border:Hide()\n        end\n        \n        if (modTable.config.ShowShieldIcon and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            shield:SetSize(modTable.config.ShieldIconWidth, modTable.config.ShieldIconHeight)\n            shield:ClearAllPoints()\n            shield:SetPoint( \"center\", castBar, \"left\", modTable.config.ShieldIconXOffset, modTable.config.ShieldIconYOffset )\n        else\n            shield:Hide()\n        end\n    end\n    \n    function modTable.UpdateBorder(unitFrame, envTable, modTable, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        local targetBorder = unitFrame.healthBar.targetBorder\n        local defaultBorder = unitFrame.healthBar.border\n        \n        targetBorder:Hide()\n        defaultBorder:Hide()\n        \n        if modTable.config.ReplaceDefaultBorder then\n            targetBorder = unitFrame.healthBar.border\n            targetBorder:SetFrameStrata(\"HIGH\")\n            targetBorder:Show()\n        else\n            unitFrame.healthBar.border:Show()\n            if unitFrame.IsTarget then\n                targetBorder:Show()\n            end\n        end\n        \n        if casting==true then\n            if modTable.config.ShowSpellIcon then\n                targetBorder:ClearAllPoints()\n                if modTable.config.ExpandTargetBorder then\n                    if modTable.config.showBigIcon then\n                        targetBorder:SetPoint(\"topleft\", castBar.Icon, \"topleft\", 0, 0)\n                    else\n                        targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                    end\n                else\n                    targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                end\n                if modTable.config.ExpandTargetBorder then\n                    targetBorder:SetPoint(\"bottomright\", castBar, \"bottomright\", 0, 0)\n                else\n                    targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n                end\n            else\n                targetBorder:ClearAllPoints()\n                targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n            end\n            \n        elseif casting==false then\n            targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n            targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0) \n        end\n        \n        if unitFrame.IsTarget then\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.TargetBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize\n            )\n            targetBorder:UpdateSizes()\n        else\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(envTable.DefaultBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize\n            )\n            targetBorder:UpdateSizes()\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    modTable.UpdateBorder (unitFrame, envTable, modTable, true)\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    self.ThrottleUpdate = -1\nend\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Any settings changed here will require you to disable this plater mod,\n    -- then re-enable it by checking the box in the list on the left hand side of the window\n    \n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    -- Settings for the shield for non interruptible casts\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    \n    envTable.DefaultBorderSize  = Plater.db.profile.border_thickness\n    envTable.DefaultBorderColor = Plater.db.profile.border_color\n    \n    -- Create a new health bar target border\n    if not unitFrame.healthBar.targetBorder then\n        unitFrame.healthBar.targetBorder = CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.healthBar.targetBorder:Hide()\n    end\n    \n    -- Create a frame for the spell icon border\n    if not unitFrame.castBar.IconOverlayFrame then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end\n    \n    -- Create a frame for the cast bar border\n    if not unitFrame.castBar.border then\n        unitFrame.castBar.border = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.border:SetIgnoreParentScale(false)\n    end\n    \n    -- Hook into when the cast bar hides so we can update the border with casting set to false\n    -- Note: This hook needs to be the last thing in the constructor as it may immediately call\n    -- UpdateBorder and we need to make sure all of the frames are created first\n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(\n            unitFrame.castBar, \n            \"Hide\",\n            function()\n                modTable.UpdateBorder(unitFrame, envTable, modTable, false)\n            end\n        )\n        unitFrame.castBar.borderChangeHooked = true\n    end\nend",
},
["Time"] = 1754339130,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 1651,
["semver"] = "",
["Author"] = "Vahra-Tichondrius",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon and cast bar.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Border Settings",
["Value"] = "Border Settings",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Target Border Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "TargetBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of the targeted nameplate",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the targeted nameplate",
["Min"] = 0,
["Name"] = "Target Border Size",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "TargetBorderSize",
},
{
["Type"] = 4,
["Name"] = "Expand Target Border",
["Value"] = true,
["Key"] = "ExpandTargetBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Expands the target border around the cast icon and cast bar",
},
{
["Type"] = 4,
["Name"] = "Replace Default Border (/reload)",
["Value"] = true,
["Key"] = "ReplaceDefaultBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Replace the default border instead of creating a new one. You may have to /reload when changing this option",
},
{
["Type"] = 5,
["Name"] = "Cast Bar Settings",
["Value"] = "Cast Bar Settings",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Note",
["Value"] = "Note, to get this to look right you may have",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Note",
["Value"] = "to update the Y offset of the cast bar",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Note",
["Value"] = "under Plater's \"Enemy Npc\" settings",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Border",
["Value"] = true,
["Key"] = "CastBarBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should show a border around the enemy cast bar",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the enemy cast bar",
["Min"] = 0,
["Name"] = "Cast Bar Border Size",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "CastBarBorderSize",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "CastBarBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of enemy cast bar",
},
{
["Type"] = 5,
["Name"] = "Cast Icon Settings",
["Value"] = "Cast Icon Settings",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Spell Icon",
["Value"] = true,
["Key"] = "ShowSpellIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should show the spell icon of the targets cast",
},
{
["Type"] = 4,
["Name"] = "Show Big Icon",
["Value"] = false,
["Key"] = "showBigIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Spell Icon Border",
["Value"] = true,
["Key"] = "SpellIconBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should Show a border around the spell icon",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the targeted nameplate",
["Min"] = 0,
["Name"] = "Spell Icon Border Size",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "SpellIconBorderSize",
},
{
["Type"] = 1,
["Name"] = "Spell Icon Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "SpellIconBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of target's spell icon",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The X Offset of the Spell Icon",
["Min"] = -10,
["Name"] = "Spell Icon X Offset",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "SpellIconXOffset",
},
{
["Type"] = 5,
["Name"] = "Shield Icon Settings",
["Value"] = "Shield Icon Settings",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Shield Icon",
["Value"] = false,
["Key"] = "ShowShieldIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show a shield icon next to the cast bar for uninterruptable spells",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The X offset of the shield icon",
["Min"] = -10,
["Name"] = "Shield Icon X Offset",
["Value"] = -4.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ShieldIconXOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The Y offset of the shield icon",
["Min"] = -10,
["Name"] = "Shield Icon Y Offset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ShieldIconYOffset",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "The width of the shield icon",
["Min"] = 0,
["Name"] = "Shield Icon Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ShieldIconWidth",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "The height of the shield icon",
["Min"] = 0,
["Name"] = "Shield Icon Height",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ShieldIconHeight",
},
},
["LastHookEdited"] = "",
["Name"] = "Target Border",
},
{
["OptionsValues"] = {
["colour_names"] = false,
["show_elite"] = false,
["show_elite_text"] = true,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local eliteToHex = {\n        [1] = \"FFFFCC00\", -- Elite\n        [2] = \"FFCCCCCC\", -- Rare\n        [3] = \"FFFF8040\", -- Rare Elite\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Rare / Elite Addition\n        if modTable.config[\"show_elite\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" then\n                local color = eliteToHex[1]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rare\" then\n                local color = eliteToHex[2]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rareelite\" then\n                local color = eliteToHex[3]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        if modTable.config[\"show_elite_text\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" and not IsInRaid() then\n                name = name .. \" [E]\"\n            elseif eliteType == \"rare\" and not IsInRaid() then\n                name = name .. \" [R]\"\n            elseif eliteType == \"rareelite\" and not IsInRaid() then\n                name = name .. \" [RE]\"\n            end\n        end\n        \n        -- 4) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1753401491,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 385,
["semver"] = "",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Shorten Names",
["Value"] = true,
["Key"] = "short_names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Name"] = "Colour by Raidmark",
["Value"] = true,
["Key"] = "colour_names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
{
["Type"] = 4,
["Name"] = "Colour by Unit Status",
["Value"] = true,
["Key"] = "show_elite",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "show_elite_text",
["Value"] = true,
["Name"] = "Concatenate Name with Unit Status",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
["Name"] = "Name Shortener",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function(self, unitId, unitFrame, envTable)\n    unitFrame.castBar.ScheduleToHide = function(self) self:Hide() end\nend",
},
["Time"] = 1753401352,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Avade-Illidan",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Hide Interrupted",
},
{
["OptionsValues"] = {
["raidMarkerXOff"] = 1,
["unitNameXOffRaidMarker"] = 3,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.updatePosition = function(unitFrame)\n        local unitNameXOff = modTable.config.unitNameXOff -- Unit Name X Offset\n        local unitNameXOffRaidMarker = modTable.config.unitNameXOffRaidMarker -- Unit Name X Offset with Raid Marker\n        local raidMarkerXOff = modTable.config.raidMarkerXOff\n        local hasRaidTarget = unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown() and unitFrame.PlaterRaidTargetFrame\n        if hasRaidTarget then\n            unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n            unitFrame.PlaterRaidTargetFrame:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", raidMarkerXOff, 0)\n            unitFrame.PlaterRaidTargetFrame:SetSize(18, 18)\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.PlaterRaidTargetFrame, \"RIGHT\", unitNameXOffRaidMarker, 0)\n        else\n            unitFrame.unitName:ClearAllPoints()\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", unitNameXOff, 0)\n        end\n    end\nend",
["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
},
["Time"] = 1754339088,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["raid"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458724,
["Enabled"] = true,
["Revision"] = 1176,
["semver"] = "",
["Author"] = "Ретцер-Ревущий фьорд",
["Desc"] = "Aligns Raid Marker to the Left of the Unit Name.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset without Raid Marker",
["Min"] = -99,
["Name"] = "Unit Name (No Raid Marker)",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "unitNameXOff",
},
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset with Raid Marker",
["Min"] = -99,
["Name"] = "Unit Name (Raid Marker)",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "unitNameXOffRaidMarker",
},
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset for Raid Marker",
["Min"] = -99,
["Name"] = "Raid Marker",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "raidMarkerXOff",
},
},
["LastHookEdited"] = "",
["Name"] = "Target Marker",
},
{
["OptionsValues"] = {
["oneColor"] = {
0,
1,
0.01176470704376698,
1,
},
["twoColor"] = {
0,
0.501960813999176,
1,
1,
},
},
["LastHookEdited"] = "",
["UID"] = "0x6490c26f17d91913",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.SetNameplateColors(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    --IDs of dots, you can change them to easier adjust to different classes, change only numbers\n    modTable.doubleDebuffs = {\n        {34914, 335467}, --Vampiric Touch + Devouring Plague\n        {188389, 334168}, --Flame Shock + Lashing Flames\n        {164815, 164812}, --Sunfire + Moonfire\n        {703, 1943}, --Garrote + Rupture\n        {980, 146739}, --Agony + Corruption\n        {980, 445474}, --Agony + Wither\n    }\n    \n    modTable.singleDebuffs = {\n        34914, --Vampiric Touch\n        589,--Shadow Word: Pain\n        20421, --Purge the Wicked\n        188389, --Flame Shock\n        157736, --Immolate\n        217200, --Barbed Shot\n        228287, --Mark of the Crane\n        445474, --Wither\n        164815, --Sunfire\n        164812, --Moonfire\n        155722, --Rake\n        980, --Agony\n        146739, --Corruption\n        460553, --Doom\n    }\n    \n    modTable.rOption = modTable.config.resetOption\n    \n    modTable.matchMultipleBuffs = {}\n    \n    for _, v in ipairs (modTable.doubleDebuffs) do\n        local buff = {\n            auras = v,\n            nameplateColor = modTable.config.twoColor\n        }\n        table.insert(modTable.matchMultipleBuffs, buff)\n    end\n    \n    for _, v in ipairs (modTable.singleDebuffs) do\n        local buff = {\n            auras = {v},\n            nameplateColor = modTable.config.oneColor\n        }\n        table.insert(modTable.matchMultipleBuffs, buff)\n    end\nend\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- DO NOT TOUCH\n    local DF = _G [\"DetailsFramework\"]\n    \n    -- Function to match multiple colors\n    function envTable.matchMultiple(unitFrame)\n        for _, v in ipairs(modTable.matchMultipleBuffs) do      \n            local match = true\n            for _, aura in ipairs(v.auras) do\n                if not Plater.NameplateHasAura (unitFrame, aura) then\n                    match = false\n                    break\n                end\n            end\n            \n            if match then\n                local nameString = unitFrame.healthBar.unitName\n                DF:SetFontColor (nameString, v.nameplateColor)\n                \n                return\n            else\n                -- reset colour\n                if (modTable.rOption) then\n                    local nameString = unitFrame.healthBar.unitName\n                    DF:SetFontColor (nameString, 1,1,1, 1)\n                end\n                \n            end\n        end\n    end\n    \n    -- Function to set Colors\n    function envTable.SetNameplateColors(unitFrame)\n        local colored = envTable.matchMultiple(unitFrame)\n    end\n    \nend",
},
["Time"] = 1753401349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/-OwVE8C1v/1",
["Enabled"] = true,
["Revision"] = 1541,
["semver"] = "1.0.0",
["Author"] = "Megabelly-Silvermoon",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Debuff Name Color Change",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "label1",
["Value"] = "Settings:",
["Name"] = "Settings:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "oneColor",
["Value"] = {
1,
0.50196081399918,
0,
1,
},
["Name"] = "One Debuff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour for targets with 1 debuff",
},
{
["Type"] = 1,
["Key"] = "twoColor",
["Value"] = {
0.13333334028721,
0.54509806632996,
0.13333334028721,
1,
},
["Name"] = "Two Debuffs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour for targets with a set of 2 debuffs",
},
{
["Type"] = 5,
["Key"] = "label4",
["Value"] = "Miscellaneous:",
["Name"] = "Miscellaneous:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetOption",
["Value"] = true,
["Name"] = "Reset colour after expire",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Resets colour after debuf expires. Toggling on will prevent sometimes lingering colour on nameplates/borders. Toggling off makes mod compatible with other nameplate colouring mods.",
},
},
["HooksTemp"] = {
},
["version"] = 1,
},
},
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 12,
["extra_icon_caster_outline"] = "OUTLINE",
["auras_per_row_amount2"] = 5,
["disable_omnicc_on_auras"] = true,
["aura_height2"] = 26,
["bossmod_support_enabled"] = false,
["ghost_auras"] = {
["enabled"] = true,
["width"] = 28,
["height"] = 28,
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["blizzard_nameplate_large_font_size"] = 12,
["cast_colors"] = {
[420907] = {
false,
"white",
"",
},
},
["range_check_enabled"] = false,
["aura_border_colors"] = {
["enrage"] = {
0,
0,
0,
},
["steal_or_purge"] = {
nil,
0,
0,
},
["offensive"] = {
nil,
0,
0,
},
["crowdcontrol"] = {
0,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["quick_hide"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate On You"] = 12,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Is Cast Bar [P]"] = 1,
["Fixate"] = 11,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Cast - Heal Cut [P]"] = 3,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Cast - Alert + Timer [P]"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Add - Warning [P]"] = 5,
["Cast - Glowing [P]"] = 10,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 12,
["Cast - Quick Flash"] = 2,
["Cast - Very Important"] = 15,
["Unit - Show Energy"] = 11,
},
["target_highlight_color"] = {
1,
1,
},
["cast_statusbar_color_channeling"] = {
nil,
nil,
nil,
1,
},
["extra_icon_anchor"] = {
["x"] = -14,
},
["extra_icon_wide_icon"] = false,
["cast_statusbar_spark_hideoninterrupt"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.5,
["castbar_target_font"] = "Friz Quadrata TT",
["semver"] = "1.0.10",
["bossmod_aura_glow_expiring"] = true,
["aura_frame2_anchor"] = {
["y"] = 3,
["side"] = 1,
},
["use_name_translit"] = true,
["cast_statusbar_texture"] = "Atrocity",
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
["indicator_faction"] = false,
["extra_icon_height"] = 34,
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.5,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["ui_parent_scale_tune"] = 1,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Atrocity",
["ui_parent_target_strata"] = "BACKGROUND",
["extra_icon_width"] = 34,
["aura_show_enrage"] = true,
["health_statusbar_texture"] = "Atrocity",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Execute Range"] = 1,
["Aura Reorder"] = 3,
},
["cast_statusbar_color"] = {
0.8549020290374756,
0.7725490927696228,
0.3607843220233917,
1,
},
["update_throttle"] = 0.5,
["minor_width_scale"] = 0.99999994039536,
["cast_statusbar_interrupt_anim"] = false,
["indicator_pet"] = false,
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["aura_frame1_anchor"] = {
["y"] = 3,
["side"] = 7,
},
["tocversion"] = 110107,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["indicator_rare"] = false,
["extra_icon_timer_font"] = "Friz Quadrata TT",
["not_affecting_combat_alpha"] = 1,
["cast_statusbar_bgcolor"] = {
0.13333334028721,
0.13333334028721,
0.13333334028721,
1,
},
["cast_statusbar_color_finished"] = {
0.3921568989753723,
0.9960784912109375,
0.6392157077789307,
},
["extra_icon_stack_font"] = "Friz Quadrata TT",
["indicator_elite"] = false,
["aura_height"] = 26,
["non_targeted_alpha_enabled"] = true,
["indicator_spec"] = false,
["cast_statusbar_bgtexture"] = "Atrocity",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["auras_per_row_amount"] = 5,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.9764706492424011,
0.5411764979362488,
0.4745098352432251,
},
["anothertank"] = {
0.729411780834198,
0.917647123336792,
},
["aggro"] = {
0.5058823823928833,
0.4235294461250305,
0.9137255549430847,
},
["noaggro"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["nocombat"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["pulling"] = {
0.3098039329051971,
0.4509804248809815,
0.6313725709915161,
},
},
},
["cast_statusbar_spark_filloninterrupt"] = false,
["border_color"] = {
nil,
nil,
nil,
1,
},
["extra_icon_stack_size"] = 12,
["health_cutoff_upper"] = false,
["color_override_colors"] = {
[3] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
[4] = {
0.8509804606437683,
0.8156863451004028,
0.5882353186607361,
},
[5] = {
0.5058823823928833,
0.7803922295570374,
0.5137255191802979,
},
},
["target_shady_alpha"] = 0.59999996423721,
["health_statusbar_bgcolor"] = {
0.13333334028721,
0.13333334028721,
0.13333334028721,
1,
},
["tap_denied_color"] = {
0.40000003576279,
0.40000003576279,
0.40000003576279,
},
["bossmod_icons_anchor"] = {
["y"] = 30,
["x"] = 0,
["side"] = 8,
},
["target_shady_combat_only"] = false,
["aura2_grow_direction"] = 3,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "0",
["nameplateSelectedAlpha"] = "1",
["nameplateLargeTopInset"] = "0.049999997019768",
["nameplateShowPersonalCooldowns"] = "0",
["nameplateMotionSpeed"] = "0.024999998509884",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1",
["nameplateOverlapH"] = "0.79999995231628",
["nameplateShowFriendlyBuffs"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "40",
["nameplateOtherTopInset"] = "0.049999997019768",
["nameplatePlayerMaxDistance"] = "40",
["nameplateOccludedAlphaMult"] = "0.19999998807907",
["nameplateOverlapV"] = "1.6000000238419",
["nameplateShowEnemies"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateShowSelf"] = "0",
},
["hover_highlight_alpha"] = 0.25,
["extra_icon_use_blizzard_border_color"] = false,
["login_counter"] = 16209,
["extra_icon_caster_name"] = false,
["aura_timer_text_font"] = "Friz Quadrata TT",
["extra_icon_timer_outline"] = "OUTLINE",
["pet_height_scale"] = 0.99999994039536,
["blizzard_nameplate_font_size"] = 10,
["target_highlight"] = false,
["profile_name"] = "FragUI",
["aura_tracker"] = {
["debuff"] = {
217200,
371472,
292626,
422683,
},
["buff_tracked"] = {
["166591"] = true,
["273432"] = true,
["312926"] = true,
["262092"] = true,
["303941"] = true,
["265160"] = true,
["209859"] = true,
["233210"] = true,
["342073"] = true,
},
["buff"] = {
412012,
412695,
},
["debuff_tracked"] = {
["389809"] = true,
["292451"] = true,
["312595"] = true,
},
["debuff_banned"] = {
["355759"] = true,
["280494"] = true,
["391568"] = true,
["270569"] = true,
["345801"] = true,
["345219"] = true,
["368802"] = true,
["359168"] = true,
["345547"] = true,
["392566"] = true,
["420092"] = true,
["284678"] = true,
["359078"] = true,
["359180"] = true,
["317583"] = true,
["411717"] = true,
["375583"] = true,
["381743"] = true,
["328287"] = true,
["356181"] = true,
["356372"] = true,
["333526"] = true,
["426534"] = true,
["426783"] = true,
["428103"] = true,
["344748"] = true,
["376974"] = true,
["417419"] = true,
["269576"] = true,
["420054"] = true,
["392885"] = true,
["436582"] = true,
["390276"] = true,
["440339"] = true,
["115994"] = true,
["410790"] = true,
["283649"] = true,
["430184"] = true,
["340007"] = true,
["302564"] = true,
["425180"] = true,
["394453"] = true,
["403952"] = true,
["353773"] = true,
["403696"] = true,
["435476"] = true,
["379021"] = true,
["356329"] = true,
["372127"] = true,
["373305"] = true,
["394327"] = true,
["440340"] = true,
["411715"] = true,
["390155"] = true,
["329449"] = true,
["324260"] = true,
["331934"] = true,
["331016"] = true,
["390271"] = true,
["258883"] = true,
["367902"] = true,
["353793"] = true,
["418339"] = true,
},
["buff_banned"] = {
["206150"] = true,
["299450"] = true,
["333553"] = true,
["352854"] = true,
["61574"] = true,
["411635"] = true,
["61573"] = true,
},
},
["extra_icon_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["aura_stack_font"] = "Friz Quadrata TT",
["cast_statusbar_color_interrupted"] = {
0.7803922295570374,
0.250980406999588,
0.250980406999588,
},
["blizzard_nameplate_font"] = "Friz Quadrata TT",
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 12,
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["aura_sort"] = true,
["number_region_first_run"] = true,
["target_highlight_height"] = 25,
["patch_version"] = 39,
["health_selection_overlay"] = "Atrocity",
["health_selection_overlay_alpha"] = 0,
["version"] = 11,
["indicator_raidmark_scale"] = 0.99999994039536,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["bossmod_cooldown_text_enabled"] = false,
["extra_icon_caster_font"] = "Friz Quadrata TT",
["pet_width_scale"] = 0.99999994039536,
["dps"] = {
["colors"] = {
["solo"] = {
0.501960813999176,
0.501960813999176,
},
["aggro"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["notontank"] = {
0.501960813999176,
0.501960813999176,
},
["noaggro"] = {
0.5058823823928833,
0.4235294461250305,
0.9137255549430847,
},
["pulling"] = {
nil,
0.7725490927696228,
0.658823549747467,
},
},
},
["indicator_raidmark_anchor"] = {
["side"] = 9,
["x"] = 0,
},
["aura_alpha"] = 1,
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\transparent",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["first_run3"] = true,
["aura_timer_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["castbar_target_text_size"] = 11,
["cast_statusbar_spark_width"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator7",
},
["Default"] = {
["target_shady_combat_only"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --SETTINGS: NAMEPLATE\n    envTable.NameplateColor =\"gray\"\n    \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --insert code here\n    \nend",
["ScriptType"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Time"] = 1743409167,
["semver"] = "1.0.7",
["url"] = "https://wago.io/Dq5DaC3b4/8",
["Icon"] = 135964,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Revision"] = 117,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = 8,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- if in combat\n    if (InCombatLockdown()) then\n        --update nameplate color\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    \nend\n\n\n",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    \n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "Invalid Target",
["Prio"] = 99,
["SpellIds"] = {
383840,
379256,
388084,
369031,
336499,
347097,
328921,
329636,
350857,
365381,
367573,
361934,
362020,
352016,
260189,
261265,
261266,
271590,
202455,
197422,
232156,
229489,
235308,
235089,
376705,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- if in combat\n    if (InCombatLockdown()) then\n        --update nameplate color\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --SETTINGS: NAMEPLATE\n    envTable.NameplateColor =\"gray\"\n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1743281252,
["semver"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 162,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Name"] = "Add - Health Markers [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
"214840",
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1743281703,
["semver"] = "",
["url"] = "",
["Icon"] = 610472,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 94,
["Options"] = {
},
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Name"] = "Aura is Shield [P]",
["Prio"] = 99,
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1743409175,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
["url"] = "",
["NpcNames"] = {
},
["semver"] = "",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1286,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Prio"] = 99,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Abilities casted on the tank.",
["Name"] = "Cast - Tankbuster [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["PlaterCore"] = 1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
},
},
["npcs_renamed"] = {
[173044] = "Stitcher",
[190381] = "Rotburst",
[216340] = "Sentry",
[179733] = "Fish Stick",
[207796] = "Burning",
[230740] = "Shreddinator",
[114632] = "Attendant",
[214012] = "Dark ",
[98521] = "Etheldrin",
[220401] = "Detector",
[194897] = "Stormsurge Totem",
[164707] = "Purple Slime",
[227300] = "Big Spawn",
[174843] = "Maitre D",
[214350] = "Turned",
[199368] = "Big Crystal",
[144298] = "Mk III",
[165010] = "Purple Slime",
[176523] = "Painsmith",
[114627] = "Terror",
[192333] = "Alpha",
[229537] = "Emissary",
[151657] = "Bomb",
[197219] = "Big Lasher",
[214287] = "Bad Totem",
[204560] = "Incorporeal",
},
["saved_cvars_last_change"] = {
["nameplateShowOnlyNames"] = "Interface/AddOns/WeakAuras/WeakAuras.lua:3145",
["nameplateSelectedAlpha"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5104",
["nameplateShowPersonalCooldowns"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplatePersonalShowAlways"] = "...e/AddOns/WeakAuras/AuraEnvironmentWrappedSystems.lua:51",
["nameplateMotionSpeed"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriendlyNPCs"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateSelectedScale"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateOverlapH"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriendlyBuffs"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMinAlpha"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMinAlphaDistance"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMotion"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateLargerScale"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5530",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5104",
["nameplatePlayerMaxDistance"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5510",
["nameplateOccludedAlphaMult"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowFriends"] = "[C]: ?\n[C]: in function 'SetCVar'\n[Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua]:76: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:264: in function 'SetValueDerived'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:110: in function 'ApplyValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:86: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua]:224: in function 'SetValue'\n[FRIENDNAMEPLATES]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
["nameplateShowEnemies"] = "...dOns/WagoUI/libs/LibAddonProfiles/modules/Plater.lua:120",
["nameplateShowSelf"] = "...e/AddOns/WeakAuras/AuraEnvironmentWrappedSystems.lua:51",
["NamePlateVerticalScale"] = "Interface/AddOns/WeakAuras/WeakAuras.lua:3145",
},
["aura_cache_by_name"] = {
},
["blizzard_nameplate_font_override_enabled"] = true,
["target_shady_enabled"] = false,
["aura2_y_offset"] = 3,
["extra_icon_caster_size"] = 12,
["buffs_on_aura2"] = true,
["indicator_quest"] = false,
["expansion_triggerwipe"] = {
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.7803922295570374,
0.250980406999588,
0.250980406999588,
1,
},
["bossmod_support_bars_enabled"] = false,
["color_override_colors"] = {
[3] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
[4] = {
0.8509804606437683,
0.8156863451004028,
0.5882353186607361,
},
[5] = {
0.5058823823928833,
0.7803922295570374,
0.5137255191802979,
},
},
["npc_cache"] = {
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[244137] = {
"Shadowguard Arcanotech",
"Kriegval's Rest",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[247464] = {
"Under-Lord Vik'tis",
"Kriegval's Rest",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[244138] = {
"Shadeye Observer",
"Kriegval's Rest",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[244140] = {
"Shadowguard Steelsoul",
"Kriegval's Rest",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
"enUS",
},
[44819] = {
"Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Rookery",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[167892] = {
"Tormented Soul",
"Halls of Atonement",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
},
[234933] = {
"Taah'bat",
"Eco-Dome Al'dani",
"enUS",
},
[227513] = {
"Tala",
"The Spiral Weave",
},
[45268] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[227514] = {
"Velo",
"The Spiral Weave",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
},
[234935] = {
"Soul-Scribe",
"Eco-Dome Al'dani",
"enUS",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
},
[156641] = {
"Enthralled Weaponsmith",
"Horrific Vision of Stormwind",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[156642] = {
"Enthralled Laborer",
"Horrific Vision of Stormwind",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[158690] = {
"Cultist Tormenter",
"Horrific Vision of Stormwind",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[178394] = {
"Cartel Lackey",
"Tazavesh, the Veiled Market",
"enUS",
},
[101639] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
"enUS",
},
[244410] = {
"Pactsworn Sandreaver",
"Kriegval's Rest",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[244922] = {
"Shadowguard Phaseblade",
"Manaforge Omega",
"enUS",
},
[43927] = {
"Harbinger of Darkness",
"Lost City of the Tol'vir",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[157158] = {
"Cultist Slavedriver",
"Horrific Vision of Stormwind",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[152809] = {
"Alx'kov the Infested",
"Horrific Vision of Stormwind",
"enUS",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
},
[233154] = {
"Stagehand",
"Liberation of Undermine",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
"enUS",
},
[137713] = {
"Big Money Crab",
"Zandalar",
"enUS",
},
[215755] = {
"Ascended Overseer",
"Khaz Algar",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[215756] = {
"Ascended Webwarden",
"Khaz Algar",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
"enUS",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[237252] = {
"Underpin's Friend's Agent",
"Excavation Site 9",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
},
[244418] = {
"Pactsworn Wildcaller",
"Kriegval's Rest",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[190174] = {
"Hypnosis Bat",
"Tazavesh, the Veiled Market",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
},
[53141] = {
"Molten Surger",
"Firelands",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
},
[242630] = {
"Crazed Nerubian Lord",
"Fungal Folly",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Excavation Site 9",
"enUS",
},
[229069] = {
"Mechadrone Sniper",
"Operation: Floodgate",
"enUS",
},
[233675] = {
"Alleria Windrunner",
"Horrific Vision of Stormwind",
"enUS",
},
[156145] = {
"Burrowing Appendage",
"Horrific Vision of Stormwind",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[242631] = {
"Overcharged Sentinel",
"Eco-Dome Al'dani",
"enUS",
},
[234955] = {
"Wastelander Pactspeaker",
"Eco-Dome Al'dani",
"enUS",
},
[237514] = {
"A'wazj",
"Eco-Dome Al'dani",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
},
[244423] = {
"Wild Duneflyer",
"Kriegval's Rest",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[87317] = {
"Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[234957] = {
"Wastelander Ritualist",
"Eco-Dome Al'dani",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[233679] = {
"Therum Deepforge",
"Horrific Vision of Stormwind",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
},
[158452] = {
"Mindtwist Tendril",
"Horrific Vision of Stormwind",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[69791] = {
"Киуин",
"Manaforge Omega",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
},
[234960] = {
"Tamed Ruinstalker",
"Eco-Dome Al'dani",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[233681] = {
"Magister Umbric",
"Horrific Vision of Stormwind",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[69792] = {
"Киуин",
"Manaforge Omega",
"enUS",
},
[228053] = {
"Goblin Sapper Bot",
"Liberation of Undermine",
"enUS",
},
[234962] = {
"Wastelander Farstalker",
"Eco-Dome Al'dani",
"enUS",
},
[231380] = {
"Undercrawler",
"Operation: Floodgate",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[87320] = {
"Raider's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
"enUS",
},
[246733] = {
"Unknown <Slayer of Draghan>",
"The Sinkhole",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
},
[233684] = {
"Overlord Mathias Shaw",
"Horrific Vision of Stormwind",
"enUS",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
},
[233685] = {
"Slavemaster Ul'rok",
"Horrific Vision of Stormwind",
"enUS",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
},
[224731] = {
"Web Marauder",
"City of Threads",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
},
[178163] = {
"Murkbrine Shorerunner",
"Tazavesh, the Veiled Market",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[237272] = {
"Underpin's Friend's Broker",
"Excavation Site 9",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
"enUS",
},
[217570] = {
"Speaker Halven",
"Nightfall Sanctum",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
},
[170234] = {
"Oppressive Banner",
"Theater of Pain",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[43934] = {
"Soul Fragment",
"Lost City of the Tol'vir",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
"enUS",
},
[242648] = {
"Nascent Shadowguard",
"Manaforge Omega",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[220643] = {
"Deepwater Makura",
"Nightfall Sanctum",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[239834] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
},
[234205] = {
"Corruption Parasite",
"Excavation Site 9",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[240091] = {
"Monstrous Larva",
"Fungal Folly",
"enUS",
},
[234206] = {
"Nightmare Crawler",
"Excavation Site 9",
"enUS",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[231904] = {
"Punchy Thug",
"Kriegval's Rest",
"enUS",
},
[234207] = {
"Tainted Feaster",
"Excavation Site 9",
"enUS",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[234208] = {
"Hideous Amalgamation",
"Excavation Site 9",
"enUS",
},
[52571] = {
"Majordomo Staghelm",
"Firelands",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
},
[229603] = {
"Darkfuse Flare",
"Liberation of Undermine",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[234209] = {
"Coagulated Mass",
"Excavation Site 9",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
},
[214251] = {
"Kobyss Witherer",
"Nightfall Sanctum",
"enUS",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[234210] = {
"Silent Slitherer",
"Excavation Site 9",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[233955] = {
"Charred Fanatic",
"Liberation of Undermine",
"enUS",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[175616] = {
"Zo'phex",
"Tazavesh, the Veiled Market",
"enUS",
},
[233956] = {
"Wild Thunderbolt",
"Liberation of Undermine",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
},
[231910] = {
"Masked Freelancer",
"Kriegval's Rest",
"enUS",
},
[244448] = {
"Invasive Phasecrawler",
"Archival Assault",
"enUS",
},
[44896] = {
"Pygmy Brute",
"Lost City of the Tol'vir",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
},
[223724] = {
"Backfill Barrel",
"Liberation of Undermine",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[44577] = {
"General Husam",
"Lost City of the Tol'vir",
"enUS",
},
[164363] = {
"Undying Stonefiend",
"Halls of Atonement",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[44897] = {
"Pygmy Scout",
"Lost City of the Tol'vir",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[229356] = {
"Imperious Blaster",
"Liberation of Undermine",
"enUS",
},
[180484] = {
"Vilt",
"Tazavesh, the Veiled Market",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[244453] = {
"D'rude",
"Archival Assault",
"enUS",
},
[220401] = {
"Pale Priest",
"City of Threads",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[245222] = {
"Pargoth",
"Manaforge Omega",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
},
[213751] = {
"Dynamite Mine Cart",
"Darkflame Cleft",
},
[44898] = {
"Pygmy Firebreather",
"Lost City of the Tol'vir",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[176394] = {
"P.O.S.T. Worker",
"Tazavesh, the Veiled Market",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
},
[176395] = {
"Overloaded Mailemental",
"Tazavesh, the Veiled Market",
"enUS",
},
[218103] = {
"Nerubian Lord",
"Skittering Breach",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[229619] = {
"Blazing Fueldemon",
"Liberation of Undermine",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
},
[229364] = {
"Imperious Deathtone",
"Liberation of Undermine",
"enUS",
},
[227573] = {
"Anub'vir",
"Earthcrawl Mines",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[227575] = {
"Armored Shellguard",
"Earthcrawl Mines",
},
[231925] = {
"Drill Sergeant",
"Kriegval's Rest",
"enUS",
},
[40166] = {
"Molten Giant",
"Grim Batol",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[238068] = {
"Geargrinder Rager",
"Liberation of Undermine",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
},
[227578] = {
"Nerubian Webcaster",
"Earthcrawl Mines",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[212739] = {
"Consuming Voidstone",
"The Rookery",
"enUS",
},
[231930] = {
"Obedient-ish Predator",
"Kriegval's Rest",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[227581] = {
"Nerubian Oracle",
"Earthcrawl Mines",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
},
[43878] = {
"Grand Vizier Ertan",
"The Vortex Pinnacle",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
},
[159266] = {
"Portal Master",
"Horrific Vision of Stormwind",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[197904] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[225539] = {
"Kobold Ambusher",
"Kriegval's Rest",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[216584] = {
"Nerubian Captain",
"Skittering Breach",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[227843] = {
"Bloodfang Hyena",
"Liberation of Undermine",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[204560] = {
"Incorporeal Being",
"The Azure Vault",
},
[233474] = {
"Gallagio Goon",
"Liberation of Undermine",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
},
[236033] = {
"Metal Gunk",
"Operation: Mechagon",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
"enUS",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[241666] = {
"Shadowguard Juggernaut",
"Manaforge Omega",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
},
[159275] = {
"Portal Keeper",
"Horrific Vision of Stormwind",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[189470] = {
"Lava Flare",
"Neltharus",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[45097] = {
"Oathsworn Tamer",
"Lost City of the Tol'vir",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
},
[214548] = {
"Slippery Syphoner",
"The Sinkhole",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[245255] = {
"Artoshion",
"Manaforge Omega",
"enUS",
},
[230927] = {
"Darkfuse Shredder Pilot",
"Operation: Floodgate",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
"enUS",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[158774] = {
"Broken Citizen",
"Horrific Vision of Stormwind",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[175663] = {
"Hylbrande",
"Tazavesh, the Veiled Market",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
},
[246285] = {
"Bazaar Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[248589] = {
"Nullbinder",
"Manaforge Omega",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[239379] = {
"Unbound Ethereal",
"Eco-Dome Al'dani",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
"enUS",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[160061] = {
"Crawling Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[248084] = {
"Pactsworn Sandreaver",
"Kriegval's Rest",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[231197] = {
"Bubbles",
"Operation: Floodgate",
},
[225568] = {
"Kobold Guardian",
"Kriegval's Rest",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[235805] = {
"Shadowguard Darkmage",
"Manaforge Omega",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
},
[227874] = {
"Web Spreader",
"Earthcrawl Mines",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
},
[235807] = {
"Shadowguard Acolyte",
"Manaforge Omega",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
},
[175677] = {
"Smuggled Creature",
"Tazavesh, the Veiled Market",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[158279] = {
"Haywire Clockwork Rocket Bot",
"Horrific Vision of Stormwind",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[242209] = {
"Overgorged Mite",
"Eco-Dome Al'dani",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
},
[228648] = {
"Rik Reverb",
"Liberation of Undermine",
"enUS",
},
[44976] = {
"Neferset Plaguebringer",
"Lost City of the Tol'vir",
"enUS",
},
[133463] = {
"Venture Co. War Machine",
"The MOTHERLODE!!",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
},
[89] = {
"Infernal",
"Manaforge Omega",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[237861] = {
"Fractillus",
"Manaforge Omega",
"enUS",
},
[158284] = {
"Craggle Wobbletop",
"Horrific Vision of Stormwind",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[220974] = {
"Bazaar Guard",
"Khaz Algar",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[231977] = {
"Darkfuse Technician",
"Liberation of Undermine",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[158286] = {
"Reprogrammed Warbot",
"Horrific Vision of Stormwind",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[220976] = {
"Hollows Guard",
"Khaz Algar",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
"enUS",
},
[240935] = {
"Nascent Shadowguard",
"Manaforge Omega",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
},
[101437] = {
"Burning Geode",
"Neltharion's Lair",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[208441] = {
"Wasserelementar",
"Manaforge Omega",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[227632] = {
"Venombite",
"Earthcrawl Mines",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[228144] = {
"Darkfuse Soldier",
"Operation: Floodgate",
"enUS",
},
[243241] = {
"Volatile Manifestation",
"Manaforge Omega",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[227635] = {
"Kas'dru",
"Earthcrawl Mines",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[92612] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[17252] = {
"Haashokin",
"Manaforge Omega",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"Operation: Floodgate",
"enUS",
},
[215608] = {
"Siegehold Drone",
"The Spiral Weave",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[236823] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[214550] = {
"Deepwater Snapper",
"The Sinkhole",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[229686] = {
"Venture Co. Surveyor",
"Operation: Floodgate",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[229175] = {
"Darkfuse Stunner",
"Liberation of Undermine",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[85194] = {
"Entanglement",
"The Everbloom",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[217268] = {
"Weeping Shade",
"Nightfall Sanctum",
"enUS",
},
[152669] = {
"Void Globule",
"Horrific Vision of Stormwind",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
},
[231223] = {
"Disturbed Kelp",
"Operation: Floodgate",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[205326] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[229177] = {
"Torq",
"Liberation of Undermine",
"enUS",
},
[229433] = {
"Skiggy Muckheimer",
"Liberation of Undermine",
"enUS",
},
[164185] = {
"Echelon",
"Halls of Atonement",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
},
[53134] = {
"Ancient Core Hound",
"Firelands",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
},
[229434] = {
"Melbo the Magnificent",
"Liberation of Undermine",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[52593] = {
"Spirit of the Flame",
"Firelands",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
"enUS",
},
[53167] = {
"Unbound Pyrelord",
"Firelands",
"enUS",
},
[234041] = {
"Forge Sentinel",
"Manaforge Omega",
"enUS",
},
[248626] = {
"Nascent Darkmage",
"Manaforge Omega",
"enUS",
},
[177237] = {
"Chains of Damnation",
"Tazavesh, the Veiled Market",
"enUS",
},
[53732] = {
"Unbound Smoldering Elemental",
"Firelands",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
},
[229180] = {
"Darkfuse Gunner",
"Liberation of Undermine",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[164188] = {
"Horrific Figment",
"Horrific Vision of Stormwind",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[87318] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[229181] = {
"Flarendo",
"Liberation of Undermine",
"enUS",
},
[45269] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[158285] = {
"Tinkered Shieldbot",
"Horrific Vision of Stormwind",
"enUS",
},
[240952] = {
"Evoked Spirit",
"Eco-Dome Al'dani",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
},
[3527] = {
"Healing Stream Totem",
"Manaforge Omega",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[219715] = {
"Kobyss Ambusher",
"The Sinkhole",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
},
[97087] = {
"Valarjar Champion",
"Halls of Valor",
"enUS",
},
[63508] = {
"Xuen",
"Manaforge Omega",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[180567] = {
"Frenzied Nightclaw",
"Tazavesh, the Veiled Market",
"enUS",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[44981] = {
"Oathsworn Skinner",
"Lost City of the Tol'vir",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[234557] = {
"Support Rig",
"Liberation of Undermine",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[44982] = {
"Neferset Darkcaster",
"Lost City of the Tol'vir",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[45926] = {
"Servant of Asaad",
"The Vortex Pinnacle",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[247458] = {
"Mirror Master Murkna",
"Kriegval's Rest",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[44260] = {
"Venomfang Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
},
[244442] = {
"Mercenary Acquisitionist",
"Skittering Breach",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[247480] = {
"Maulspike",
"Kriegval's Rest",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[177500] = {
"Corsair Brute",
"Tazavesh, the Veiled Market",
"enUS",
},
[239833] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[45096] = {
"Tamed Tol'vir Prowler",
"Lost City of the Tol'vir",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[44977] = {
"Neferset Torturer",
"Lost City of the Tol'vir",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[47720] = {
"Camel",
"Lost City of the Tol'vir",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
},
[210478] = {
"Infected Beast",
"Nightfall Sanctum",
"enUS",
},
[49045] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[158056] = {
"Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[234051] = {
"Netherfang Soulbarker",
"Manaforge Omega",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[43612] = {
"High Prophet Barim",
"Lost City of the Tol'vir",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
},
[247987] = {
"Nether Phantom",
"Voidrazor Sanctuary",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"The Sinkhole",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[245705] = {
"Voidwarden",
"Manaforge Omega",
"enUS",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
},
[44704] = {
"Minion of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[229363] = {
"Imperious Soundwave",
"Liberation of Undermine",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
},
[228424] = {
"Darkfuse Mechadrone",
"Operation: Floodgate",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[227145] = {
"Waterworks Crocolisk",
"Operation: Floodgate",
"enUS",
},
[231176] = {
"Scaffolding",
"Operation: Floodgate",
"enUS",
},
[180159] = {
"Brawling Patron",
"Tazavesh, the Veiled Market",
"enUS",
},
[158315] = {
"Eye of Chaos",
"Horrific Vision of Stormwind",
"enUS",
},
[175646] = {
"P.O.S.T. Master",
"Tazavesh, the Veiled Market",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
},
[186206] = {
"Bonecrusher",
"Brackenhide Hollow",
},
[231496] = {
"Venture Co. Diver",
"Operation: Floodgate",
"enUS",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"The Underkeep",
"enUS",
},
[234743] = {
"Darkfuse Pillager",
"The Underkeep",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[244426] = {
"Feral Warpstalker",
"Kriegval's Rest",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[231497] = {
"Bombshell Crab",
"Operation: Floodgate",
"enUS",
},
[211119] = {
"Kasthrik",
"Fungal Folly",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
"enUS",
},
[237763] = {
"Nexus-King Salhadaar",
"Manaforge Omega",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[44261] = {
"Sharptalon Eagle",
"Lost City of the Tol'vir",
"enUS",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[234478] = {
"Dimensius",
"Manaforge Omega",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[231909] = {
"Underpaid Brute",
"Kriegval's Rest",
"enUS",
},
[167898] = {
"Manifestation of Envy",
"Halls of Atonement",
"enUS",
},
[132820] = {
"Mudsnout Piglet",
"Skittering Hollow (Islands 5)",
},
[244414] = {
"Unbound Remnant",
"Kriegval's Rest",
"enUS",
},
[237872] = {
"Unbound Mage",
"Manaforge Omega",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
},
[229162] = {
"Darkfuse Houndmaster",
"Liberation of Undermine",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[178388] = {
"Bazaar Strongarm",
"Tazavesh, the Veiled Market",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[45007] = {
"Enslaved Bandit",
"Lost City of the Tol'vir",
"enUS",
},
[167532] = {
"Heavin the Breaker",
"Theater of Pain",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[208728] = {
"Treasure Wraith",
"Kriegval's Rest",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
},
[219732] = {
"Mbuzi",
"The Sinkhole",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"Bee Wrangler",
"Cinderbrew Meadery",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[207450] = {
"Fungal Stabber",
"Nightfall Sanctum",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
},
[157811] = {
"Lilliam Sparkspindle",
"Horrific Vision of Stormwind",
"enUS",
},
[44922] = {
"Oathsworn Axemaster",
"Lost City of the Tol'vir",
"enUS",
},
[237132] = {
"Shadowguard Technomancer",
"Manaforge Omega",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[245008] = {
"Unbound Phaseblade",
"Manaforge Omega",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
},
[240905] = {
"Arcane Collector",
"Manaforge Omega",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[247624] = {
"Steelsoul Arcanoward",
"Fungal Folly",
"enUS",
},
[157812] = {
"Billibub Cogspinner",
"Horrific Vision of Stormwind",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[234833] = {
"Unstable Mana",
"Manaforge Omega",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[239437] = {
"Hogger",
"Horrific Vision of Stormwind",
"enUS",
},
[157813] = {
"Sprite Jumpsprocket",
"Horrific Vision of Stormwind",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[167538] = {
"Dokigg the Brutalizer",
"Theater of Pain",
},
[234655] = {
"Globlin",
"Liberation of Undermine",
"enUS",
},
[240974] = {
"Shadowguard Weavemaster",
"Manaforge Omega",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
},
[238237] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
"enUS",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[244302] = {
"Binding Javelin",
"Eco-Dome Al'dani",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"Earthcrawl Mines",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[164218] = {
"Lord Chamberlain",
"Halls of Atonement",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[237552] = {
"Sprok",
"Kriegval's Rest",
"enUS",
},
[156794] = {
"SI:7 Light-Hunter",
"Horrific Vision of Stormwind",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"Earthcrawl Mines",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[156795] = {
"SI:7 Informant",
"Horrific Vision of Stormwind",
"enUS",
},
[44924] = {
"Oathsworn Myrmidon",
"Lost City of the Tol'vir",
"enUS",
},
[196200] = {
"Algeth'ar Enforcer",
"Algeth'ar Academy",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[233816] = {
"Soulbinder Naazindhri",
"Manaforge Omega",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
},
[228953] = {
"Skittering Intruder",
"Skittering Breach",
"enUS",
},
[227931] = {
"Oozing Salvage",
"Liberation of Undermine",
"enUS",
},
[152704] = {
"Crawling Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[233815] = {
"Loom'ithar",
"Manaforge Omega",
"enUS",
},
[227930] = {
"Greater Acid Slime",
"Liberation of Undermine",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[226396] = {
"Swampface",
"Operation: Floodgate",
"enUS",
},
[175546] = {
"Timecap'n Hooktail",
"Tazavesh, the Veiled Market",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[239702] = {
"Watcher Gaz'Kreth",
"Manaforge Omega",
"enUS",
},
[233817] = {
"Forgeweaver Araz",
"Manaforge Omega",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[234842] = {
"Voidveil Manta",
"Manaforge Omega",
"enUS",
},
[177269] = {
"So'leah",
"Tazavesh, the Veiled Market",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[229212] = {
"Darkfuse Demolitionist",
"Operation: Floodgate",
"enUS",
},
[231908] = {
"Bopper Bot",
"Kriegval's Rest",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[226398] = {
"Big M.O.M.M.A.",
"Operation: Floodgate",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
"enUS",
},
[234843] = {
"Phase Stalker",
"Manaforge Omega",
"enUS",
},
[241240] = {
"Budding Silkgrub",
"Manaforge Omega",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[211816] = {
"Bazaar Sentry",
"Khaz Algar",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[44926] = {
"Oathsworn Wanderer",
"Lost City of the Tol'vir",
"enUS",
},
[241242] = {
"Shadowguard Harvester",
"Manaforge Omega",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[237660] = {
"Velaryn Bloodwrath",
"Manaforge Omega",
"enUS",
},
[235869] = {
"Black Blood Parasite",
"Earthcrawl Mines",
"enUS",
},
[26125] = {
"Risen Ghoul",
"Manaforge Omega",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
"enUS",
},
[226402] = {
"Bront",
"Operation: Floodgate",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[226403] = {
"Keeza Quickfuse",
"Operation: Floodgate",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[237661] = {
"Adarus Duskblaze",
"Manaforge Omega",
"enUS",
},
[233823] = {
"The Royal Voidwing",
"Manaforge Omega",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"The Underkeep",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[237662] = {
"Ilyssa Darksorrow",
"Manaforge Omega",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
},
[239454] = {
"Darkmage Zadus",
"Manaforge Omega",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[226404] = {
"Geezle Gigazap",
"Operation: Floodgate",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[53115] = {
"Molten Lord",
"Firelands",
"enUS",
},
[220008] = {
"Cragpie",
"The Sinkhole",
"enUS",
},
[179893] = {
"Cartel Skulker",
"Tazavesh, the Veiled Market",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[229220] = {
"Junkyard Shredder",
"Liberation of Undermine",
"enUS",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[247387] = {
"Zekvir",
"Kriegval's Rest",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[208239] = {
"Skittering Menace",
"Skittering Breach",
"enUS",
},
[179837] = {
"Tracker Zo'korss",
"Tazavesh, the Veiled Market",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[235853] = {
"Waygate Watcher",
"Manaforge Omega",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[246874] = {
"Influx Warden",
"Manaforge Omega",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
"enUS",
},
[130635] = {
"Stonefury",
"The MOTHERLODE!!",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[228954] = {
"Nerubian Marauder",
"Earthcrawl Mines",
"enUS",
},
[152939] = {
"Boundless Corruption",
"Horrific Vision of Stormwind",
"enUS",
},
[242784] = {
"Black Blood Leacher",
"Fungal Folly",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[231014] = {
"Loaderbot",
"Operation: Floodgate",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
"enUS",
},
[156949] = {
"Armsmaster Terenson",
"Horrific Vision of Stormwind",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
},
[179840] = {
"Market Peacekeeper",
"Tazavesh, the Veiled Market",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Skittering Breach",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[165415] = {
"Toiling Groundskeeper",
"Halls of Atonement",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[208243] = {
"Nerubian Slasher",
"Skittering Breach",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
"enUS",
},
[245601] = {
"Enforcer Jak'tull",
"Manaforge Omega",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[158092] = {
"Fallen Heartpiercer",
"Horrific Vision of Stormwind",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[220988] = {
"Skeins Sentry",
"Khaz Algar",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"Nerubian Threadmancer",
"Skittering Breach",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
"enUS",
},
[229226] = {
"Darkfuse Junker",
"Liberation of Undermine",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
},
[231906] = {
"Aerial Support Bot",
"Kriegval's Rest",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
},
[235505] = {
"Darkfuse Cackler",
"Kriegval's Rest",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Skittering Breach",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
},
[244115] = {
"Shadowguard Null Bastion",
"Kriegval's Rest",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[245092] = {
"Burrowing Creeper",
"Eco-Dome Al'dani",
"enUS",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
"enUS",
},
[126928] = {
"Irontide Corsair",
"Freehold",
},
[211061] = {
"Patreux",
"Fungal Folly",
"enUS",
},
[152722] = {
"Fallen Voidspeaker",
"Horrific Vision of Stormwind",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[45377] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[186242] = {
"Gutstabber",
"Brackenhide Hollow",
},
[211062] = {
"Bill",
"Fungal Folly",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
},
[176563] = {
"Zo'gron",
"Tazavesh, the Veiled Market",
"enUS",
},
[220978] = {
"Skeins Guard",
"Khaz Algar",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[235158] = {
"Underpaid Brute",
"The Dread Pit",
"enUS",
},
[159632] = {
"Cultist Shadowblade",
"Horrific Vision of Stormwind",
"enUS",
},
[211063] = {
"Fungal Podling",
"The Underkeep",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[228463] = {
"Flame Reel Assistant",
"Liberation of Undermine",
},
[219763] = {
"Mirror Master Murkna",
"The Sinkhole",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[159633] = {
"Cultist Executioner",
"Horrific Vision of Stormwind",
"enUS",
},
[246374] = {
"Shadowguard Soldier",
"Manaforge Omega",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
},
[230748] = {
"Darkfuse Bloodwarper",
"Operation: Floodgate",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[176562] = {
"Brawling Patron",
"Tazavesh, the Veiled Market",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[45122] = {
"Oathsworn Captain",
"Lost City of the Tol'vir",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[165408] = {
"Halkias",
"Halls of Atonement",
"enUS",
},
[237554] = {
"Torque Clankfire",
"Kriegval's Rest",
"enUS",
},
[53128] = {
"Giant Fire Scorpion",
"Firelands",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[48906] = {
"Blaze of the Heavens",
"Lost City of the Tol'vir",
"enUS",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[219766] = {
"Drowned Arathi",
"Kriegval's Rest",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[236549] = {
"Crystalline Golem",
"Manaforge Omega",
"enUS",
},
[235156] = {
"Underpaid Brute",
"The Dread Pit",
"enUS",
},
[234900] = {
"Underpin's Adoring Fan",
"Excavation Site 9",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
},
[227955] = {
"Darkfuse Skyfire",
"Liberation of Undermine",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[216441] = {
"Pale Illusion",
"The Sinkhole",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[228514] = {
"Pit Mechanic",
"Liberation of Undermine",
},
[227956] = {
"Crawler Mine",
"Liberation of Undermine",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[53119] = {
"Flamewaker Forward Guard",
"Firelands",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[229270] = {
"Darkfuse Destructionist",
"Liberation of Undermine",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[98035] = {
"Dreadstalker",
"Manaforge Omega",
"enUS",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
"enUS",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[237871] = {
"Unbound Assassin",
"Manaforge Omega",
"enUS",
},
[152988] = {
"Faceless Shadowcaller",
"Horrific Vision of Stormwind",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
},
[53120] = {
"Flamewaker Pathfinder",
"Firelands",
"enUS",
},
[234613] = {
"Shadow Remnant",
"Kriegval's Rest",
"enUS",
},
[44932] = {
"Oathsworn Pathfinder",
"Lost City of the Tol'vir",
"enUS",
},
[244413] = {
"Pactsworn Fraycaller",
"Kriegval's Rest",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[229224] = {
"Darkfuse Scrapper",
"Liberation of Undermine",
"enUS",
},
[239435] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[234870] = {
"Invading Mite",
"Eco-Dome Al'dani",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[245617] = {
"The Bone Melter",
"Manaforge Omega",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
},
[234872] = {
"Wastelander Phaseblade",
"Eco-Dome Al'dani",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[153760] = {
"Enthralled Footman",
"Horrific Vision of Stormwind",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
},
[53121] = {
"Flamewaker Cauterizer",
"Firelands",
"enUS",
},
[235129] = {
"Mechanized Reinforcement",
"The Spiral Weave",
"enUS",
},
[241803] = {
"Nexus-Prince Ky'vor",
"Manaforge Omega",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[158437] = {
"Fallen Taskmaster",
"Horrific Vision of Stormwind",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[45062] = {
"Oathsworn Scorpid Keeper",
"Lost City of the Tol'vir",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[158371] = {
"Zardeth of the Black Claw",
"Horrific Vision of Stormwind",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
},
[239836] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[241517] = {
"Dimensius",
"Manaforge Omega",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[156837] = {
"Valeera Sanguinar",
"Horrific Vision of Stormwind",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[229250] = {
"Venture Co. Contractor",
"Operation: Floodgate",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[229251] = {
"Venture Co. Architect",
"Operation: Floodgate",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[236995] = {
"Ravenous Destroyer",
"Eco-Dome Al'dani",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[45001] = {
"Enslaved Bandit",
"Lost City of the Tol'vir",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
},
[234893] = {
"Azhiccar",
"Eco-Dome Al'dani",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[234883] = {
"Voracious Gorger",
"Eco-Dome Al'dani",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[244095] = {
"Failed Aspirant",
"Kriegval's Rest",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
},
[189338] = {
"Riverbend Chomper",
"Dragon Isles",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
},
[152987] = {
"Faceless Willbreaker",
"Horrific Vision of Stormwind",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[229252] = {
"Darkfuse Hyena",
"Operation: Floodgate",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[180640] = {
"Stormbound Breaker",
"Tazavesh, the Veiled Market",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[45063] = {
"Bonesnapper Scorpid",
"Lost City of the Tol'vir",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[229513] = {
"Darkfuse Stunner",
"Liberation of Undermine",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
},
[213905] = {
"Unstable Darkness",
"The Dawnbreaker",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[179334] = {
"Portalmancer Zo'honn",
"Tazavesh, the Veiled Market",
"enUS",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[244099] = {
"Prowling Voidstalker",
"Archival Assault",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[217485] = {
"Nightfall Lookout",
"Nightfall Sanctum",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[230740] = {
"Shreddinator 3000",
"Operation: Floodgate",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
},
[237192] = {
"Giga-Juiced Technician",
"Liberation of Undermine",
},
[45065] = {
"Tol'vir Merchant",
"Lost City of the Tol'vir",
"enUS",
},
[241798] = {
"Nexus-Prince Xevvos",
"Manaforge Omega",
"enUS",
},
[244101] = {
"Shadowguard Phasecutter",
"Kriegval's Rest",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[94960] = {
"Hymdall",
"Halls of Valor",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[43658] = {
"Frenzied Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[158373] = {
"Roberto Pupellyverbos",
"Horrific Vision of Stormwind",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[241800] = {
"Manaforged Titan",
"Manaforge Omega",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
},
[44234] = {
"Vicious Leech",
"Lost City of the Tol'vir",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[241801] = {
"Shadowguard Reaper",
"Manaforge Omega",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[242570] = {
"Haymar the Devout",
"Horrific Vision of Stormwind",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[175806] = {
"So'azmi",
"Tazavesh, the Veiled Market",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[231312] = {
"Venture Co. Electrician",
"Operation: Floodgate",
"enUS",
},
[227474] = {
"Ascension Researcher",
"The Underkeep",
"enUS",
},
[176555] = {
"Achillite",
"Tazavesh, the Veiled Market",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
},
[236942] = {
"The Underpin",
"Excavation Site 9",
"enUS",
},
[235151] = {
"K'aresh Elemental",
"Eco-Dome Al'dani",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[176556] = {
"Alcruux",
"Tazavesh, the Veiled Market",
"enUS",
},
[234443] = {
"Triplefive",
"Theater of Pain",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
"enUS",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[237967] = {
"Discharged Giga Bomb",
"Liberation of Undermine",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[53127] = {
"Fire Scorpion",
"Firelands",
"enUS",
},
[166524] = {
"Deathwalker",
"Theater of Pain",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[45259] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
"enUS",
},
[235154] = {
"Underpaid Brute",
"The Dread Pit",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[158136] = {
"Inquisitor Darkspeak",
"Horrific Vision of Stormwind",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[83894] = {
"Dulhu",
"The Everbloom",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[236946] = {
"Wasteland Creeper",
"Manaforge Omega",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[244111] = {
"Shadowguard Void Adept",
"Kriegval's Rest",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
"enUS",
},
[226200] = {
"Chamber Acolyte",
"Nerub-ar Palace",
},
[231531] = {
"Territorial Bombshell",
"Liberation of Undermine",
},
[236947] = {
"Burrowing Creeper",
"Manaforge Omega",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
},
[180399] = {
"Evaile",
"Tazavesh, the Veiled Market",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[220060] = {
"Taste Tester",
"Cinderbrew Meadery",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
},
[234901] = {
"Underpin's Well-Connected Friend",
"Excavation Site 9",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[229272] = {
"Darkfuse Machinist",
"Liberation of Undermine",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[244113] = {
"Shadowguard Soulbreaker",
"Kriegval's Rest",
"enUS",
},
[234204] = {
"Congealed Clot",
"Excavation Site 9",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[234902] = {
"Underpin's Explosive Ally",
"Excavation Site 9",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[233623] = {
"Pyrotechnics",
"Liberation of Undermine",
},
[158140] = {
"Frenzied Rat",
"Horrific Vision of Stormwind",
"enUS",
},
[220986] = {
"Hollows Sentry",
"Khaz Algar",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
"enUS",
},
[88314] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
"enUS",
},
[237651] = {
"Lit Fuse",
"Excavation Site 9",
"enUS",
},
[229365] = {
"Imperious Mouthpiece",
"Liberation of Undermine",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
},
[208241] = {
"Ankle Biter",
"Skittering Breach",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
"enUS",
},
[233814] = {
"Plexus Sentinel",
"Manaforge Omega",
"enUS",
},
[230299] = {
"Darkfuse Crossfire",
"Liberation of Undermine",
"enUS",
},
[232602] = {
"Subwoofer",
"Liberation of Undermine",
"enUS",
},
[244755] = {
"Nexus-Princess Ky'veza",
"Archival Assault",
"enUS",
},
[167610] = {
"Stonefiend Anklebiter",
"Halls of Atonement",
"enUS",
},
[247390] = {
"The Underpin",
"Kriegval's Rest",
"enUS",
},
[229222] = {
"Darkfuse Melter",
"Liberation of Undermine",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[231928] = {
"Bomb Bot",
"Kriegval's Rest",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
},
[167611] = {
"Stoneborn Eviscerator",
"Halls of Atonement",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[233824] = {
"Dimensius",
"Manaforge Omega",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[219810] = {
"Nerubian Ritualist",
"Skittering Breach",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[153130] = {
"Greater Void Elemental",
"Horrific Vision of Stormwind",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
},
[241304] = {
"Shadowguard Infuser",
"Manaforge Omega",
"enUS",
},
[231325] = {
"Darkfuse Jumpstarter",
"Operation: Floodgate",
"enUS",
},
[227487] = {
"Underkeep Technician",
"The Underkeep",
"enUS",
},
[95833] = {
"Hyrja",
"Halls of Valor",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[158146] = {
"Fallen Riftwalker",
"Horrific Vision of Stormwind",
"enUS",
},
[245173] = {
"Infused Tangle",
"Manaforge Omega",
"enUS",
},
[244415] = {
"Pactsworn Dustblade",
"Kriegval's Rest",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[231839] = {
"Scrapmaster",
"Liberation of Undermine",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[242586] = {
"Arcane Manifestation",
"Manaforge Omega",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[167615] = {
"Depraved Darkblade",
"Halls of Atonement",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
},
[229537] = {
"Void Emissary",
"Eco-Dome Al'dani",
"enUS",
},
[237981] = {
"Shadowguard Mage",
"Manaforge Omega",
"enUS",
},
[236190] = {
"Frenzied Mite",
"Eco-Dome Al'dani",
"enUS",
},
[242587] = {
"Living Mass",
"Manaforge Omega",
"enUS",
},
[179386] = {
"Corsair Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[234912] = {
"Ravaging Scavenger",
"Eco-Dome Al'dani",
"enUS",
},
[231978] = {
"Sharpshot Sentry",
"Liberation of Undermine",
},
[229283] = {
"Scraps",
"Liberation of Undermine",
},
[167534] = {
"Rek the Hardened",
"Theater of Pain",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
},
[242589] = {
"Void Manifestation",
"Manaforge Omega",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[229284] = {
"Guk Boomdog",
"Liberation of Undermine",
},
[237897] = {
"Shadowguard Assassin",
"Manaforge Omega",
"enUS",
},
[231385] = {
"Darkfuse Inspector",
"Operation: Floodgate",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[229366] = {
"Stagehand",
"Liberation of Undermine",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[244752] = {
"Nexus-Princess Ky'veza",
"Voidrazor Sanctuary",
"enUS",
},
[232228] = {
"Waterworks Bottomfeeder",
"Operation: Floodgate",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[242649] = {
"Nascent Acolyte",
"Manaforge Omega",
"enUS",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[212698] = {
"Boskroot Mycomancer",
"Fungal Folly",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[217516] = {
"Nightfall Executor",
"Nightfall Sanctum",
"enUS",
},
[241923] = {
"Arcane Echo",
"Manaforge Omega",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[236072] = {
"Unbound Entity",
"Manaforge Omega",
"enUS",
},
[244444] = {
"Great Devourer",
"Fungal Folly",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[229287] = {
"Professor Boomspark",
"Liberation of Undermine",
"enUS",
},
[234050] = {
"Shadowguard Soldier",
"Manaforge Omega",
"enUS",
},
[217517] = {
"Nightfall Hopestealer",
"Nightfall Sanctum",
"enUS",
},
[244384] = {
"Captain Nil'hitan",
"Archival Assault",
"enUS",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[43614] = {
"Lockmaw",
"Lost City of the Tol'vir",
"enUS",
},
[243105] = {
"Anomalous Ectozoon",
"Fungal Folly",
"enUS",
},
[176705] = {
"Venza Goldfuse",
"Tazavesh, the Veiled Market",
"enUS",
},
[229288] = {
"King Flamespite",
"Liberation of Undermine",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[217518] = {
"Nightfall Inquisitor",
"Nightfall Sanctum",
"enUS",
},
[158411] = {
"Unstable Servant",
"Horrific Vision of Stormwind",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Skittering Breach",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[234918] = {
"Wastes Creeper",
"Eco-Dome Al'dani",
"enUS",
},
[44980] = {
"Neferset Theurgist",
"Lost City of the Tol'vir",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
"enUS",
},
[97219] = {
"Solsten",
"Halls of Valor",
"enUS",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[248481] = {
"Ky'veza's Shadow Clone",
"The Dread Pit",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
},
[245411] = {
"Ravaging Scavenger",
"Eco-Dome Al'dani",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
},
[1863] = {
"Nimanda",
"Manaforge Omega",
"enUS",
},
[158158] = {
"Forge-Guard Hurrul",
"Horrific Vision of Stormwind",
"enUS",
},
[65362] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[245722] = {
"Ethereal Scallywag",
"Archival Assault",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[31216] = {
"Telbur",
"Manaforge Omega",
"enUS",
},
[245412] = {
"Voracious Gorger",
"Eco-Dome Al'dani",
"enUS",
},
[227903] = {
"Darkfuse Growler",
"Liberation of Undermine",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[244411] = {
"Pactsworn Arcanist",
"Kriegval's Rest",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
},
[214338] = {
"Kobyss Spearfisher",
"The Underkeep",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[245414] = {
"Invading Mite",
"Eco-Dome Al'dani",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[241832] = {
"Shielded Attendant",
"Manaforge Omega",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[179399] = {
"Drunk Pirate",
"Tazavesh, the Veiled Market",
"enUS",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[180470] = {
"Verethian",
"Tazavesh, the Veiled Market",
"enUS",
},
[180485] = {
"Hips",
"Tazavesh, the Veiled Market",
"enUS",
},
[180486] = {
"Dirtwhistle",
"Tazavesh, the Veiled Market",
"enUS",
},
[158478] = {
"Corruption Tumor",
"Horrific Vision of Stormwind",
"enUS",
},
},
["indicator_anchor"] = {
["y"] = -5,
["x"] = 1,
["side"] = 1,
},
["aura_stack_shadow_color"] = {
nil,
nil,
nil,
0,
},
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 3,
["indicator_worldboss"] = false,
["aura_stack_size"] = 12,
["aura_height2"] = 26,
["cast_colors"] = {
[420907] = {
false,
"white",
"",
},
},
["aura_border_colors"] = {
["enrage"] = {
1,
0,
0.1607843190431595,
},
["steal_or_purge"] = {
nil,
1,
0.9450981020927429,
},
["offensive"] = {
nil,
0,
0,
},
["crowdcontrol"] = {
0,
0,
0,
},
["is_show_all"] = {
0,
0,
0,
},
["defensive"] = {
0,
0,
0,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["extra_icon_anchor"] = {
["x"] = -14,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.5,
["semver"] = "1.0.10",
["bossmod_aura_glow_expiring"] = true,
["aura_frame2_anchor"] = {
["y"] = 3,
["side"] = 1,
},
["use_name_translit"] = true,
["cast_statusbar_texture"] = "Atrocity",
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\transparent",
["extra_icon_height"] = 34,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
0,
0,
0,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 34,
["health_statusbar_texture"] = "Atrocity",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Aura Reorder"] = 3,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Extra Border"] = 2,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
},
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 11,
["extra_icon_show_defensive_border"] = {
0,
0,
0,
},
["aura_frame1_anchor"] = {
["y"] = 3,
["side"] = 7,
},
["indicator_rare"] = false,
["cast_statusbar_color_finished"] = {
0.3921568989753723,
0.9960784912109375,
0.6392157077789307,
},
["extra_icon_stack_font"] = "Friz Quadrata TT",
["aura_height"] = 26,
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Atrocity",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["extra_icon_stack_size"] = 12,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateLargeTopInset"] = "0.049999997019768",
["nameplateShowPersonalCooldowns"] = "0",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.024999998509884",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1",
["nameplateOverlapH"] = "0.79999995231628",
["nameplateShowFriendlyBuffs"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "40",
["nameplateOtherTopInset"] = "0.049999997019768",
["nameplatePlayerMaxDistance"] = "40",
["nameplateOverlapV"] = "1.6000000238419",
["nameplateOccludedAlphaMult"] = "0.19999998807907",
["nameplateShowSelf"] = "0",
["nameplateShowEnemies"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["NamePlateVerticalScale"] = "1",
},
["login_counter"] = 16877,
["extra_icon_caster_name"] = false,
["aura_stack_font"] = "Friz Quadrata TT",
["blizzard_nameplate_font"] = "Friz Quadrata TT",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["bossmod_cooldown_text_enabled"] = false,
["aura_timer_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["auras_per_row_amount"] = 5,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator7",
["blizzard_nameplate_large_font"] = "Friz Quadrata TT",
["aura_stack_anchor"] = {
["y"] = 15,
["side"] = 5,
},
["plate_config"] = {
["player"] = {
["module_enabled"] = false,
["level_text_alpha"] = 0.3,
},
["friendlyplayer"] = {
["castbar_offset"] = -1,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["cast"] = {
210,
22,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
0,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["all_names"] = true,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actortitle_text_font"] = "Friz Quadrata TT",
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["castbar_offset_x"] = 11,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["cast_incombat"] = {
210,
22,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
0,
},
["percent_text_anchor"] = {
["x"] = -1,
["side"] = 11,
},
["spellname_text_font"] = "Friz Quadrata TT",
["big_actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 12,
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["actorname_text_size"] = 12,
["big_actorname_text_font"] = "Friz Quadrata TT",
["big_actorname_text_size"] = 12,
["actorname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["spellpercent_text_enabled"] = true,
["spellpercent_text_size"] = 12,
["percent_text_font"] = "Friz Quadrata TT",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["spellname_text_size"] = 12,
["mana"] = {
nil,
4,
},
["quest_color_enabled"] = true,
["health_incombat"] = {
232,
32,
},
["health"] = {
232,
32,
},
["percent_text_size"] = 12,
["percent_text_enabled"] = true,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_alpha"] = 0.2999999821186066,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["cast"] = {
210,
22,
},
["big_actortitle_text_size"] = 12,
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actortitle_text_font"] = "Friz Quadrata TT",
["percent_text_ooc"] = true,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["castbar_offset_x"] = 11,
["spellname_text_font"] = "Friz Quadrata TT",
["cast_incombat"] = {
210,
22,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["x"] = -1,
["side"] = 11,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["actorname_text_size"] = 12,
["spellpercent_text_size"] = 12,
["big_actorname_text_font"] = "Friz Quadrata TT",
["castbar_offset"] = -1,
["level_text_alpha"] = 0.2999999821186066,
["percent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["percent_text_font"] = "Friz Quadrata TT",
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
232,
32,
},
["health"] = {
232,
32,
},
["percent_text_enabled"] = true,
["actorname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["spellpercent_text_enabled"] = true,
["spellname_text_size"] = 12,
},
["global_health_height"] = 28,
["global_health_width"] = 224,
["enemyplayer"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "Friz Quadrata TT",
["level_text_size"] = 8,
["cast"] = {
210,
22,
},
["big_actortitle_text_size"] = 12,
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actortitle_text_font"] = "Friz Quadrata TT",
["spellpercent_text_size"] = 12,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["castbar_offset_x"] = 11,
["cast_incombat"] = {
210,
22,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["x"] = -1,
["side"] = 11,
},
["spellname_text_font"] = "Friz Quadrata TT",
["quest_color_neutral"] = {
1,
0.50196081399918,
0.25098040699959,
1,
},
["big_actorname_text_font"] = "Friz Quadrata TT",
["level_text_outline"] = "OUTLINE",
["castbar_offset"] = -1,
["actorname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["percent_text_size"] = 12,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_font"] = "Friz Quadrata TT",
["percent_text_show_decimals"] = false,
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 12,
["health"] = {
232,
32,
},
["level_text_alpha"] = 0.2999999821186066,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
232,
32,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["castbar_offset"] = -1,
["spellpercent_text_font"] = "Friz Quadrata TT",
["cast"] = {
160,
16,
},
["big_actortitle_text_size"] = 11,
["spellpercent_text_anchor"] = {
["x"] = -1,
},
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_font"] = "Friz Quadrata TT",
["actorname_text_font"] = "Friz Quadrata TT",
["actorname_text_outline"] = "OUTLINE",
["quest_color_enemy"] = {
0.4000000357627869,
0.8666667342185974,
0.6666666865348816,
},
["big_actortitle_text_font"] = "Friz Quadrata TT",
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["castbar_offset_x"] = 8,
["cast_incombat"] = {
160,
16,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_anchor"] = {
["x"] = -1,
["side"] = 11,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
0.4000000357627869,
0.8666667342185974,
0.7843137979507446,
},
["percent_text_show_decimals"] = false,
["big_actorname_text_font"] = "Friz Quadrata TT",
["big_actorname_text_size"] = 11,
["level_text_outline"] = "OUTLINE",
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_alpha"] = 0.2999999821186066,
["percent_text_size"] = 11,
["percent_text_font"] = "Friz Quadrata TT",
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 11,
["health"] = {
176,
24,
},
["spellname_text_font"] = "Friz Quadrata TT",
["actorname_text_anchor"] = {
["x"] = 3,
["side"] = 10,
},
["health_incombat"] = {
176,
24,
},
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 3,
["use_ui_parent"] = true,
["focus_texture"] = "Kait",
["cast_statusbar_bgcolor"] = {
0.13333334028721,
0.13333334028721,
0.13333334028721,
1,
},
["cast_statusbar_use_fade_effects"] = false,
["indicator_spec"] = false,
["border_thickness"] = 0.4999999701976776,
["resources_settings"] = {
["global_settings"] = {
["show_depleted"] = false,
},
["chr"] = {
["Player-3674-0B4CEAF6"] = "HolyPower",
["Player-3674-0B10664D"] = "Runes",
["Player-3674-0B7E99BA"] = "Chi",
["Player-3674-0ABC0676"] = "ArcaneCharges",
["Player-3674-0B6F6C67"] = "ComboPoints",
["Player-3674-0B54DA49"] = "Runes",
["Player-3674-0B1BB2A3"] = "ComboPoints",
["Player-3674-0B7EE2CB"] = "Chi",
["Player-3666-073F2CE7"] = "Chi",
["Player-3674-0B0A2407"] = "Essence",
["Player-3674-0B733AA8"] = "Runes",
["Player-3674-0B7DA606"] = "Chi",
["Player-3674-0B1E76C1"] = "SoulShards",
["Player-3674-0B290529"] = "Chi",
["Player-3674-0B5833AE"] = "Chi",
["Player-3674-0B436FA0"] = "ComboPoints",
["Player-3674-0B782F56"] = "Runes",
["Player-3674-0B7AA5AA"] = "Chi",
["Player-5764-00087D02"] = "Chi",
["Player-3674-0B6950F5"] = "ComboPoints",
["Player-3674-0B267A73"] = "HolyPower",
["Player-3674-0B7429F4"] = "Runes",
["Player-3674-0B25F50F"] = "ComboPoints",
["Player-3674-0B7DEF79"] = "Chi",
["Player-3674-0B82DA01"] = "HolyPower",
},
},
["indicator_scale"] = 1.200000047683716,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
0.6274510025978088,
0.988235354423523,
0.4431372880935669,
1,
},
["npc_colors"] = {
[99358] = {
true,
false,
"deeppink",
},
[198716] = {
true,
false,
"peachpuff",
},
[196798] = {
true,
false,
"snow",
},
[186696] = {
true,
false,
"cyan",
},
[194241] = {
true,
false,
"cyan",
},
[231197] = {
true,
false,
"slateblue",
},
[231325] = {
true,
false,
"slateblue",
},
[95842] = {
true,
false,
"snow",
},
[180431] = {
true,
false,
"snow",
},
[115407] = {
true,
false,
"peachpuff",
},
[221863] = {
true,
false,
"snow",
},
[205623] = {
true,
false,
"slateblue",
},
[99359] = {
true,
false,
"cyan",
},
[168156] = {
true,
false,
"deeppink",
},
[173655] = {
true,
false,
"slateblue",
},
[173016] = {
true,
false,
"snow",
},
[129602] = {
true,
false,
"WARRIOR",
},
[180433] = {
true,
false,
"deeppink",
},
[98081] = {
true,
false,
"deeppink",
},
[120651] = {
true,
false,
"gold",
},
[212786] = {
true,
false,
"slateblue",
},
[197697] = {
true,
false,
"WARRIOR",
},
[212403] = {
true,
false,
"peachpuff",
},
[164578] = {
true,
false,
"slateblue",
},
[216364] = {
true,
false,
"deeppink",
},
[229283] = {
true,
false,
"slateblue",
},
[214066] = {
true,
false,
"peachpuff",
},
[80816] = {
true,
false,
"snow",
},
[150253] = {
true,
false,
"slateblue",
},
[175576] = {
true,
false,
"yellow",
},
[164451] = {
true,
false,
"slateblue",
},
[207796] = {
true,
false,
"deeppink",
},
[164707] = {
true,
false,
"slateblue",
},
[229284] = {
true,
false,
"slateblue",
},
[131587] = {
true,
false,
"WARRIOR",
},
[114319] = {
true,
false,
"peachpuff",
},
[135552] = {
true,
false,
"peachpuff",
},
[151657] = {
true,
false,
"snow",
},
[218671] = {
true,
false,
"peachpuff",
},
[84400] = {
true,
false,
"slateblue",
},
[193352] = {
true,
false,
"peachpuff",
},
[135169] = {
true,
false,
"deeppink",
},
[213932] = {
true,
false,
"slateblue",
},
[83761] = {
true,
false,
"slateblue",
},
[206140] = {
true,
false,
"magenta",
},
[237981] = {
true,
false,
"snow",
},
[185032] = {
true,
false,
"slateblue",
},
[228514] = {
true,
false,
"snow",
},
[98275] = {
true,
false,
"peachpuff",
},
[221102] = {
true,
false,
"snow",
},
[164702] = {
true,
false,
"deeppink",
},
[178392] = {
true,
false,
"deeppink",
},
[134012] = {
true,
false,
"slateblue",
},
[168418] = {
true,
false,
"snow",
},
[127106] = {
true,
false,
"WARRIOR",
},
[200387] = {
true,
false,
"slateblue",
},
[126919] = {
true,
false,
"magenta",
},
[221103] = {
true,
false,
"slateblue",
},
[199748] = {
true,
false,
"magenta",
},
[165471] = {
true,
false,
"peachpuff",
},
[165222] = {
true,
false,
"magenta",
},
[184020] = {
true,
false,
"WARRIOR",
},
[198214] = {
true,
false,
"deeppink",
},
[127879] = {
true,
false,
"WARRIOR",
},
[220976] = {
true,
false,
"deeppink",
},
[223150] = {
true,
false,
"snow",
},
[199749] = {
true,
false,
"WARRIOR",
},
[220974] = {
true,
false,
"deeppink",
},
[223777] = {
true,
false,
"peachpuff",
},
[168420] = {
true,
false,
"peachpuff",
},
[165479] = {
true,
false,
"slateblue",
},
[196548] = {
true,
false,
"snow",
},
[212793] = {
true,
false,
"deeppink",
},
[178139] = {
true,
false,
"peachpuff",
},
[211121] = {
true,
false,
"slateblue",
},
[168934] = {
true,
false,
"deeppink",
},
[212412] = {
true,
false,
"deeppink",
},
[83763] = {
true,
false,
"snow",
},
[160495] = {
true,
false,
"snow",
},
[184022] = {
true,
false,
"magenta",
},
[220978] = {
true,
false,
"deeppink",
},
[205618] = {
true,
false,
"slateblue",
},
[75899] = {
true,
false,
"deeppink",
},
[210109] = {
true,
false,
"slateblue",
},
[165483] = {
true,
false,
"deeppink",
},
[212411] = {
true,
false,
"slateblue",
},
[113998] = {
true,
false,
"WARRIOR",
},
[184023] = {
true,
false,
"PALADIN",
},
[189266] = {
true,
false,
"WARRIOR",
},
[178141] = {
true,
false,
"deeppink",
},
[211262] = {
true,
false,
"deeppink",
},
[194894] = {
true,
false,
"magenta",
},
[211261] = {
true,
false,
"deeppink",
},
[196044] = {
true,
false,
"lime",
},
[231977] = {
true,
false,
"peachpuff",
},
[83892] = {
true,
false,
"snow",
},
[188244] = {
true,
false,
"slateblue",
},
[178142] = {
true,
false,
"snow",
},
[157810] = {
true,
false,
"snow",
},
[231978] = {
true,
false,
"snow",
},
[208193] = {
true,
false,
"peachpuff",
},
[196045] = {
true,
false,
"snow",
},
[201288] = {
true,
false,
"deeppink",
},
[130435] = {
true,
false,
"slateblue",
},
[199368] = {
true,
false,
"deeppink",
},
[189265] = {
true,
false,
"PALADIN",
},
[164461] = {
true,
false,
"snow",
},
[208450] = {
true,
false,
"slateblue",
},
[194895] = {
true,
false,
"lime",
},
[168425] = {
true,
false,
"deeppink",
},
[242209] = {
true,
false,
"snow",
},
[83893] = {
true,
false,
"peachpuff",
},
[128969] = {
true,
false,
"deeppink",
},
[99366] = {
true,
false,
"magenta",
},
[208438] = {
true,
false,
"slateblue",
},
[164463] = {
true,
false,
"snow",
},
[227632] = {
true,
false,
"deeppink",
},
[220599] = {
true,
false,
"snow",
},
[217658] = {
true,
false,
"deeppink",
},
[177889] = {
true,
false,
"deeppink",
},
[187224] = {
true,
false,
"cyan",
},
[211904] = {
true,
false,
"deeppink",
},
[154744] = {
true,
false,
"deeppink",
},
[83894] = {
true,
false,
"slateblue",
},
[194897] = {
true,
false,
"deeppink",
},
[217531] = {
true,
false,
"deeppink",
},
[167532] = {
true,
false,
"slateblue",
},
[114584] = {
true,
false,
"slateblue",
},
[98280] = {
true,
false,
"snow",
},
[195265] = {
true,
false,
"slateblue",
},
[180432] = {
true,
false,
"peachpuff",
},
[98406] = {
true,
false,
"cyan",
},
[194898] = {
true,
false,
"WARRIOR",
},
[208440] = {
true,
false,
"slateblue",
},
[167533] = {
true,
false,
"slateblue",
},
[212673] = {
true,
false,
"WARRIOR",
},
[98792] = {
true,
false,
"lime",
},
[187969] = {
true,
false,
"lime",
},
[220730] = {
true,
false,
"slateblue",
},
[172265] = {
true,
false,
"snow",
},
[227635] = {
true,
false,
"snow",
},
[217533] = {
true,
false,
"deeppink",
},
[167534] = {
true,
false,
"slateblue",
},
[177892] = {
true,
false,
"peachpuff",
},
[220986] = {
true,
false,
"deeppink",
},
[165872] = {
true,
false,
"deeppink",
},
[150143] = {
true,
false,
"peachpuff",
},
[214209] = {
true,
false,
"snow",
},
[229537] = {
true,
false,
"yellow",
},
[168942] = {
true,
false,
"peachpuff",
},
[186206] = {
true,
false,
"WARRIOR",
},
[131858] = {
true,
false,
"slateblue",
},
[186208] = {
true,
false,
"DRUID",
},
[213954] = {
true,
false,
"slateblue",
},
[180323] = {
true,
false,
"deeppink",
},
[164567] = {
true,
false,
"snow",
},
[207177] = {
true,
false,
"slateblue",
},
[127757] = {
true,
false,
"cyan",
},
[208456] = {
true,
false,
"peachpuff",
},
[223773] = {
true,
false,
"peachpuff",
},
[220988] = {
true,
false,
"deeppink",
},
[190426] = {
true,
false,
"cyan",
},
[189531] = {
true,
false,
"lime",
},
[162038] = {
true,
false,
"slateblue",
},
[98538] = {
true,
false,
"cyan",
},
[199124] = {
true,
false,
"snow",
},
[150146] = {
true,
false,
"deeppink",
},
[162040] = {
true,
false,
"deeppink",
},
[137103] = {
true,
false,
"lime",
},
[129548] = {
true,
false,
"WARRIOR",
},
[101991] = {
true,
false,
"PALADIN",
},
[162039] = {
true,
false,
"snow",
},
[114316] = {
true,
false,
"snow",
},
[156157] = {
true,
false,
"peachpuff",
},
[167538] = {
true,
false,
"slateblue",
},
[75713] = {
true,
false,
"magenta",
},
[180070] = {
true,
false,
"deeppink",
},
[195927] = {
true,
false,
"dodgerblue",
},
[97197] = {
true,
false,
"dodgerblue",
},
[198868] = {
true,
false,
"snow",
},
[229686] = {
true,
false,
"snow",
},
[170480] = {
true,
false,
"slateblue",
},
[208459] = {
true,
false,
"snow",
},
[184131] = {
true,
false,
"cyan",
},
[191164] = {
true,
false,
"deeppink",
},
[52019] = {
true,
false,
"deeppink",
},
[83578] = {
true,
false,
"slateblue",
},
[227513] = {
true,
false,
"snow",
},
[195928] = {
true,
false,
"dodgerblue",
},
[115019] = {
true,
false,
"snow",
},
[200126] = {
true,
false,
"magenta",
},
[190174] = {
true,
false,
"deeppink",
},
[126928] = {
true,
false,
"DRUID",
},
[195930] = {
true,
false,
"dodgerblue",
},
[203857] = {
true,
false,
"snow",
},
[227514] = {
true,
false,
"deeppink",
},
[195929] = {
true,
false,
"dodgerblue",
},
[190688] = {
true,
false,
"slateblue",
},
[221760] = {
true,
false,
"peachpuff",
},
[174197] = {
true,
false,
"snow",
},
[231223] = {
true,
false,
"snow",
},
[75652] = {
true,
false,
"deeppink",
},
[229433] = {
true,
false,
"slateblue",
},
[223423] = {
true,
false,
"slateblue",
},
[118489] = {
true,
false,
"deeppink",
},
[170483] = {
true,
false,
"deeppink",
},
[39392] = {
true,
false,
"slateblue",
},
[155908] = {
true,
false,
"deeppink",
},
[193373] = {
true,
false,
"lime",
},
[162047] = {
true,
false,
"slateblue",
},
[229434] = {
true,
false,
"slateblue",
},
[228539] = {
true,
false,
"snow",
},
[168310] = {
true,
false,
"deeppink",
},
[186220] = {
true,
false,
"PALADIN",
},
[204206] = {
true,
false,
"peachpuff",
},
[133912] = {
true,
false,
"magenta",
},
[83390] = {
true,
false,
"snow",
},
[45915] = {
true,
false,
"WARRIOR",
},
[220616] = {
true,
false,
"slateblue",
},
[114334] = {
true,
false,
"slateblue",
},
[208208] = {
true,
false,
"slateblue",
},
[84520] = {
true,
false,
"slateblue",
},
[90997] = {
true,
false,
"WARRIOR",
},
[81984] = {
true,
false,
"slateblue",
},
[196576] = {
true,
false,
"magenta",
},
[197595] = {
true,
false,
"slateblue",
},
[203861] = {
true,
false,
"slateblue",
},
[190690] = {
true,
false,
"slateblue",
},
[170234] = {
true,
false,
"deeppink",
},
[212389] = {
true,
false,
"peachpuff",
},
[179821] = {
true,
false,
"deeppink",
},
[83389] = {
true,
false,
"slateblue",
},
[157571] = {
true,
false,
"snow",
},
[173044] = {
true,
false,
"snow",
},
[154758] = {
true,
false,
"deeppink",
},
[193760] = {
true,
false,
"slateblue",
},
[118491] = {
true,
false,
"snow",
},
[115486] = {
true,
false,
"slateblue",
},
[220742] = {
true,
false,
"deeppink",
},
[224962] = {
true,
false,
"snow",
},
[157572] = {
true,
false,
"snow",
},
[164861] = {
true,
false,
"peachpuff",
},
[114783] = {
true,
false,
"snow",
},
[91000] = {
true,
false,
"WARRIOR",
},
[105704] = {
true,
false,
"magenta",
},
[166396] = {
true,
false,
"peachpuff",
},
[166524] = {
true,
false,
"snow",
},
[215756] = {
true,
false,
"deeppink",
},
[187240] = {
true,
false,
"slateblue",
},
[129553] = {
true,
false,
"magenta",
},
[180335] = {
true,
false,
"peachpuff",
},
[202969] = {
true,
false,
"deeppink",
},
[214350] = {
true,
false,
"snow",
},
[168443] = {
true,
false,
"peachpuff",
},
[77700] = {
true,
false,
"snow",
},
[197857] = {
true,
false,
"lime",
},
[84989] = {
true,
false,
"magenta",
},
[184300] = {
true,
false,
"slateblue",
},
[180336] = {
true,
false,
"snow",
},
[100526] = {
true,
false,
"WARRIOR",
},
[105705] = {
true,
false,
"WARRIOR",
},
[170490] = {
true,
false,
"snow",
},
[168572] = {
true,
false,
"peachpuff",
},
[175861] = {
true,
false,
"deeppink",
},
[84990] = {
true,
false,
"peachpuff",
},
[184301] = {
true,
false,
"PALADIN",
},
[234557] = {
true,
false,
"deeppink",
},
[202971] = {
true,
false,
"snow",
},
[225605] = {
true,
false,
"snow",
},
[115488] = {
true,
false,
"peachpuff",
},
[163458] = {
true,
false,
"snow",
},
[197985] = {
true,
false,
"magenta",
},
[164737] = {
true,
false,
"deeppink",
},
[81985] = {
true,
false,
"snow",
},
[122969] = {
true,
false,
"PALADIN",
},
[40577] = {
true,
false,
"slateblue",
},
[168318] = {
true,
false,
"slateblue",
},
[150160] = {
true,
false,
"slateblue",
},
[163459] = {
true,
false,
"peachpuff",
},
[217039] = {
true,
false,
"slateblue",
},
[198870] = {
true,
false,
"peachpuff",
},
[184303] = {
true,
false,
"lime",
},
[104300] = {
true,
false,
"WARRIOR",
},
[225479] = {
true,
false,
"peachpuff",
},
[91001] = {
true,
false,
"lime",
},
[193462] = {
true,
false,
"magenta",
},
[197219] = {
true,
false,
"slateblue",
},
[198577] = {
true,
false,
"peachpuff",
},
[165762] = {
true,
false,
"deeppink",
},
[165763] = {
true,
false,
"snow",
},
[122970] = {
true,
false,
"lime",
},
[219983] = {
true,
false,
"slateblue",
},
[131492] = {
true,
false,
"magenta",
},
[76104] = {
true,
false,
"magenta",
},
[191847] = {
true,
false,
"magenta",
},
[211290] = {
true,
false,
"deeppink",
},
[86526] = {
true,
false,
"peachpuff",
},
[98521] = {
true,
false,
"deeppink",
},
[135329] = {
true,
false,
"deeppink",
},
[81603] = {
true,
false,
"slateblue",
},
[166275] = {
true,
false,
"snow",
},
[45917] = {
true,
false,
"cyan",
},
[196198] = {
true,
false,
"peachpuff",
},
[174843] = {
true,
false,
"slateblue",
},
[198500] = {
true,
false,
"snow",
},
[211289] = {
true,
false,
"deeppink",
},
[122971] = {
true,
false,
"slateblue",
},
[80938] = {
true,
false,
"slateblue",
},
[166276] = {
true,
false,
"slateblue",
},
[150165] = {
true,
false,
"snow",
},
[168578] = {
true,
false,
"snow",
},
[150292] = {
true,
false,
"deeppink",
},
[218961] = {
true,
false,
"deeppink",
},
[205152] = {
true,
false,
"cyan",
},
[228424] = {
true,
false,
"snow",
},
[162057] = {
true,
false,
"slateblue",
},
[205151] = {
true,
false,
"WARRIOR",
},
[186229] = {
true,
false,
"magenta",
},
[196200] = {
true,
false,
"lime",
},
[170882] = {
true,
false,
"peachpuff",
},
[186226] = {
true,
false,
"magenta",
},
[178171] = {
true,
false,
"deeppink",
},
[122972] = {
true,
false,
"magenta",
},
[169861] = {
true,
false,
"peachpuff",
},
[207198] = {
true,
false,
"snow",
},
[100531] = {
true,
false,
"WARRIOR",
},
[92538] = {
true,
false,
"lime",
},
[213338] = {
true,
false,
"snow",
},
[198503] = {
true,
false,
"snow",
},
[99891] = {
true,
false,
"WARRIOR",
},
[129367] = {
true,
false,
"peachpuff",
},
[218324] = {
true,
false,
"deeppink",
},
[211291] = {
true,
false,
"deeppink",
},
[220626] = {
true,
false,
"orange",
},
[196202] = {
true,
false,
"peachpuff",
},
[175992] = {
true,
false,
"deeppink",
},
[212826] = {
true,
false,
"deeppink",
},
[164873] = {
true,
false,
"deeppink",
},
[231496] = {
true,
false,
"peachpuff",
},
[180474] = {
true,
false,
"deeppink",
},
[186740] = {
true,
false,
"WARRIOR",
},
[236995] = {
true,
false,
"slateblue",
},
[196203] = {
true,
false,
"snow",
},
[212827] = {
true,
false,
"deeppink",
},
[180091] = {
true,
false,
"deeppink",
},
[129559] = {
true,
false,
"lime",
},
[150297] = {
true,
false,
"peachpuff",
},
[180348] = {
true,
false,
"slateblue",
},
[186741] = {
true,
false,
"magenta",
},
[164363] = {
true,
false,
"peachpuff",
},
[150169] = {
true,
false,
"peachpuff",
},
[183033] = {
true,
false,
"slateblue",
},
[45919] = {
true,
false,
"cyan",
},
[138281] = {
true,
false,
"WARRIOR",
},
[189555] = {
true,
false,
"snow",
},
[100532] = {
true,
false,
"deeppink",
},
[207202] = {
true,
false,
"snow",
},
[182778] = {
true,
false,
"deeppink",
},
[179837] = {
true,
false,
"slateblue",
},
[229069] = {
true,
false,
"snow",
},
[214608] = {
true,
false,
"snow",
},
[111563] = {
true,
false,
"WARRIOR",
},
[129370] = {
true,
false,
"snow",
},
[163086] = {
true,
false,
"slateblue",
},
[144295] = {
true,
false,
"peachpuff",
},
[187768] = {
true,
false,
"snow",
},
[91006] = {
true,
false,
"PALADIN",
},
[187897] = {
true,
false,
"deeppink",
},
[167116] = {
true,
false,
"deeppink",
},
[223253] = {
true,
false,
"snow",
},
[173189] = {
true,
false,
"snow",
},
[234955] = {
true,
false,
"deeppink",
},
[205158] = {
true,
false,
"cyan",
},
[207207] = {
true,
false,
"orange",
},
[129369] = {
true,
false,
"deeppink",
},
[97720] = {
true,
false,
"deeppink",
},
[212831] = {
true,
false,
"deeppink",
},
[133685] = {
true,
false,
"cyan",
},
[195696] = {
true,
false,
"magenta",
},
[224219] = {
true,
false,
"snow",
},
[213343] = {
true,
false,
"slateblue",
},
[144294] = {
true,
false,
"snow",
},
[97788] = {
true,
false,
"WARRIOR",
},
[130011] = {
true,
false,
"lime",
},
[155221] = {
true,
false,
"snow",
},
[222167] = {
true,
false,
"snow",
},
[80936] = {
true,
false,
"peachpuff",
},
[153882] = {
true,
false,
"snow",
},
[41139] = {
true,
false,
"peachpuff",
},
[134701] = {
true,
false,
"magenta",
},
[179841] = {
true,
false,
"snow",
},
[151325] = {
true,
false,
"deeppink",
},
[59873] = {
true,
false,
"slateblue",
},
[156245] = {
true,
false,
"slateblue",
},
[230740] = {
true,
false,
"deeppink",
},
[213217] = {
true,
false,
"snow",
},
[40357] = {
true,
false,
"deeppink",
},
[171384] = {
true,
false,
"peachpuff",
},
[188026] = {
true,
false,
"deeppink",
},
[168717] = {
true,
false,
"snow",
},
[206696] = {
true,
false,
"slateblue",
},
[231380] = {
true,
false,
"snow",
},
[183423] = {
true,
false,
"snow",
},
[165137] = {
true,
false,
"slateblue",
},
[187771] = {
true,
false,
"peachpuff",
},
[234957] = {
true,
false,
"snow",
},
[135474] = {
true,
false,
"peachpuff",
},
[168718] = {
true,
false,
"peachpuff",
},
[57109] = {
true,
false,
"WARRIOR",
},
[184319] = {
true,
false,
"lime",
},
[165010] = {
true,
false,
"slateblue",
},
[200943] = {
true,
false,
"slateblue",
},
[95769] = {
true,
false,
"magenta",
},
[97083] = {
true,
false,
"magenta",
},
[211816] = {
true,
false,
"deeppink",
},
[191225] = {
true,
false,
"slateblue",
},
[206698] = {
true,
false,
"peachpuff",
},
[242631] = {
true,
false,
"deeppink",
},
[183425] = {
true,
false,
"peachpuff",
},
[234962] = {
true,
false,
"peachpuff",
},
[105715] = {
true,
false,
"lime",
},
[212453] = {
true,
false,
"snow",
},
[40166] = {
true,
false,
"slateblue",
},
[156244] = {
true,
false,
"slateblue",
},
[98810] = {
true,
false,
"WARRIOR",
},
[205804] = {
true,
false,
"WARRIOR",
},
[179334] = {
true,
false,
"deeppink",
},
[194990] = {
true,
false,
"snow",
},
[176521] = {
true,
false,
"peachpuff",
},
[186242] = {
true,
false,
"lime",
},
[167113] = {
true,
false,
"peachpuff",
},
[104246] = {
true,
false,
"WARRIOR",
},
[130012] = {
true,
false,
"PALADIN",
},
[163862] = {
true,
false,
"peachpuff",
},
[190588] = {
true,
false,
"slateblue",
},
[191739] = {
true,
false,
"WARRIOR",
},
[92610] = {
true,
false,
"lime",
},
[224731] = {
true,
false,
"slateblue",
},
[168594] = {
true,
false,
"slateblue",
},
[189235] = {
true,
false,
"cyan",
},
[144298] = {
true,
false,
"deeppink",
},
[184581] = {
true,
false,
"WARRIOR",
},
[188673] = {
true,
false,
"slateblue",
},
[176395] = {
true,
false,
"peachpuff",
},
[176523] = {
true,
false,
"slateblue",
},
[224732] = {
true,
false,
"snow",
},
[198263] = {
true,
false,
"slateblue",
},
[190206] = {
true,
false,
"lime",
},
[180104] = {
true,
false,
"snow",
},
[224221] = {
true,
false,
"slateblue",
},
[114796] = {
true,
false,
"peachpuff",
},
[216293] = {
true,
false,
"peachpuff",
},
[165529] = {
true,
false,
"peachpuff",
},
[96574] = {
true,
false,
"slateblue",
},
[40167] = {
true,
false,
"peachpuff",
},
[191230] = {
true,
false,
"deeppink",
},
[169875] = {
true,
false,
"peachpuff",
},
[165911] = {
true,
false,
"deeppink",
},
[82597] = {
true,
false,
"deeppink",
},
[206064] = {
true,
false,
"peachpuff",
},
[95832] = {
true,
false,
"WARRIOR",
},
[104247] = {
true,
false,
"magenta",
},
[130909] = {
true,
false,
"lime",
},
[135989] = {
true,
false,
"WARRIOR",
},
[206704] = {
true,
false,
"slateblue",
},
[191232] = {
true,
false,
"peachpuff",
},
[192767] = {
true,
false,
"slateblue",
},
[133432] = {
true,
false,
"snow",
},
[154020] = {
true,
false,
"snow",
},
[115757] = {
true,
false,
"slateblue",
},
[164506] = {
true,
false,
"deeppink",
},
[214761] = {
true,
false,
"slateblue",
},
[98813] = {
true,
false,
"snow",
},
[165913] = {
true,
false,
"deeppink",
},
[45922] = {
true,
false,
"WARRIOR",
},
[206066] = {
true,
false,
"PALADIN",
},
[223822] = {
true,
false,
"deeppink",
},
[221667] = {
true,
false,
"snow",
},
[40935] = {
true,
false,
"lime",
},
[214762] = {
true,
false,
"deeppink",
},
[229212] = {
true,
false,
"orange",
},
[98366] = {
true,
false,
"lime",
},
[155812] = {
true,
false,
"peachpuff",
},
[230748] = {
true,
false,
"deeppink",
},
[224609] = {
true,
false,
"deeppink",
},
[211228] = {
true,
false,
"peachpuff",
},
[96640] = {
true,
false,
"lime",
},
[92612] = {
true,
false,
"WARRIOR",
},
[220946] = {
true,
false,
"slateblue",
},
[224271] = {
true,
false,
"snow",
},
[169924] = {
true,
false,
"slateblue",
},
[114629] = {
true,
false,
"peachpuff",
},
[166299] = {
true,
false,
"peachpuff",
},
[56792] = {
true,
false,
"deeppink",
},
[177808] = {
true,
false,
"slateblue",
},
[213741] = {
true,
false,
"orange",
},
[199547] = {
true,
false,
"deeppink",
},
[175550] = {
true,
false,
"deeppink",
},
[204918] = {
true,
false,
"magenta",
},
[155090] = {
true,
false,
"snow",
},
[40925] = {
true,
false,
"cyan",
},
[130400] = {
true,
false,
"slateblue",
},
[223844] = {
true,
false,
"snow",
},
[171799] = {
true,
false,
"deeppink",
},
[208244] = {
true,
false,
"snow",
},
[184331] = {
true,
false,
"slateblue",
},
[114544] = {
true,
false,
"deeppink",
},
[180495] = {
true,
false,
"slateblue",
},
[166301] = {
true,
false,
"deeppink",
},
[98368] = {
true,
false,
"WARRIOR",
},
[40936] = {
true,
false,
"WARRIOR",
},
[170690] = {
true,
false,
"peachpuff",
},
[199549] = {
true,
false,
"deeppink",
},
[101437] = {
true,
false,
"peachpuff",
},
[122984] = {
true,
false,
"deeppink",
},
[41096] = {
true,
false,
"magenta",
},
[166302] = {
true,
false,
"snow",
},
[97068] = {
true,
false,
"WARRIOR",
},
[184580] = {
true,
false,
"magenta",
},
[179842] = {
true,
false,
"deeppink",
},
[168988] = {
true,
false,
"deeppink",
},
[167965] = {
true,
false,
"peachpuff",
},
[197671] = {
true,
false,
"peachpuff",
},
[195842] = {
true,
false,
"lime",
},
[205727] = {
true,
false,
"magenta",
},
[104251] = {
true,
false,
"lime",
},
[173720] = {
true,
false,
"slateblue",
},
[163618] = {
true,
false,
"peachpuff",
},
[116549] = {
true,
false,
"snow",
},
[227300] = {
true,
false,
"slateblue",
},
[186191] = {
true,
false,
"magenta",
},
[127799] = {
true,
false,
"WARRIOR",
},
[184335] = {
true,
false,
"WARRIOR",
},
[115395] = {
true,
false,
"slateblue",
},
[189706] = {
true,
false,
"yellow",
},
[186125] = {
true,
false,
"magenta",
},
[220141] = {
true,
false,
"snow",
},
[167967] = {
true,
false,
"peachpuff",
},
[45924] = {
true,
false,
"PALADIN",
},
[239833] = {
true,
false,
"deeppink",
},
[95766] = {
true,
false,
"WARRIOR",
},
[165410] = {
true,
false,
"slateblue",
},
[205435] = {
true,
false,
"slateblue",
},
[163620] = {
true,
false,
"slateblue",
},
[205691] = {
true,
false,
"magenta",
},
[98370] = {
true,
false,
"snow",
},
[184140] = {
true,
false,
"deeppink",
},
[239834] = {
true,
false,
"deeppink",
},
[220815] = {
true,
false,
"peachpuff",
},
[179733] = {
true,
false,
"yellow",
},
[163621] = {
true,
false,
"slateblue",
},
[171805] = {
true,
false,
"peachpuff",
},
[168992] = {
true,
false,
"snow",
},
[212981] = {
true,
false,
"WARRIOR",
},
[186246] = {
true,
false,
"PALADIN",
},
[177817] = {
true,
false,
"peachpuff",
},
[45477] = {
true,
false,
"lime",
},
[196102] = {
true,
false,
"magenta",
},
[177816] = {
true,
false,
"snow",
},
[98243] = {
true,
false,
"WARRIOR",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"slateblue",
},
[114803] = {
true,
false,
"snow",
},
[239836] = {
true,
false,
"deeppink",
},
[130404] = {
true,
false,
"cyan",
},
[223724] = {
true,
false,
"yellow",
},
[98691] = {
true,
false,
"lime",
},
[82579] = {
true,
false,
"snow",
},
[213751] = {
true,
false,
"yellow",
},
[102287] = {
true,
false,
"cyan",
},
[65362] = {
true,
false,
"WARRIOR",
},
[175517] = {
true,
false,
"peachpuff",
},
[114804] = {
true,
false,
"peachpuff",
},
[165414] = {
true,
false,
"snow",
},
[102095] = {
true,
false,
"lime",
},
[193291] = {
true,
false,
"deeppink",
},
[151476] = {
true,
false,
"slateblue",
},
[59544] = {
true,
false,
"magenta",
},
[155824] = {
true,
false,
"peachpuff",
},
[220401] = {
true,
false,
"deeppink",
},
[136643] = {
true,
false,
"slateblue",
},
[216621] = {
true,
false,
"deeppink",
},
[187154] = {
true,
false,
"deeppink",
},
[194315] = {
true,
false,
"slateblue",
},
[213806] = {
true,
false,
"snow",
},
[131812] = {
true,
false,
"magenta",
},
[135365] = {
true,
false,
"deeppink",
},
[231839] = {
true,
false,
"snow",
},
[214419] = {
true,
false,
"peachpuff",
},
[236033] = {
true,
false,
"peachpuff",
},
[187155] = {
true,
false,
"magenta",
},
[194316] = {
true,
false,
"slateblue",
},
[210812] = {
true,
false,
"snow",
},
[163882] = {
true,
false,
"slateblue",
},
[122973] = {
true,
false,
"peachpuff",
},
[195851] = {
true,
false,
"lime",
},
[84499] = {
true,
false,
"deeppink",
},
[201222] = {
true,
false,
"cyan",
},
[173729] = {
true,
false,
"deeppink",
},
[194317] = {
true,
false,
"slateblue",
},
[169893] = {
true,
false,
"deeppink",
},
[114626] = {
true,
false,
"deeppink",
},
[45926] = {
true,
false,
"WARRIOR",
},
[191206] = {
true,
false,
"snow",
},
[199233] = {
true,
false,
"slateblue",
},
[201223] = {
true,
false,
"PALADIN",
},
[180429] = {
true,
false,
"slateblue",
},
[102094] = {
true,
false,
"WARRIOR",
},
[115765] = {
true,
false,
"deeppink",
},
[135240] = {
true,
false,
"PALADIN",
},
[200840] = {
true,
false,
"slateblue",
},
[95779] = {
true,
false,
"slateblue",
},
[190377] = {
true,
false,
"lime",
},
[156212] = {
true,
false,
"snow",
},
[162763] = {
true,
false,
"slateblue",
},
[129374] = {
true,
false,
"slateblue",
},
[231531] = {
true,
false,
"deeppink",
},
[135241] = {
true,
false,
"snow",
},
[214140] = {
true,
false,
"slateblue",
},
[190034] = {
true,
false,
"slateblue",
},
[155830] = {
true,
false,
"snow",
},
[100485] = {
true,
false,
"slateblue",
},
[133835] = {
true,
false,
"magenta",
},
[222964] = {
true,
false,
"peachpuff",
},
[213885] = {
true,
false,
"deeppink",
},
[164929] = {
true,
false,
"peachpuff",
},
[228463] = {
true,
false,
"snow",
},
[195855] = {
true,
false,
"WARRIOR",
},
[183707] = {
true,
false,
"snow",
},
[186284] = {
true,
false,
"WARRIOR",
},
[210818] = {
true,
false,
"peachpuff",
},
[187160] = {
true,
false,
"lime",
},
[81432] = {
true,
false,
"snow",
},
[102404] = {
true,
false,
"slateblue",
},
[155831] = {
true,
false,
"deeppink",
},
[192787] = {
true,
false,
"WARRIOR",
},
[206214] = {
true,
false,
"slateblue",
},
[205337] = {
true,
false,
"deeppink",
},
[187033] = {
true,
false,
"slateblue",
},
[168747] = {
true,
false,
"deeppink",
},
[136139] = {
true,
false,
"deeppink",
},
[59546] = {
true,
false,
"magenta",
},
[100486] = {
true,
false,
"snow",
},
[192788] = {
true,
false,
"magenta",
},
[101637] = {
true,
false,
"slateblue",
},
[168109] = {
true,
false,
"snow",
},
[102788] = {
true,
false,
"PALADIN",
},
[162099] = {
true,
false,
"deeppink",
},
[190359] = {
true,
false,
"WARRIOR",
},
[189464] = {
true,
false,
"magenta",
},
[76446] = {
true,
false,
"magenta",
},
[197904] = {
true,
false,
"snow",
},
[114542] = {
true,
false,
"peachpuff",
},
[115640] = {
true,
false,
"deeppink",
},
[192791] = {
true,
false,
"deeppink",
},
[221945] = {
true,
false,
"deeppink",
},
[138187] = {
true,
false,
"PALADIN",
},
[96587] = {
true,
false,
"snow",
},
[189466] = {
true,
false,
"cyan",
},
[87252] = {
true,
false,
"slateblue",
},
[229619] = {
true,
false,
"deeppink",
},
[131666] = {
true,
false,
"magenta",
},
[176551] = {
true,
false,
"snow",
},
[212739] = {
true,
false,
"slateblue",
},
[189338] = {
true,
false,
"magenta",
},
[107073] = {
true,
false,
"magenta",
},
[45928] = {
true,
false,
"DRUID",
},
[227573] = {
true,
false,
"slateblue",
},
[245092] = {
true,
false,
"slateblue",
},
[196116] = {
true,
false,
"lime",
},
[144071] = {
true,
false,
"snow",
},
[189467] = {
true,
false,
"DRUID",
},
[190362] = {
true,
false,
"magenta",
},
[224249] = {
true,
false,
"deeppink",
},
[113537] = {
true,
false,
"cyan",
},
[227575] = {
true,
false,
"peachpuff",
},
[59547] = {
true,
false,
"slateblue",
},
[196117] = {
true,
false,
"slateblue",
},
[114624] = {
true,
false,
"slateblue",
},
[223994] = {
true,
false,
"snow",
},
[213892] = {
true,
false,
"snow",
},
[167612] = {
true,
false,
"slateblue",
},
[81819] = {
true,
false,
"magenta",
},
[163126] = {
true,
false,
"snow",
},
[193944] = {
true,
false,
"magenta",
},
[209801] = {
true,
false,
"deeppink",
},
[132820] = {
true,
false,
"WARRIOR",
},
[115642] = {
true,
false,
"peachpuff",
},
[213893] = {
true,
false,
"snow",
},
[163894] = {
true,
false,
"peachpuff",
},
[169905] = {
true,
false,
"peachpuff",
},
[180015] = {
true,
false,
"peachpuff",
},
[168882] = {
true,
false,
"deeppink",
},
[205326] = {
true,
false,
"lime",
},
[163128] = {
true,
false,
"snow",
},
[184107] = {
true,
false,
"WARRIOR",
},
[162744] = {
true,
false,
"slateblue",
},
[189470] = {
true,
false,
"snow",
},
[171184] = {
true,
false,
"slateblue",
},
[152898] = {
true,
false,
"deeppink",
},
[192786] = {
true,
false,
"lime",
},
[81820] = {
true,
false,
"PALADIN",
},
[168627] = {
true,
false,
"snow",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"deeppink",
},
[189471] = {
true,
false,
"WARRIOR",
},
[186658] = {
true,
false,
"magenta",
},
[192796] = {
true,
false,
"lime",
},
[133430] = {
true,
false,
"slateblue",
},
[206351] = {
true,
false,
"snow",
},
[196577] = {
true,
false,
"snow",
},
[167964] = {
true,
false,
"deeppink",
},
[177891] = {
true,
false,
"slateblue",
},
[115388] = {
true,
false,
"deeppink",
},
[185508] = {
true,
false,
"lime",
},
[133463] = {
true,
false,
"slateblue",
},
[198424] = {
true,
false,
"peachpuff",
},
[197145] = {
true,
false,
"slateblue",
},
[197149] = {
true,
false,
"snow",
},
[218884] = {
true,
false,
"deeppink",
},
[190368] = {
true,
false,
"magenta",
},
[164921] = {
true,
false,
"snow",
},
[131821] = {
true,
false,
"magenta",
},
[135245] = {
true,
false,
"slateblue",
},
[167607] = {
true,
false,
"deeppink",
},
[156226] = {
true,
false,
"snow",
},
[188067] = {
true,
false,
"magenta",
},
[216328] = {
true,
false,
"deeppink",
},
[168886] = {
true,
false,
"snow",
},
[134232] = {
true,
false,
"peachpuff",
},
[45930] = {
true,
false,
"cyan",
},
[227581] = {
true,
false,
"snow",
},
[211341] = {
true,
false,
"slateblue",
},
[85194] = {
true,
false,
"deeppink",
},
[40943] = {
true,
false,
"PALADIN",
},
[198502] = {
true,
false,
"snow",
},
[157634] = {
true,
false,
"peachpuff",
},
[166969] = {
true,
false,
"snow",
},
[197905] = {
true,
false,
"magenta",
},
[192800] = {
true,
false,
"magenta",
},
[167536] = {
true,
false,
"slateblue",
},
[238068] = {
true,
false,
"deeppink",
},
[134284] = {
true,
false,
"WARRIOR",
},
[190370] = {
true,
false,
"slateblue",
},
[190371] = {
true,
false,
"WARRIOR",
},
[166970] = {
true,
false,
"peachpuff",
},
[82590] = {
true,
false,
"peachpuff",
},
[197146] = {
true,
false,
"slateblue",
},
[65317] = {
true,
false,
"slateblue",
},
[131677] = {
true,
false,
"deeppink",
},
[199703] = {
true,
false,
"deeppink",
},
[216326] = {
true,
false,
"snow",
},
[172981] = {
true,
false,
"slateblue",
},
[166971] = {
true,
false,
"deeppink",
},
[220368] = {
true,
false,
"yellow",
},
[152905] = {
true,
false,
"deeppink",
},
[227578] = {
true,
false,
"snow",
},
[164414] = {
true,
false,
"snow",
},
[129788] = {
true,
false,
"PALADIN",
},
[197406] = {
true,
false,
"deeppink",
},
[190373] = {
true,
false,
"magenta",
},
[164926] = {
true,
false,
"deeppink",
},
[128434] = {
true,
false,
"PALADIN",
},
[188703] = {
true,
false,
"yellow",
},
[206230] = {
true,
false,
"deeppink",
},
[165556] = {
true,
false,
"deeppink",
},
[199325] = {
true,
false,
"snow",
},
[84957] = {
true,
false,
"PALADIN",
},
[197535] = {
true,
false,
"dodgerblue",
},
[166589] = {
true,
false,
"deeppink",
},
[163520] = {
true,
false,
"slateblue",
},
[214287] = {
true,
false,
"yellow",
},
[198047] = {
true,
false,
"dodgerblue",
},
[196115] = {
true,
false,
"deeppink",
},
[45704] = {
true,
false,
"dimgray",
},
[182045] = {
true,
false,
"deeppink",
},
[183671] = {
true,
false,
"deeppink",
},
[198869] = {
true,
false,
"snow",
},
[86684] = {
true,
false,
"snow",
},
[76518] = {
true,
false,
"deeppink",
},
[176565] = {
true,
false,
"snow",
},
[177716] = {
true,
false,
"snow",
},
[163121] = {
true,
false,
"peachpuff",
},
[101326] = {
true,
false,
"deeppink",
},
[165824] = {
true,
false,
"deeppink",
},
[167998] = {
true,
false,
"slateblue",
},
[165805] = {
true,
false,
"slateblue",
},
[190207] = {
true,
false,
"magenta",
},
[192934] = {
true,
false,
"peachpuff",
},
[214012] = {
true,
false,
"slateblue",
},
[214673] = {
true,
false,
"peachpuff",
},
[210269] = {
true,
false,
"slateblue",
},
[229251] = {
true,
false,
"slateblue",
},
[129552] = {
true,
false,
"WARRIOR",
},
[75459] = {
true,
false,
"lime",
},
[195876] = {
true,
false,
"WARRIOR",
},
[84767] = {
true,
false,
"WARRIOR",
},
[168007] = {
true,
false,
"peachpuff",
},
[163524] = {
true,
false,
"deeppink",
},
[189227] = {
true,
false,
"lime",
},
[229252] = {
true,
false,
"peachpuff",
},
[210966] = {
true,
false,
"peachpuff",
},
[193293] = {
true,
false,
"WARRIOR",
},
[195877] = {
true,
false,
"magenta",
},
[205212] = {
true,
false,
"deeppink",
},
[168384] = {
true,
false,
"peachpuff",
},
[98706] = {
true,
false,
"WARRIOR",
},
[130661] = {
true,
false,
"peachpuff",
},
[192333] = {
true,
false,
"slateblue",
},
[171376] = {
true,
false,
"peachpuff",
},
[101008] = {
true,
false,
"deeppink",
},
[216338] = {
true,
false,
"slateblue",
},
[200836] = {
true,
false,
"slateblue",
},
[131685] = {
true,
false,
"snow",
},
[198308] = {
true,
false,
"slateblue",
},
[114627] = {
true,
false,
"peachpuff",
},
[195878] = {
true,
false,
"magenta",
},
[233474] = {
true,
false,
"snow",
},
[81236] = {
true,
false,
"snow",
},
[216339] = {
true,
false,
"peachpuff",
},
[214421] = {
true,
false,
"slateblue",
},
[196856] = {
true,
false,
"slateblue",
},
[196263] = {
true,
false,
"snow",
},
[193799] = {
true,
false,
"cyan",
},
[190381] = {
true,
false,
"deeppink",
},
[83025] = {
true,
false,
"peachpuff",
},
[206074] = {
true,
false,
"snow",
},
[216340] = {
true,
false,
"deeppink",
},
[90998] = {
true,
false,
"magenta",
},
[104270] = {
true,
false,
"magenta",
},
[80805] = {
true,
false,
"slateblue",
},
[101438] = {
true,
false,
"peachpuff",
},
[167876] = {
true,
false,
"deeppink",
},
[199717] = {
true,
false,
"magenta",
},
[197799] = {
true,
false,
"snow",
},
[165919] = {
true,
false,
"slateblue",
},
[59552] = {
true,
false,
"peachpuff",
},
[190686] = {
true,
false,
"peachpuff",
},
[198311] = {
true,
false,
"slateblue",
},
[130485] = {
true,
false,
"deeppink",
},
[190342] = {
true,
false,
"PALADIN",
},
[199037] = {
true,
false,
"PALADIN",
},
[167963] = {
true,
false,
"peachpuff",
},
[164510] = {
true,
false,
"peachpuff",
},
[176573] = {
true,
false,
"deeppink",
},
[102232] = {
true,
false,
"magenta",
},
[190340] = {
true,
false,
"WARRIOR",
},
[231176] = {
true,
false,
"yellow",
},
[213913] = {
true,
false,
"snow",
},
[186420] = {
true,
false,
"lime",
},
[167111] = {
true,
false,
"snow",
},
[136549] = {
true,
false,
"deeppink",
},
[187315] = {
true,
false,
"WARRIOR",
},
[151127] = {
true,
false,
"deeppink",
},
[173714] = {
true,
false,
"slateblue",
},
[189234] = {
true,
false,
"deeppink",
},
[129527] = {
true,
false,
"WARRIOR",
},
[203812] = {
true,
false,
"deeppink",
},
[179388] = {
true,
false,
"snow",
},
[101075] = {
true,
false,
"deeppink",
},
[176575] = {
true,
false,
"snow",
},
[179852] = {
true,
false,
"peachpuff",
},
[131819] = {
true,
false,
"snow",
},
[176959] = {
true,
false,
"snow",
},
[80935] = {
true,
false,
"snow",
},
[210539] = {
true,
false,
"slateblue",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"slateblue",
},
[59553] = {
true,
false,
"lime",
},
[137830] = {
true,
false,
"lime",
},
[96664] = {
true,
false,
"magenta",
},
[212765] = {
true,
false,
"slateblue",
},
[169927] = {
true,
false,
"deeppink",
},
[179847] = {
true,
false,
"deeppink",
},
[185528] = {
true,
false,
"PALADIN",
},
[185656] = {
true,
false,
"snow",
},
[144296] = {
true,
false,
"slateblue",
},
[195119] = {
true,
false,
"magenta",
},
[164557] = {
true,
false,
"slateblue",
},
[129372] = {
true,
false,
"peachpuff",
},
[199595] = {
true,
false,
"magenta",
},
[154014] = {
true,
false,
"snow",
},
[185529] = {
true,
false,
"cyan",
},
[165197] = {
true,
false,
"deeppink",
},
[206697] = {
true,
false,
"snow",
},
[144293] = {
true,
false,
"slateblue",
},
[189816] = {
true,
false,
"snow",
},
[180864] = {
true,
false,
"deeppink",
},
[129529] = {
true,
false,
"lime",
},
[95834] = {
true,
false,
"magenta",
},
[45935] = {
true,
false,
"magenta",
},
[234443] = {
true,
false,
"deeppink",
},
[189878] = {
true,
false,
"yellow",
},
[173190] = {
true,
false,
"snow",
},
[237192] = {
true,
false,
"deeppink",
},
[114632] = {
true,
false,
"snow",
},
[205735] = {
true,
false,
"peachpuff",
},
[198702] = {
true,
false,
"slateblue",
},
[174210] = {
true,
false,
"snow",
},
[208165] = {
true,
false,
"snow",
},
[168396] = {
true,
false,
"slateblue",
},
[86372] = {
true,
false,
"cyan",
},
[133870] = {
true,
false,
"PALADIN",
},
[179010] = {
true,
false,
"snow",
},
[95771] = {
true,
false,
"PALADIN",
},
[75979] = {
true,
false,
"lime",
},
[151773] = {
true,
false,
"peachpuff",
},
[207199] = {
true,
false,
"peachpuff",
},
[180473] = {
true,
false,
"peachpuff",
},
[150168] = {
true,
false,
"deeppink",
},
[205408] = {
true,
false,
"WARRIOR",
},
[114633] = {
true,
false,
"slateblue",
},
[231312] = {
true,
false,
"snow",
},
[88163] = {
true,
false,
"deeppink",
},
[241798] = {
true,
false,
"snow",
},
[157017] = {
true,
false,
"peachpuff",
},
[198501] = {
true,
false,
"snow",
},
[170572] = {
true,
false,
"peachpuff",
},
[164562] = {
true,
false,
"peachpuff",
},
[210264] = {
true,
false,
"peachpuff",
},
[220060] = {
true,
false,
"snow",
},
[203230] = {
true,
false,
"peachpuff",
},
[185534] = {
true,
false,
"lime",
},
[162133] = {
true,
false,
"deeppink",
},
[178165] = {
true,
false,
"slateblue",
},
[44404] = {
true,
false,
"snow",
},
[164563] = {
true,
false,
"peachpuff",
},
[221979] = {
true,
false,
"deeppink",
},
[100527] = {
true,
false,
"PALADIN",
},
[179269] = {
true,
false,
"deeppink",
},
[241800] = {
true,
false,
"slateblue",
},
[171341] = {
true,
false,
"snow",
},
[178630] = {
true,
false,
"snow",
},
[223770] = {
true,
false,
"peachpuff",
},
[235151] = {
true,
false,
"peachpuff",
},
[59555] = {
true,
false,
"magenta",
},
[194487] = {
true,
false,
"cyan",
},
[151649] = {
true,
false,
"orange",
},
[165076] = {
true,
false,
"peachpuff",
},
[132126] = {
true,
false,
"peachpuff",
},
[152033] = {
true,
false,
"deeppink",
},
[215755] = {
true,
false,
"deeppink",
},
[102295] = {
true,
false,
"cyan",
},
[184130] = {
true,
false,
"WARRIOR",
},
[226200] = {
true,
false,
"peachpuff",
},
[228540] = {
true,
false,
"snow",
},
[185537] = {
true,
false,
"peachpuff",
},
[171343] = {
true,
false,
"deeppink",
},
[136470] = {
true,
false,
"snow",
},
[223772] = {
true,
false,
"peachpuff",
},
[168658] = {
true,
false,
"deeppink",
},
[212775] = {
true,
false,
"magenta",
},
[81212] = {
true,
false,
"slateblue",
},
[198709] = {
true,
false,
"slateblue",
},
[241803] = {
true,
false,
"snow",
},
[75506] = {
true,
false,
"snow",
},
[237967] = {
true,
false,
"yellow",
},
[104278] = {
true,
false,
"lime",
},
[198326] = {
true,
false,
"slateblue",
},
[184132] = {
true,
false,
"magenta",
},
[130635] = {
true,
false,
"snow",
},
[45912] = {
true,
false,
"PALADIN",
},
[205622] = {
true,
false,
"slateblue",
},
[114266] = {
true,
false,
"snow",
},
[214439] = {
true,
false,
"snow",
},
[115020] = {
true,
false,
"slateblue",
},
[223774] = {
true,
false,
"peachpuff",
},
[205384] = {
true,
false,
"PALADIN",
},
[150142] = {
true,
false,
"snow",
},
[228015] = {
true,
false,
"slateblue",
},
[114317] = {
true,
false,
"snow",
},
[208698] = {
true,
false,
"magenta",
},
[40634] = {
true,
false,
"snow",
},
[223775] = {
true,
false,
"peachpuff",
},
[211263] = {
true,
false,
"deeppink",
},
[229288] = {
true,
false,
"slateblue",
},
[131586] = {
true,
false,
"cyan",
},
[220195] = {
true,
false,
"snow",
},
[183495] = {
true,
false,
"slateblue",
},
[200137] = {
true,
false,
"lime",
},
[214441] = {
true,
false,
"deeppink",
},
[223776] = {
true,
false,
"peachpuff",
},
[214697] = {
true,
false,
"deeppink",
},
[176974] = {
true,
false,
"deeppink",
},
[190401] = {
true,
false,
"magenta",
},
[220196] = {
true,
false,
"deeppink",
},
[233623] = {
true,
false,
"deeppink",
},
[197698] = {
true,
false,
"WARRIOR",
},
[170850] = {
true,
false,
"deeppink",
},
[205363] = {
true,
false,
"PALADIN",
},
[176598] = {
true,
false,
"peachpuff",
},
[205619] = {
true,
false,
"slateblue",
},
[219046] = {
true,
false,
"snow",
},
[220197] = {
true,
false,
"slateblue",
},
[183497] = {
true,
false,
"peachpuff",
},
[196671] = {
true,
false,
"slateblue",
},
[127111] = {
true,
false,
"peachpuff",
},
[178008] = {
true,
false,
"yellow",
},
[150250] = {
true,
false,
"snow",
},
[205620] = {
true,
false,
"slateblue",
},
[190403] = {
true,
false,
"lime",
},
[129600] = {
true,
false,
"magenta",
},
[168153] = {
true,
false,
"deeppink",
},
[115406] = {
true,
false,
"snow",
},
[126918] = {
true,
false,
"lime",
},
[195135] = {
true,
false,
"cyan",
},
[150251] = {
true,
false,
"peachpuff",
},
[190404] = {
true,
false,
"WARRIOR",
},
},
["extra_icon_show_enrage_border"] = {
0,
0,
0,
},
["extra_icon_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["hook_data"] = {
{
["OptionsValues"] = {
["replaceName"] = false,
["nameplateFlash"] = true,
["colorTick"] = {
1,
1,
1,
1,
},
["colorInterruptSoon"] = {
0.25098040699959,
1,
0.25098040699959,
1,
},
["colorInterruptAvailable"] = {
0.25098040699959,
1,
0.25098040699959,
1,
},
["colorNoInterrupt"] = {
0.80000007152557,
0.80000007152557,
0.80000007152557,
1,
},
["colorProtected"] = {
1,
0.25098040699959,
0.25098040699959,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.50196081399918,
0.50196081399918,
1,
},
},
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else\n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend",
["Initialization"] = "function (modTable)\n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts =\n    {\n        \n        -- Warrior\n        [1] =\n        {\n            [1] = 6552, -- Pummel (Arms)\n            [2] = 6552, -- Pummel (Fury)\n            [3] = 6552 --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] =\n        {\n            [1] = 96231, -- Rebuke (Holy)\n            [2] = 96231, -- Rebuke (Protection)\n            [3] = 96231 -- Rebuke (Retribution)\n        },\n        \n        -- Hunter\n        [3] =\n        {\n            [1] = 147362, -- Counter Shot (Beast Mastery)\n            [2] = 147362, -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        },\n        \n        -- Rogue\n        [4] =\n        {\n            [1] = 1766, -- Kick (Assassination)\n            [2] = 1766, -- Kick (Outlaw)\n            [3] = 1766 -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] =\n        {\n            [1] = nil,\n            [2] = nil,\n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] =\n        {\n            [1] = 47528, -- Mind Freeze (Blood)\n            [2] = 47528, -- Mind Freeze (Frost)\n            [3] = 47528 -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] =\n        {\n            [1] = 57994, -- Wind Shear (Elemental)\n            [2] = 57994, -- Wind Shear (Enhancement)\n            [3] = 57994 -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] =\n        {\n            [1] = 2139, -- Counterspell (Arcane)\n            [2] = 2139, -- Counterspell (Fire)\n            [3] = 2139 -- Counterspell (Frost)\n        },\n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] =\n        {\n            [1] = 116705, -- Spear Hand Strike (Brewmaster)\n            [2] = 116705, -- Spear Hand Strike (Mistweaver)\n            [3] = 116705 -- Spear Hand Strike (Windwalker)\n        },\n        \n        -- Druid\n        [11] =\n        {\n            [1] = 78675, -- Solar Beam (Balance)\n            [2] = 106839, -- Skull Bash (Feral)\n            [3] = 106839, -- Skull Bash (Guardian)\n            [4] = 106839 -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] =\n        {\n            [1] = 183752, -- Disrupt (Havoc)\n            [2] = 183752 -- Disrupt (Vengeance)\n        },\n        \n        -- Evoker\n        [13] =\n        {\n            [1] = 351338, -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \nend\n\n\n",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)\n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellID = castBar.SpellID\n            if BigWigsAPI then\n                spellName =  BigWigsAPI.GetSpellRename(spellID) or castBar.spellName\n            else\n                spellName = castBar.spellName\n            end\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)\n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then\n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end\n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then\n                        local castText = currentText .. \" - \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end\n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cd = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration  =  cd.startTime, cd.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then\n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end\n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)\n                end\n                \n            end\n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else\n            -- Otherwise no interrupt available    \n            return nil\n        end\n    end\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local GCD=C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = GCD.startTime, GCD.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local info = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = info.startTime, info.duration\n        local spellReadyTime = spellStart + spellDuration\n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)\n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellID = castBar.SpellID\n            if BigWigsAPI then\n                spellName =  BigWigsAPI.GetSpellRename(spellID) or castBar.spellName\n            else\n                spellName = castBar.spellName\n            end\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)\n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then\n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end\n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then\n                        local castText = currentText .. \" - \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end\n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cd = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration  =  cd.startTime, cd.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then\n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end\n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)\n                end\n                \n            end\n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else\n            -- Otherwise no interrupt available    \n            return nil\n        end\n    end\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local GCD=C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = GCD.startTime, GCD.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local info = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = info.startTime, info.duration\n        local spellReadyTime = spellStart + spellDuration\n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else\n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend",
["Initialization"] = "function (modTable)\n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts =\n    {\n        \n        -- Warrior\n        [1] =\n        {\n            [1] = 6552, -- Pummel (Arms)\n            [2] = 6552, -- Pummel (Fury)\n            [3] = 6552 --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] =\n        {\n            [1] = 96231, -- Rebuke (Holy)\n            [2] = 96231, -- Rebuke (Protection)\n            [3] = 96231 -- Rebuke (Retribution)\n        },\n        \n        -- Hunter\n        [3] =\n        {\n            [1] = 147362, -- Counter Shot (Beast Mastery)\n            [2] = 147362, -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        },\n        \n        -- Rogue\n        [4] =\n        {\n            [1] = 1766, -- Kick (Assassination)\n            [2] = 1766, -- Kick (Outlaw)\n            [3] = 1766 -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] =\n        {\n            [1] = nil,\n            [2] = nil,\n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] =\n        {\n            [1] = 47528, -- Mind Freeze (Blood)\n            [2] = 47528, -- Mind Freeze (Frost)\n            [3] = 47528 -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] =\n        {\n            [1] = 57994, -- Wind Shear (Elemental)\n            [2] = 57994, -- Wind Shear (Enhancement)\n            [3] = 57994 -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] =\n        {\n            [1] = 2139, -- Counterspell (Arcane)\n            [2] = 2139, -- Counterspell (Fire)\n            [3] = 2139 -- Counterspell (Frost)\n        },\n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] =\n        {\n            [1] = 116705, -- Spear Hand Strike (Brewmaster)\n            [2] = 116705, -- Spear Hand Strike (Mistweaver)\n            [3] = 116705 -- Spear Hand Strike (Windwalker)\n        },\n        \n        -- Druid\n        [11] =\n        {\n            [1] = 78675, -- Solar Beam (Balance)\n            [2] = 106839, -- Skull Bash (Feral)\n            [3] = 106839, -- Skull Bash (Guardian)\n            [4] = 106839 -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] =\n        {\n            [1] = 183752, -- Disrupt (Havoc)\n            [2] = 183752 -- Disrupt (Vengeance)\n        },\n        \n        -- Evoker\n        [13] =\n        {\n            [1] = 351338, -- Quell (Devastation)\n            [2] = 351338 -- Quell (Preservation)\n        }\n    }\n    \nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
},
["Time"] = 1755963429,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/L6ZlsbPEC/9",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1350,
["semver"] = "1.2.3",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = 9,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = true,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = true,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 60,
["Key"] = "castNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["Name"] = "Enhanced Enemy Castbar",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --ensure reload updates existing\n    modTable.updateExisting(unitFrame)\nend\n\n\n",
["Initialization"] = "function (modTable)\n    \n    \n    -- settings:\n    local formatAuraTimers = modTable.config.formatAuraTimers\n    local formatBuffSpecialTimers = modTable.config.formatBuffSpecialTimers\n    \n    \n    -- time formatting function: (can be adjusted)\n    Plater.FormatTimeNew = function (s)\n        if s < 5 then\n            return (\"%.1f\"):format(s)\n        elseif s < 60 then\n            return (\"%d\"):format(s)\n        elseif s < 3600 then\n            return (\"%d:%02d\"):format(s/60%60, s%60)\n        elseif s < 86400 then\n            return (\"%dh %02dm\"):format(s/(3600), s/60%60)\n        else\n            return (\"%dd %02dh\"):format(s/86400, (s /3600) - (floor(s/86400) * 24))\n        end\n    end\n    Plater.FormatTimeOrig = Plater.FormatTimeOrig or Plater.FormatTime\n    \n    local DF = _G[\"DetailsFramework\"]\n    local IconRowFunctions = DF.IconRowFunctions or DF.IconMixin\n    IconRowFunctions.FormatCooldownTimeOrig = IconRowFunctions.FormatCooldownTimeOrig or IconRowFunctions.FormatCooldownTime\n    \n    \n    -- exchange formatting:\n    function modTable.hookTimeFormat()\n        if formatAuraTimers then\n            Plater.FormatTime = Plater.FormatTimeNew\n        else\n            Plater.FormatTime = Plater.FormatTimeOrig\n        end\n        \n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                IconRowFunctions.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n        else\n            -- no buff special\n            if IconRowFunctions.FormatCooldownTime then\n                IconRowFunctions.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            end\n        end\n    end\n    \n    function modTable.updateExisting(unitFrame)\n        \n        if formatBuffSpecialTimers then\n            \n            -- change time formatting for the Buff Special icons\n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = Plater.FormatTimeNew\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeNew (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        else\n            \n            if unitFrame.ExtraIconFrame.FormatCooldownTime then\n                unitFrame.ExtraIconFrame.FormatCooldownTime = IconRowFunctions.FormatCooldownTimeOrig\n            else\n                unitFrame.ExtraIconFrame.SetIcon = function (self, spellId, borderColor, startTime, duration, forceTexture, descText, count, debuffType, caster, canStealOrPurge)\n                    \n                    local spellName, _, spellIcon\n                    \n                    if (not forceTexture) then\n                        spellName, _, spellIcon = GetSpellInfo (spellId)\n                    else\n                        spellIcon = forceTexture\n                    end\n                    \n                    if (spellIcon) then\n                        local iconFrame = self:GetIcon()\n                        iconFrame.Texture:SetTexture (spellIcon)\n                        iconFrame.Texture:SetTexCoord (unpack (self.options.texcoord))\n                        \n                        if (borderColor) then\n                            iconFrame:SetBackdropBorderColor (Plater:ParseColors (borderColor))\n                        else\n                            iconFrame:SetBackdropBorderColor (0, 0, 0 ,0)\n                        end    \n                        \n                        if (startTime) then\n                            CooldownFrame_Set (iconFrame.Cooldown, startTime, duration, true, true)\n                            \n                            if (self.options.show_text) then\n                                iconFrame.CountdownText:Show()\n                                \n                                local formattedTime = Plater.FormatTimeOrig (startTime + duration - GetTime())\n                                \n                                iconFrame.CountdownText:SetPoint (self.options.text_anchor or \"center\", iconFrame, self.options.text_rel_anchor or \"center\", self.options.text_x_offset or 0, self.options.text_y_offset or 0)\n                                DF:SetFontSize (iconFrame.CountdownText, self.options.text_size)\n                                DF:SetFontFace (iconFrame.CountdownText, self.options.text_font)\n                                DF:SetFontOutline (iconFrame.CountdownText, self.options.text_outline)\n                                iconFrame.CountdownText:SetText (formattedTime)\n                                iconFrame.Cooldown:SetHideCountdownNumbers (true)\n                            else\n                                iconFrame.CountdownText:Hide()\n                                iconFrame.Cooldown:SetHideCountdownNumbers (false)\n                            end\n                        else\n                            iconFrame.CountdownText:Hide()\n                        end\n                        \n                        if (descText and self.options.desc_text) then\n                            iconFrame.Desc:Show()\n                            iconFrame.Desc:SetText (descText.text)\n                            iconFrame.Desc:SetTextColor (DF:ParseColors (descText.text_color or self.options.desc_text_color))\n                            iconFrame.Desc:SetPoint(self.options.desc_text_anchor or \"bottom\", iconFrame, self.options.desc_text_rel_anchor or \"top\", self.options.desc_text_x_offset or 0, self.options.desc_text_y_offset or 2)\n                            DF:SetFontSize (iconFrame.Desc, descText.text_size or self.options.desc_text_size)\n                            DF:SetFontFace (iconFrame.Desc, self.options.desc_text_font)\n                            DF:SetFontOutline (iconFrame.Desc, self.options.desc_text_outline)\n                        else\n                            iconFrame.Desc:Hide()\n                        end\n                        \n                        if (count and count > 1 and self.options.stack_text) then\n                            iconFrame.StackText:Show()\n                            iconFrame.StackText:SetText (count)\n                            iconFrame.StackText:SetTextColor (DF:ParseColors (self.options.desc_text_color))\n                            iconFrame.StackText:SetPoint (self.options.stack_text_anchor or \"center\", iconFrame, self.options.stack_text_rel_anchor or \"bottomright\", self.options.stack_text_x_offset or 0, self.options.stack_text_y_offset or 0)\n                            DF:SetFontSize (iconFrame.StackText, self.options.stack_text_size)\n                            DF:SetFontFace (iconFrame.StackText, self.options.stack_text_font)\n                            DF:SetFontOutline (iconFrame.StackText, self.options.stack_text_outline)\n                        else\n                            iconFrame.StackText:Hide()\n                        end\n                        \n                        if PixelUtil then\n                            PixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        else\n                            DFPixelUtil.SetSize (iconFrame, self.options.icon_width, self.options.icon_height)\n                        end\n                        iconFrame:Show()\n                        \n                        --> update the size of the frame\n                        self:SetWidth ((self.options.left_padding * 2) + (self.options.icon_padding * (self.NextIcon-2)) + (self.options.icon_width * (self.NextIcon - 1)))\n                        self:SetHeight (self.options.icon_height + (self.options.top_padding * 2))\n                        \n                        --> make information available\n                        iconFrame.spellId = spellId\n                        iconFrame.startTime = startTime\n                        iconFrame.duration = duration\n                        iconFrame.count = count\n                        iconFrame.debuffType = debuffType\n                        iconFrame.caster = caster\n                        iconFrame.canStealOrPurge = canStealOrPurge\n                        \n                        --> show the frame\n                        self:Show()\n                        \n                        return iconFrame\n                    end\n                end\n            end\n            \n        end\n        \n    end\n    \n    \n    modTable.hookTimeFormat()\n    for _, plateFrame in ipairs (Plater.GetAllShownPlates()) do\n        modTable.updateExisting(plateFrame.unitFrame)\n    end\n    \nend",
["Player Logon"] = "function(modTable)\n    modTable.hookTimeFormat()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1753401349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mULsbUUxJ/13",
["Icon"] = "INTERFACE\\ICONS\\Ability_BossMagistrix_TimeWarp2",
["Enabled"] = true,
["Revision"] = 251,
["semver"] = "1.0.12",
["Author"] = "Viash-Thrall",
["Desc"] = "Overwrites the Plater time formatting to show second fractions.",
["Prio"] = 99,
["version"] = 13,
["PlaterCore"] = 1,
["Name"] = "Detailed Time Format",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "formatAuraTimers",
["Value"] = true,
["Name"] = "Format Aura Timers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "formatBuffSpecialTimers",
["Value"] = true,
["Name"] = "Format Buff Special Timers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"#FF4040\",\n        okay = \"#FFFFFF\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 5.0,\n    }\n    \nend\n\n\n",
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"#FF4040\",\n        okay = \"#FFFFFF\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 5.0,\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsVisible()) then\n                if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n                end \n            end\n            \n        end\n    end\n    \n    \n    for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        if auraIcon:IsShown() then\n            if (auraIcon:IsVisible()) then\n                local remainingTime = (auraIcon.startTime + auraIcon.duration - GetTime())\n                if (remainingTime < envTable.Timers.critical) then\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.critical)\n                else\n                    Plater:SetFontColor (auraIcon.CountdownText, envTable.Colors.okay)\n                end\n            end\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1755963431,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CjOSTakvH/1",
["Icon"] = "Interface\\Timer\\Challenges-Logo",
["Enabled"] = true,
["Revision"] = 126,
["semver"] = "1.0.0",
["Author"] = "Ditador-Azralon",
["Desc"] = "Change the color of the aura timer by it's time left",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Paint Aura Timers",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = .5 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (r, g, b, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Time"] = 1741738545,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 134400,
["Enabled"] = true,
["Revision"] = 202,
["semver"] = "",
["Author"] = "????????-Illidan",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Debuff Border",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["TargetBorderSize"] = 1.5,
["SpellIconXOffset"] = 0,
["ReplaceDefaultBorder"] = false,
["showBigIcon"] = false,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Destructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.healthBar.border then unitFrame.healthBar.border:Hide() end\n    if unitFrame.healthBar.targetBorder then unitFrame.healthBar.targetBorder:Hide() end\n    if unitFrame.castBar.border then unitFrame.castBar.border:Hide() end\n    if unitFrame.castBar.Icon then unitFrame.castBar.Icon:Hide() end\n    if unitFrame.castBar.IconBorder then unitFrame.castBar.IconBorder:Hide() end\n    if unitFrame.castBar.BorderShield then unitFrame.castBar.BorderShield:Hide() end\nend",
["Initialization"] = "function (modTable)\n    \n    function modTable.UpdateIconPosition(unitFrame, envTable, modTable)\n        local castBar = unitFrame.castBar\n        local icon = unitFrame.castBar.Icon\n        local shield = unitFrame.castBar.BorderShield\n        icon:Hide()\n        castBar.IconBorder:Hide()\n        if (modTable.config.ShowSpellIcon) then\n            icon:ClearAllPoints()\n            if (modTable.config.showBigIcon) then\n                icon:SetPoint(\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            else\n                icon:SetPoint(\"topright\", unitFrame.castBar, \"topleft\", modTable.config.SpellIconXOffset, envTable.IconSizeOffset)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            end\n            icon:Show()\n            if modTable.config.SpellIconBorder then\n                castBar.IconBorder:SetVertexColor(\n                    DetailsFramework:ParseColors(modTable.config.SpellIconBorderColor)\n                )\n                castBar.IconBorder:SetBorderSizes(\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize\n                )\n                castBar.IconBorder:UpdateSizes()\n                castBar.IconBorder:Show()\n            end\n        end\n        \n        if modTable.config.CastBarBorder then\n            castBar.border:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.CastBarBorderColor)\n            )\n            castBar.border:SetBorderSizes(\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize\n            )\n            castBar.border:UpdateSizes()\n            castBar.border:Show()\n        else\n            castBar.border:Hide()\n        end\n        \n        if (modTable.config.ShowShieldIcon and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            shield:SetSize(modTable.config.ShieldIconWidth, modTable.config.ShieldIconHeight)\n            shield:ClearAllPoints()\n            shield:SetPoint( \"center\", castBar, \"left\", modTable.config.ShieldIconXOffset, modTable.config.ShieldIconYOffset )\n        else\n            shield:Hide()\n        end\n    end\n    \n    function modTable.UpdateBorder(unitFrame, envTable, modTable, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        local targetBorder = unitFrame.healthBar.targetBorder\n        local defaultBorder = unitFrame.healthBar.border\n        \n        targetBorder:Hide()\n        defaultBorder:Hide()\n        \n        if modTable.config.ReplaceDefaultBorder then\n            targetBorder = unitFrame.healthBar.border\n            targetBorder:SetFrameStrata(\"HIGH\")\n            targetBorder:Show()\n        else\n            unitFrame.healthBar.border:Show()\n            if unitFrame.IsTarget then\n                targetBorder:Show()\n            end\n        end\n        \n        if casting==true then\n            if modTable.config.ShowSpellIcon then\n                targetBorder:ClearAllPoints()\n                if modTable.config.ExpandTargetBorder then\n                    if modTable.config.showBigIcon then\n                        targetBorder:SetPoint(\"topleft\", castBar.Icon, \"topleft\", 0, 0)\n                    else\n                        targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                    end\n                else\n                    targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                end\n                if modTable.config.ExpandTargetBorder then\n                    targetBorder:SetPoint(\"bottomright\", castBar, \"bottomright\", 0, 0)\n                else\n                    targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n                end\n            else\n                targetBorder:ClearAllPoints()\n                targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n            end\n            \n        elseif casting==false then\n            targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n            targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0) \n        end\n        \n        if unitFrame.IsTarget then\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.TargetBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize\n            )\n            targetBorder:UpdateSizes()\n        else\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(envTable.DefaultBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize\n            )\n            targetBorder:UpdateSizes()\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    modTable.UpdateBorder (unitFrame, envTable, modTable, true)\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Any settings changed here will require you to disable this plater mod,\n    -- then re-enable it by checking the box in the list on the left hand side of the window\n    \n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    -- Settings for the shield for non interruptible casts\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    \n    envTable.DefaultBorderSize  = Plater.db.profile.border_thickness\n    envTable.DefaultBorderColor = Plater.db.profile.border_color\n    \n    -- Create a new health bar target border\n    if not unitFrame.healthBar.targetBorder then\n        unitFrame.healthBar.targetBorder = CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.healthBar.targetBorder:Hide()\n    end\n    \n    -- Create a frame for the spell icon border\n    if not unitFrame.castBar.IconOverlayFrame then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end\n    \n    -- Create a frame for the cast bar border\n    if not unitFrame.castBar.border then\n        unitFrame.castBar.border = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.border:SetIgnoreParentScale(false)\n    end\n    \n    -- Hook into when the cast bar hides so we can update the border with casting set to false\n    -- Note: This hook needs to be the last thing in the constructor as it may immediately call\n    -- UpdateBorder and we need to make sure all of the frames are created first\n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(\n            unitFrame.castBar, \n            \"Hide\",\n            function()\n                modTable.UpdateBorder(unitFrame, envTable, modTable, false)\n            end\n        )\n        unitFrame.castBar.borderChangeHooked = true\n    end\nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    self.ThrottleUpdate = -1\nend\n\n\n\n\n\n\n",
},
["Time"] = 1755963701,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 1654,
["semver"] = "",
["Author"] = "Vahra-Tichondrius",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon and cast bar.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Target Border",
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, nil)\nend",
["Destructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.healthBar.border then unitFrame.healthBar.border:Hide() end\n    if unitFrame.healthBar.targetBorder then unitFrame.healthBar.targetBorder:Hide() end\n    if unitFrame.castBar.border then unitFrame.castBar.border:Hide() end\n    if unitFrame.castBar.Icon then unitFrame.castBar.Icon:Hide() end\n    if unitFrame.castBar.IconBorder then unitFrame.castBar.IconBorder:Hide() end\n    if unitFrame.castBar.BorderShield then unitFrame.castBar.BorderShield:Hide() end\nend",
["Initialization"] = "function (modTable)\n    \n    function modTable.UpdateIconPosition(unitFrame, envTable, modTable)\n        local castBar = unitFrame.castBar\n        local icon = unitFrame.castBar.Icon\n        local shield = unitFrame.castBar.BorderShield\n        icon:Hide()\n        castBar.IconBorder:Hide()\n        if (modTable.config.ShowSpellIcon) then\n            icon:ClearAllPoints()\n            if (modTable.config.showBigIcon) then\n                icon:SetPoint(\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            else\n                icon:SetPoint(\"topright\", unitFrame.castBar, \"topleft\", modTable.config.SpellIconXOffset, envTable.IconSizeOffset)\n                icon:SetPoint(\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.SpellIconXOffset, 0)\n                icon:SetWidth(icon:GetHeight())\n            end\n            icon:Show()\n            if modTable.config.SpellIconBorder then\n                castBar.IconBorder:SetVertexColor(\n                    DetailsFramework:ParseColors(modTable.config.SpellIconBorderColor)\n                )\n                castBar.IconBorder:SetBorderSizes(\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize,\n                    modTable.config.SpellIconBorderSize\n                )\n                castBar.IconBorder:UpdateSizes()\n                castBar.IconBorder:Show()\n            end\n        end\n        \n        if modTable.config.CastBarBorder then\n            castBar.border:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.CastBarBorderColor)\n            )\n            castBar.border:SetBorderSizes(\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize,\n                modTable.config.CastBarBorderSize\n            )\n            castBar.border:UpdateSizes()\n            castBar.border:Show()\n        else\n            castBar.border:Hide()\n        end\n        \n        if (modTable.config.ShowShieldIcon and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            shield:SetSize(modTable.config.ShieldIconWidth, modTable.config.ShieldIconHeight)\n            shield:ClearAllPoints()\n            shield:SetPoint( \"center\", castBar, \"left\", modTable.config.ShieldIconXOffset, modTable.config.ShieldIconYOffset )\n        else\n            shield:Hide()\n        end\n    end\n    \n    function modTable.UpdateBorder(unitFrame, envTable, modTable, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        local targetBorder = unitFrame.healthBar.targetBorder\n        local defaultBorder = unitFrame.healthBar.border\n        \n        targetBorder:Hide()\n        defaultBorder:Hide()\n        \n        if modTable.config.ReplaceDefaultBorder then\n            targetBorder = unitFrame.healthBar.border\n            targetBorder:SetFrameStrata(\"HIGH\")\n            targetBorder:Show()\n        else\n            unitFrame.healthBar.border:Show()\n            if unitFrame.IsTarget then\n                targetBorder:Show()\n            end\n        end\n        \n        if casting==true then\n            if modTable.config.ShowSpellIcon then\n                targetBorder:ClearAllPoints()\n                if modTable.config.ExpandTargetBorder then\n                    if modTable.config.showBigIcon then\n                        targetBorder:SetPoint(\"topleft\", castBar.Icon, \"topleft\", 0, 0)\n                    else\n                        targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                    end\n                else\n                    targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                end\n                if modTable.config.ExpandTargetBorder then\n                    targetBorder:SetPoint(\"bottomright\", castBar, \"bottomright\", 0, 0)\n                else\n                    targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n                end\n            else\n                targetBorder:ClearAllPoints()\n                targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n                targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0)\n            end\n            \n        elseif casting==false then\n            targetBorder:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n            targetBorder:SetPoint(\"bottomright\", healthBar, \"bottomright\", 0, 0) \n        end\n        \n        if unitFrame.IsTarget then\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(modTable.config.TargetBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize,\n                modTable.config.TargetBorderSize\n            )\n            targetBorder:UpdateSizes()\n        else\n            targetBorder:SetVertexColor(\n                DetailsFramework:ParseColors(envTable.DefaultBorderColor)\n            )\n            targetBorder:SetBorderSizes(\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize,\n                envTable.DefaultBorderSize\n            )\n            targetBorder:UpdateSizes()\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    modTable.UpdateBorder (unitFrame, envTable, modTable, true)\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateBorder(unitFrame, envTable, modTable, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateIconPosition (unitFrame, envTable, modTable)\n    self.ThrottleUpdate = -1\nend\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Any settings changed here will require you to disable this plater mod,\n    -- then re-enable it by checking the box in the list on the left hand side of the window\n    \n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    -- Settings for the shield for non interruptible casts\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    \n    envTable.DefaultBorderSize  = Plater.db.profile.border_thickness\n    envTable.DefaultBorderColor = Plater.db.profile.border_color\n    \n    -- Create a new health bar target border\n    if not unitFrame.healthBar.targetBorder then\n        unitFrame.healthBar.targetBorder = CreateFrame(\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.healthBar.targetBorder:Hide()\n    end\n    \n    -- Create a frame for the spell icon border\n    if not unitFrame.castBar.IconOverlayFrame then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.IconBorder:SetIgnoreParentScale(false)\n    end\n    \n    -- Create a frame for the cast bar border\n    if not unitFrame.castBar.border then\n        unitFrame.castBar.border = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.border:SetIgnoreParentScale(false)\n    end\n    \n    -- Hook into when the cast bar hides so we can update the border with casting set to false\n    -- Note: This hook needs to be the last thing in the constructor as it may immediately call\n    -- UpdateBorder and we need to make sure all of the frames are created first\n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(\n            unitFrame.castBar, \n            \"Hide\",\n            function()\n                modTable.UpdateBorder(unitFrame, envTable, modTable, false)\n            end\n        )\n        unitFrame.castBar.borderChangeHooked = true\n    end\nend",
},
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Border Settings",
["Name"] = "Border Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "TargetBorderColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Target Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of the targeted nameplate",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the targeted nameplate",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "TargetBorderSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Target Border Size",
},
{
["Type"] = 4,
["Key"] = "ExpandTargetBorder",
["Value"] = true,
["Name"] = "Expand Target Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Expands the target border around the cast icon and cast bar",
},
{
["Type"] = 4,
["Key"] = "ReplaceDefaultBorder",
["Value"] = true,
["Name"] = "Replace Default Border (/reload)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Replace the default border instead of creating a new one. You may have to /reload when changing this option",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Cast Bar Settings",
["Name"] = "Cast Bar Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Note, to get this to look right you may have",
["Name"] = "Note",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "to update the Y offset of the cast bar",
["Name"] = "Note",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "under Plater's \"Enemy Npc\" settings",
["Name"] = "Note",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "CastBarBorder",
["Value"] = true,
["Name"] = "Cast Bar Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should show a border around the enemy cast bar",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the enemy cast bar",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "CastBarBorderSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Border Size",
},
{
["Type"] = 1,
["Key"] = "CastBarBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Cast Bar Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of enemy cast bar",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Cast Icon Settings",
["Name"] = "Cast Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "ShowSpellIcon",
["Value"] = true,
["Name"] = "Show Spell Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should show the spell icon of the targets cast",
},
{
["Type"] = 4,
["Key"] = "showBigIcon",
["Value"] = false,
["Name"] = "Show Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SpellIconBorder",
["Value"] = true,
["Name"] = "Spell Icon Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If the nameplate should Show a border around the spell icon",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The size of the border around the targeted nameplate",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "SpellIconBorderSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spell Icon Border Size",
},
{
["Type"] = 1,
["Key"] = "SpellIconBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Spell Icon Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The border color of target's spell icon",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The X Offset of the Spell Icon",
["Min"] = -10,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "SpellIconXOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spell Icon X Offset",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Shield Icon Settings",
["Name"] = "Shield Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "ShowShieldIcon",
["Value"] = false,
["Name"] = "Show Shield Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show a shield icon next to the cast bar for uninterruptable spells",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The X offset of the shield icon",
["Min"] = -10,
["Fraction"] = true,
["Value"] = -4.5,
["Key"] = "ShieldIconXOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shield Icon X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "The Y offset of the shield icon",
["Min"] = -10,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "ShieldIconYOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shield Icon Y Offset",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "The width of the shield icon",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "ShieldIconWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shield Icon Width",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "The height of the shield icon",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "ShieldIconHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shield Icon Height",
},
},
},
{
["OptionsValues"] = {
["colour_names"] = false,
["show_elite"] = false,
["show_elite_text"] = false,
["short_names"] = true,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local eliteToHex = {\n        [1] = \"FFFFCC00\", -- Elite\n        [2] = \"FFCCCCCC\", -- Rare\n        [3] = \"FFFF8040\", -- Rare Elite\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Rare / Elite Addition\n        if modTable.config[\"show_elite\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" then\n                local color = eliteToHex[1]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rare\" then\n                local color = eliteToHex[2]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rareelite\" then\n                local color = eliteToHex[3]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        if modTable.config[\"show_elite_text\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" and not IsInRaid() then\n                name = name .. \" [E]\"\n            elseif eliteType == \"rare\" and not IsInRaid() then\n                name = name .. \" [R]\"\n            elseif eliteType == \"rareelite\" and not IsInRaid() then\n                name = name .. \" [RE]\"\n            end\n        end\n        \n        -- 4) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1755963462,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 387,
["semver"] = "",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Name Shortener",
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    local eliteToHex = {\n        [1] = \"FFFFCC00\", -- Elite\n        [2] = \"FFCCCCCC\", -- Rare\n        [3] = \"FFFF8040\", -- Rare Elite\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Rare / Elite Addition\n        if modTable.config[\"show_elite\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" then\n                local color = eliteToHex[1]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rare\" then\n                local color = eliteToHex[2]\n                name = WrapTextInColorCode(name, color)\n            elseif eliteType == \"rareelite\" then\n                local color = eliteToHex[3]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        if modTable.config[\"show_elite_text\"] then\n            local eliteType = UnitClassification(unitId)\n            if eliteType == \"elite\" and not IsInRaid() then\n                name = name .. \" [E]\"\n            elseif eliteType == \"rare\" and not IsInRaid() then\n                name = name .. \" [R]\"\n            elseif eliteType == \"rareelite\" and not IsInRaid() then\n                name = name .. \" [RE]\"\n            end\n        end\n        \n        -- 4) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
{
["Type"] = 4,
["Key"] = "show_elite",
["Value"] = true,
["Name"] = "Colour by Unit Status",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Concatenate Name with Unit Status",
["Value"] = true,
["Key"] = "show_elite_text",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Update"] = "function(self, unitId, unitFrame, envTable)\n    unitFrame.castBar.ScheduleToHide = function(self) self:Hide() end\nend",
},
["Time"] = 1755963430,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Enabled"] = true,
["Revision"] = 98,
["semver"] = "",
["Author"] = "Avade-Illidan",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Hide Interrupted",
["HooksTemp"] = {
["Cast Update"] = "function(self, unitId, unitFrame, envTable)\n    unitFrame.castBar.ScheduleToHide = function(self) self:Hide() end\nend",
},
["Options"] = {
},
},
{
["OptionsValues"] = {
["raidMarkerXOff"] = 1,
["unitNameXOffRaidMarker"] = 3,
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.updatePosition = function(unitFrame)\n        local unitNameXOff = modTable.config.unitNameXOff -- Unit Name X Offset\n        local unitNameXOffRaidMarker = modTable.config.unitNameXOffRaidMarker -- Unit Name X Offset with Raid Marker\n        local raidMarkerXOff = modTable.config.raidMarkerXOff\n        local hasRaidTarget = unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown() and unitFrame.PlaterRaidTargetFrame\n        if hasRaidTarget then\n            unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n            unitFrame.PlaterRaidTargetFrame:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", raidMarkerXOff, 0)\n            unitFrame.PlaterRaidTargetFrame:SetSize(18, 18)\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.PlaterRaidTargetFrame, \"RIGHT\", unitNameXOffRaidMarker, 0)\n        else\n            unitFrame.unitName:ClearAllPoints()\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", unitNameXOff, 0)\n        end\n    end\nend",
["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.updatePosition = function(unitFrame)\n        local unitNameXOff = modTable.config.unitNameXOff -- Unit Name X Offset\n        local unitNameXOffRaidMarker = modTable.config.unitNameXOffRaidMarker -- Unit Name X Offset with Raid Marker\n        local raidMarkerXOff = modTable.config.raidMarkerXOff\n        local hasRaidTarget = unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown() and unitFrame.PlaterRaidTargetFrame\n        if hasRaidTarget then\n            unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n            unitFrame.PlaterRaidTargetFrame:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", raidMarkerXOff, 0)\n            unitFrame.PlaterRaidTargetFrame:SetSize(18, 18)\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.PlaterRaidTargetFrame, \"RIGHT\", unitNameXOffRaidMarker, 0)\n        else\n            unitFrame.unitName:ClearAllPoints()\n            unitFrame.unitName:SetPoint(\"LEFT\", unitFrame.healthBar, \"LEFT\", unitNameXOff, 0)\n        end\n    end\nend",
["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
},
["Time"] = 1755963707,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
["raid"] = true,
["none"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458724,
["Enabled"] = true,
["Revision"] = 1179,
["semver"] = "",
["Author"] = "Ретцер-Ревущий фьорд",
["Desc"] = "Aligns Raid Marker to the Left of the Unit Name.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Target Marker",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset without Raid Marker",
["Min"] = -99,
["Fraction"] = false,
["Value"] = 1,
["Key"] = "unitNameXOff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Unit Name (No Raid Marker)",
},
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset with Raid Marker",
["Min"] = -99,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "unitNameXOffRaidMarker",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Unit Name (Raid Marker)",
},
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "X Offset for Raid Marker",
["Min"] = -99,
["Fraction"] = false,
["Value"] = 1,
["Key"] = "raidMarkerXOff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Raid Marker",
},
},
},
{
["OptionsValues"] = {
["oneColor"] = {
0,
1,
0.01176470704376698,
1,
},
["twoColor"] = {
0,
0.501960813999176,
1,
1,
},
},
["LastHookEdited"] = "",
["UID"] = "0x6490c26f17d91913",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.SetNameplateColors(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    --IDs of dots, you can change them to easier adjust to different classes, change only numbers\n    modTable.doubleDebuffs = {\n        {34914, 335467}, --Vampiric Touch + Devouring Plague\n        {188389, 334168}, --Flame Shock + Lashing Flames\n        {164815, 164812}, --Sunfire + Moonfire\n        {703, 1943}, --Garrote + Rupture\n        {980, 146739}, --Agony + Corruption\n        {980, 445474}, --Agony + Wither\n    }\n    \n    modTable.singleDebuffs = {\n        34914, --Vampiric Touch\n        589,--Shadow Word: Pain\n        20421, --Purge the Wicked\n        188389, --Flame Shock\n        157736, --Immolate\n        217200, --Barbed Shot\n        228287, --Mark of the Crane\n        445474, --Wither\n        164815, --Sunfire\n        164812, --Moonfire\n        155722, --Rake\n        980, --Agony\n        146739, --Corruption\n        460553, --Doom\n    }\n    \n    modTable.rOption = modTable.config.resetOption\n    \n    modTable.matchMultipleBuffs = {}\n    \n    for _, v in ipairs (modTable.doubleDebuffs) do\n        local buff = {\n            auras = v,\n            nameplateColor = modTable.config.twoColor\n        }\n        table.insert(modTable.matchMultipleBuffs, buff)\n    end\n    \n    for _, v in ipairs (modTable.singleDebuffs) do\n        local buff = {\n            auras = {v},\n            nameplateColor = modTable.config.oneColor\n        }\n        table.insert(modTable.matchMultipleBuffs, buff)\n    end\nend\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- DO NOT TOUCH\n    local DF = _G [\"DetailsFramework\"]\n    \n    -- Function to match multiple colors\n    function envTable.matchMultiple(unitFrame)\n        for _, v in ipairs(modTable.matchMultipleBuffs) do      \n            local match = true\n            for _, aura in ipairs(v.auras) do\n                if not Plater.NameplateHasAura (unitFrame, aura) then\n                    match = false\n                    break\n                end\n            end\n            \n            if match then\n                local nameString = unitFrame.healthBar.unitName\n                DF:SetFontColor (nameString, v.nameplateColor)\n                \n                return\n            else\n                -- reset colour\n                if (modTable.rOption) then\n                    local nameString = unitFrame.healthBar.unitName\n                    DF:SetFontColor (nameString, 1,1,1, 1)\n                end\n                \n            end\n        end\n    end\n    \n    -- Function to set Colors\n    function envTable.SetNameplateColors(unitFrame)\n        local colored = envTable.matchMultiple(unitFrame)\n    end\n    \nend",
},
["Time"] = 1753401349,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/-OwVE8C1v/1",
["Enabled"] = true,
["Revision"] = 1541,
["semver"] = "1.0.0",
["Author"] = "Megabelly-Silvermoon",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Debuff Name Color Change",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "Settings:",
["Value"] = "Settings:",
["Key"] = "label1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "One Debuff",
["Value"] = {
1,
0.50196081399918,
0,
1,
},
["Key"] = "oneColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour for targets with 1 debuff",
},
{
["Type"] = 1,
["Name"] = "Two Debuffs",
["Value"] = {
0.13333334028721,
0.54509806632996,
0.13333334028721,
1,
},
["Key"] = "twoColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour for targets with a set of 2 debuffs",
},
{
["Type"] = 5,
["Name"] = "Miscellaneous:",
["Value"] = "Miscellaneous:",
["Key"] = "label4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset colour after expire",
["Value"] = true,
["Key"] = "resetOption",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Resets colour after debuf expires. Toggling on will prevent sometimes lingering colour on nameplates/borders. Toggling off makes mod compatible with other nameplate colouring mods.",
},
},
},
},
["auras_per_row_auto"] = false,
["first_run3"] = true,
["extra_icon_caster_outline"] = "OUTLINE",
["auras_per_row_amount2"] = 5,
["disable_omnicc_on_auras"] = true,
["ghost_auras"] = {
["enabled"] = true,
["height"] = 28,
["width"] = 28,
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["blizzard_nameplate_large_font_size"] = 12,
["pet_width_scale"] = 0.99999994039536,
["health_selection_overlay_alpha"] = 0,
["quick_hide"] = true,
["target_highlight_color"] = {
1,
1,
},
["cast_statusbar_fadeout_time"] = 0.4999999701976776,
["target_highlight"] = false,
["cast_statusbar_spark_hideoninterrupt"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["castbar_target_font"] = "Expressway",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
["cast_statusbar_spark_alpha"] = 0,
["cast_statusbar_fadein_time"] = 0.01999999955296516,
["hover_highlight_alpha"] = 0.5,
["url"] = "https://wago.io/tA5ADNfDG/11",
["aura_breakline_space"] = 3,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.5,
["focus_as_target_alpha"] = true,
["ui_parent_scale_tune"] = 1,
["profile_name"] = "FragUI",
["health_statusbar_bgtexture"] = "Atrocity",
["indicator_raidmark_anchor"] = {
["x"] = 0,
["side"] = 9,
},
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
["166591"] = true,
["273432"] = true,
["312926"] = true,
["262092"] = true,
["303941"] = true,
["265160"] = true,
["342073"] = true,
["233210"] = true,
["209859"] = true,
},
["buff"] = {
412012,
412695,
},
["debuff"] = {
217200,
371472,
292626,
422683,
},
["debuff_tracked"] = {
["292451"] = true,
["389809"] = true,
["312595"] = true,
},
["debuff_banned"] = {
["418339"] = true,
["353793"] = true,
["345219"] = true,
["356372"] = true,
["345801"] = true,
["331934"] = true,
["368802"] = true,
["359168"] = true,
["390271"] = true,
["331016"] = true,
["420092"] = true,
["284678"] = true,
["359078"] = true,
["359180"] = true,
["317583"] = true,
["411717"] = true,
["375583"] = true,
["381743"] = true,
["392566"] = true,
["356181"] = true,
["324260"] = true,
["333526"] = true,
["329449"] = true,
["390155"] = true,
["428103"] = true,
["411715"] = true,
["426783"] = true,
["417419"] = true,
["269576"] = true,
["420054"] = true,
["394327"] = true,
["436582"] = true,
["373305"] = true,
["372127"] = true,
["115994"] = true,
["410790"] = true,
["440339"] = true,
["403696"] = true,
["379021"] = true,
["302564"] = true,
["425180"] = true,
["394453"] = true,
["403952"] = true,
["353773"] = true,
["430184"] = true,
["435476"] = true,
["340007"] = true,
["356329"] = true,
["283649"] = true,
["390276"] = true,
["392885"] = true,
["440340"] = true,
["426534"] = true,
["376974"] = true,
["344748"] = true,
["270569"] = true,
["391568"] = true,
["328287"] = true,
["345547"] = true,
["258883"] = true,
["367902"] = true,
["280494"] = true,
["355759"] = true,
},
["buff_banned"] = {
["333553"] = true,
["61573"] = true,
["206150"] = true,
["299450"] = true,
["61574"] = true,
["352854"] = true,
["411635"] = true,
},
},
["extra_icon_caster_font"] = "Friz Quadrata TT",
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
0.8549020290374756,
0.7725490927696228,
0.3607843220233917,
1,
},
["update_throttle"] = 0.5,
["cast_statusbar_interrupt_anim"] = false,
["tocversion"] = 110107,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["extra_icon_timer_font"] = "Friz Quadrata TT",
["not_affecting_combat_alpha"] = 1,
["indicator_raidmark_scale"] = 0.9999999403953552,
["extra_icon_show_offensive_border"] = {
nil,
0,
0,
},
["cast_statusbar_spark_filloninterrupt"] = false,
["aura_timer_text_font"] = "Friz Quadrata TT",
["aura_sort"] = true,
["target_shady_alpha"] = 0.5999999642372131,
["tap_denied_color"] = {
0.40000003576279,
0.40000003576279,
0.40000003576279,
},
["bossmod_icons_anchor"] = {
["y"] = 30,
["x"] = 0,
["side"] = 8,
},
["target_highlight_height"] = 25,
["health_cutoff_upper"] = false,
["version"] = 11,
["health_selection_overlay"] = "Atrocity",
["blizzard_nameplate_font_size"] = 10,
["health_animation_time_dilatation"] = 2.6199998855591,
["aura_grow_direction"] = 1,
["indicator_pet"] = false,
["patch_version"] = 39,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 12,
["health_statusbar_bgcolor"] = {
0.13333334028721,
0.13333334028721,
0.13333334028721,
1,
},
["number_region_first_run"] = true,
["range_check_enabled"] = false,
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Unit - Show Energy"] = 11,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Very Important"] = 15,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Countdown"] = 12,
["Add - Explode on Die [P]"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Stop Casting"] = 4,
["Cast - AoE With Range [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Spiteful Affix"] = 3,
["Add - Warning [P]"] = 5,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Alert + Timer [P]"] = 4,
["Auto Set Skull"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Important by Color [P]"] = 2,
["Explosion Affix M+"] = 14,
["Cast - Shining Green [P]"] = 3,
["Fixate On You"] = 12,
},
["cast_statusbar_color_channeling"] = {
nil,
nil,
nil,
1,
},
["cast_statusbar_color_interrupted"] = {
0.7803922295570374,
0.250980406999588,
0.250980406999588,
},
["indicator_elite"] = false,
["aura2_grow_direction"] = 3,
["extra_icon_timer_outline"] = "OUTLINE",
["aura_alpha"] = 1,
["indicator_faction"] = false,
["dps"] = {
["colors"] = {
["solo"] = {
0.501960813999176,
0.501960813999176,
},
["notontank"] = {
0.501960813999176,
0.501960813999176,
},
["aggro"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["noaggro"] = {
0.5058823823928833,
0.4235294461250305,
0.9137255549430847,
},
["pulling"] = {
nil,
0.7725490927696228,
0.658823549747467,
},
},
},
["ui_parent_target_strata"] = "BACKGROUND",
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.9764706492424011,
0.5411764979362488,
0.4745098352432251,
},
["anothertank"] = {
0.729411780834198,
0.917647123336792,
},
["aggro"] = {
0.5058823823928833,
0.4235294461250305,
0.9137255549430847,
},
["noaggro"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["nocombat"] = {
0.6352941393852234,
0.2196078598499298,
0.2196078598499298,
},
["pulling"] = {
0.3098039329051971,
0.4509804248809815,
0.6313725709915161,
},
},
},
["extra_icon_show_purge_border"] = {
nil,
0,
0,
},
["cast_statusbar_spark_width"] = 4,
},
},
["InterruptableSpells"] = {
[1229474] = true,
[188443] = true,
[354297] = true,
[220543] = true,
[1235326] = true,
[427609] = true,
[428086] = true,
[468631] = true,
[434786] = true,
[427357] = true,
[270481] = true,
[465871] = true,
[157331] = true,
[453616] = true,
[51505] = true,
[147362] = true,
[57994] = true,
[6552] = true,
[585] = true,
[323538] = true,
[420090] = true,
[1229510] = true,
[1214780] = true,
[31935] = true,
[91807] = true,
[461904] = true,
[105174] = true,
[357196] = true,
[432031] = true,
[357260] = true,
[355641] = true,
[325701] = true,
[191732] = true,
[686] = true,
[355642] = true,
[394976] = true,
[452099] = true,
[431303] = true,
[5143] = true,
[188196] = true,
[30451] = true,
[97547] = true,
[429812] = true,
[59638] = true,
[356407] = true,
[465595] = true,
[104318] = true,
[420320] = true,
[267997] = true,
[353836] = true,
[423051] = true,
[422090] = true,
[462771] = true,
[1222815] = true,
[451113] = true,
[427356] = true,
[465813] = true,
[463058] = true,
[356537] = true,
[355934] = true,
[424419] = true,
[434793] = true,
[347775] = true,
[434802] = true,
[187707] = true,
[433841] = true,
[427469] = true,
[96231] = true,
[391528] = true,
[355225] = true,
[194153] = true,
[183752] = true,
[93985] = true,
[351338] = true,
[116705] = true,
[433662] = true,
[444743] = true,
[350922] = true,
[423664] = true,
[432520] = true,
[448248] = true,
[356843] = true,
[455476] = true,
[423536] = true,
[386071] = true,
[47528] = true,
[471733] = true,
[347008] = true,
[1214468] = true,
[352347] = true,
[338003] = true,
[1245669] = true,
[1766] = true,
[424421] = true,
[32747] = true,
[436322] = true,
[449734] = true,
[373279] = true,
[326829] = true,
[19647] = true,
[2139] = true,
[328322] = true,
[431333] = true,
[351119] = true,
[442210] = true,
[426240] = true,
[326450] = true,
[355057] = true,
[368847] = true,
},
["performance_units"] = {
[191714] = 0,
[214441] = true,
[189707] = 0,
[220626] = true,
[176920] = 0,
[96247] = 0,
[196679] = 0,
[100529] = 0,
[208994] = 0,
[87329] = false,
[198594] = false,
[210231] = 0,
[211306] = 0,
[167999] = true,
[194999] = 0,
[196642] = 0,
[219746] = 0,
[189706] = 0,
[197398] = 0,
[189363] = 0,
[84401] = 0,
},
["captured_casts"] = {
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1226917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dissenter Oathland",
["npcID"] = 241228,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glooming Disciple",
["npcID"] = 216867,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[1241254] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["encounterID"] = 3122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237660,
},
[410873] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 45477,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[465120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loaderbot",
["npcID"] = 231014,
},
[369423] = {
["source"] = "Skittering Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[104318] = {
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[1214656] = {
["source"] = "Maulspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 247480,
},
[326438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shard of Halkias",
["npcID"] = 164557,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[457447] = {
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[1226947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dissenter Oathland",
["npcID"] = 241228,
},
[1226948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dissenter Oathland",
["npcID"] = 241228,
},
[1241278] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Untethered Rampager",
["npcID"] = 242548,
},
[1226950] = {
["source"] = "Shadowguard Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 241304,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[1233093] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[1224906] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[326441] = {
["source"] = "Shard of Halkias",
["event"] = "SPELL_CAST_START",
["npcID"] = 164557,
},
[474337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[1237195] = {
["source"] = "Burrowing Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[465127] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loaderbot",
["npcID"] = 231014,
},
[1231061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-touched Hopper",
["npcID"] = 230377,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[427260] = {
["encounterName"] = "Kyrioss",
["source"] = "Cursed Rooktender",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[390926] = {
["source"] = "Candlelit Big-Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211546,
},
[1231067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Hunter",
["npcID"] = 234416,
},
[439031] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[76686] = {
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 40019,
},
[349987] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Achillite",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[467178] = {
["source"] = "Gallagio Cocktail",
["event"] = "SPELL_CAST_START",
["npcID"] = 229435,
},
[1241307] = {
["source"] = "Lurking Phaseburrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 242548,
},
[433403] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[1239262] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Artoshion",
["event"] = "SPELL_CAST_START",
["npcID"] = 245255,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[424704] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[1237220] = {
["source"] = "Burrowing Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[1229033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidcrawler",
["npcID"] = 245782,
},
[457458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[1229038] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[467182] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[464112] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["encounterID"] = 3012,
["event"] = "SPELL_CAST_START",
["npcID"] = 230322,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Webmage",
["npcID"] = 223253,
},
[468207] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[316218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highway Serf",
["npcID"] = 169476,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[1237240] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbound Entity",
["npcID"] = 240974,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dungeoneer's Training Dummy",
["npcID"] = 194644,
},
[433410] = {
["source"] = "Chittering Fearmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[395029] = {
["isChanneled"] = true,
["source"] = "Scorchling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195119,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 188067,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[347949] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175616,
},
[1227014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heka'tamos",
["npcID"] = 245998,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 189895,
},
[473841] = {
["source"] = "Gallagio Jackbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229438,
},
[1237261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reshanor",
["npcID"] = 238319,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lighteater",
["npcID"] = 216036,
},
[1241357] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Unbound Assassin",
["npcID"] = 237871,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3130,
},
[1227029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Manifestation",
["npcID"] = 231558,
},
[1231130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
},
[1237272] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Machinist Protector",
["npcID"] = 219361,
},
[390943] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[438025] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[451843] = {
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[347958] = {
["encounterName"] = "Hylbrande",
["source"] = "Vault Purifier",
["npcID"] = 176551,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2426,
},
[1216815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 236933,
},
[1237288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reshanor",
["npcID"] = 238319,
},
[1225010] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[1237293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mercenary Acquisitionist",
["npcID"] = 244442,
},
[1237294] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mercenary Acquisitionist",
["npcID"] = 244442,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Bound Despoiler",
["npcID"] = 212765,
},
[1225016] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[444683] = {
["source"] = "Moss-Draped Ramolith",
["event"] = "SPELL_CAST_START",
["npcID"] = 214945,
},
[1243443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enchanted Ledger",
["npcID"] = 234300,
},
[1235256] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nexus-Prince Azir",
["npcID"] = 231516,
},
[461060] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[465666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Jumpstarter",
["npcID"] = 231325,
},
[466178] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[1214790] = {
["source"] = "Melbo the Magnificent",
["event"] = "SPELL_CAST_START",
["npcID"] = 229434,
},
[355641] = {
["source"] = "Veteran Sparkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 179841,
},
[355642] = {
["isChanneled"] = true,
["source"] = "Veteran Sparkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179841,
},
[1216845] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Darkfuse Wrenchmonger",
["npcID"] = 231939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[1235269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nexus-Prince Azir",
["npcID"] = 231516,
},
[1237319] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234478,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Trapper",
["npcID"] = 212987,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 187082,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[431896] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Thirsty Patron",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[88080] = {
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 47238,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[346947] = {
["encounterName"] = "Mailroom Mayhem",
["source"] = "P.O.S.T. Master",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[1220959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Narathe",
["npcID"] = 233628,
},
[471303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Stunner",
["npcID"] = 229175,
},
[453392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[426783] = {
["source"] = "Faceless Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212775,
},
[445718] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[467212] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[472842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb Bot",
["npcID"] = 231928,
},
[1227117] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Ilyssa Darksorrow",
["encounterID"] = 3122,
["event"] = "SPELL_CAST_START",
["npcID"] = 237662,
},
[455443] = {
["source"] = "Waxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[466190] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[464655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechadrone Sniper",
["npcID"] = 229069,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[1220981] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233814,
},
[453909] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Taste Tester",
["npcID"] = 218671,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[426275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[1239412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidcrawler",
["npcID"] = 245782,
},
[326997] = {
["source"] = "Stoneborn Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 167607,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[465682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Inspector",
["npcID"] = 231385,
},
[382267] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Balara",
["npcID"] = 193457,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[1239426] = {
["encounterName"] = "Captain Nil'hitan",
["source"] = "Captain Nil'hitan",
["encounterID"] = 3279,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 244384,
},
[1239427] = {
["encounterName"] = "Captain Nil'hitan",
["source"] = "Captain Nil'hitan",
["encounterID"] = 3279,
["event"] = "SPELL_CAST_START",
["npcID"] = 244384,
},
[1225099] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 244170,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[466197] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oblivious Shaleshell",
["npcID"] = 217123,
},
[460057] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[1245575] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1214872] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230583,
},
[1245579] = {
["encounterName"] = "So'azmi",
["source"] = "So'azmi",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[467223] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
[1231252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overcharged Sentinel",
["npcID"] = 242631,
},
[1245582] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 244752,
},
[1225113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Technomancer",
["npcID"] = 237132,
},
[351057] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[1239445] = {
["encounterName"] = "Captain Nil'hitan",
["source"] = "Captain Nil'hitan",
["encounterID"] = 3279,
["event"] = "SPELL_CAST_START",
["npcID"] = 244384,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oblivious Shaleshell",
["npcID"] = 217123,
},
[469272] = {
["source"] = "Imperious Mixer",
["event"] = "SPELL_CAST_START",
["npcID"] = 233247,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[457503] = {
["source"] = "Cogchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212617,
},
[1241500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Breaker Desamirah",
["npcID"] = 241384,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[1225130] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[1223085] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[1235368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overcharged Sentinel",
["npcID"] = 242631,
},
[471323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Worm",
["npcID"] = 238413,
},
[449318] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[449831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[1245611] = {
["source"] = "Influx Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 246874,
},
[467231] = {
["source"] = "Gallagio Dealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 229437,
},
[449321] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[372047] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Crystal Monstrosity",
["npcID"] = 217200,
},
[467234] = {
["source"] = "Princeguard Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224175,
},
[1216967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidveil Manta",
["npcID"] = 234842,
},
[460582] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228463,
},
[471841] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bombshell Crab",
["npcID"] = 231312,
},
[1225162] = {
["encounterName"] = "Soul-Scribe",
["source"] = "Soul-Scribe",
["encounterID"] = 3109,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234935,
},
[1245634] = {
["encounterName"] = "So'azmi",
["source"] = "So'azmi",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[1231309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unraveled Energy Broker",
["npcID"] = 243044,
},
[467238] = {
["isChanneled"] = true,
["source"] = "Princeguard Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224175,
},
[434998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[1225172] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowguard Soldier",
["npcID"] = 234833,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Lancemaster",
["npcID"] = 192800,
},
[1227226] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[1227227] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["encounterID"] = 3131,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233815,
},
[1219040] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Unbound Mage",
["npcID"] = 237872,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[346980] = {
["encounterName"] = "Hylbrande",
["source"] = "Vault Purifier",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 176551,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188067,
},
[1231328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overcharged Sentinel",
["npcID"] = 242631,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Soot-Seer",
["npcID"] = 212876,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emboldened Fog Wither",
["npcID"] = 219909,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[431421] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murkfin Ravager",
["npcID"] = 213619,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Galtmaa",
["npcID"] = 195927,
},
[435004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[1245669] = {
["encounterName"] = "So'azmi",
["source"] = "So'azmi",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[1227249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Siltfeaster",
["npcID"] = 230546,
},
[1231344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unraveled Energy Broker",
["npcID"] = 243044,
},
[1231345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unraveled Energy Broker",
["npcID"] = 243044,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[424773] = {
["source"] = "Gnarled Reviver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207468,
},
[1227259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Siltfeaster",
["npcID"] = 230546,
},
[1227261] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[1227263] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[1225218] = {
["encounterName"] = "Soul-Scribe",
["source"] = "Soul-Scribe",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[465715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Stunner",
["npcID"] = 229175,
},
[1241596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Untethered Swarmer",
["npcID"] = 242535,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[1214991] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mk II Electro Shocker",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 230316,
},
[357226] = {
["source"] = "Adorned Starseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180429,
},
[1233416] = {
["encounterName"] = "Fractillus",
["source"] = "Fractillus",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[1227279] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[1243656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Arcanist",
["npcID"] = 244411,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Stagshell",
["npcID"] = 216340,
},
[460602] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[357229] = {
["source"] = "Cartel Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 180348,
},
[460603] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[322943] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["source"] = "Halkias",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[440134] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[434505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Patron",
["npcID"] = 214668,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lighteater",
["npcID"] = 216036,
},
[471352] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Darkfuse Technician",
["npcID"] = 231977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[386914] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Stormshield",
["npcID"] = 186615,
},
[1235490] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Living Mass",
["npcID"] = 234478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[1231403] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[1215033] = {
["encounterName"] = "Torque Clanfire and Sprok",
["source"] = "Torque Clankfire",
["npcID"] = 237554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3140,
},
[466751] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[440652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[351096] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[357238] = {
["source"] = "Adorned Starseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 180429,
},
[445771] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Webbed Victim",
["npcID"] = 225601,
},
[473918] = {
["source"] = "Globlin",
["event"] = "SPELL_CAST_START",
["npcID"] = 234655,
},
[451913] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[448843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Tormentor",
["npcID"] = 212983,
},
[1221190] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Destroyer",
["npcID"] = 236995,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[76325] = {
["source"] = "Twilight Flame Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 39708,
},
[357243] = {
["source"] = "Wandering Pulsar",
["event"] = "SPELL_CAST_START",
["npcID"] = 180433,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashwhite Kestrel",
["npcID"] = 215070,
},
[427865] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[1221207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Riftcaller",
["npcID"] = 230474,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[1231445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Terror",
["npcID"] = 231552,
},
[1227355] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[424798] = {
["source"] = "Infected Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 210478,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desiccated Deer",
["npcID"] = 193420,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[445781] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[1241693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[1241694] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[329104] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[440154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Candlelighter",
["npcID"] = 218758,
},
[446807] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[468813] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[1219192] = {
["source"] = "Imperious Blaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 229356,
},
[465232] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230583,
},
[1231477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Terror",
["npcID"] = 231552,
},
[469327] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[460116] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[448347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[1243771] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[1233539] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[83877] = {
["source"] = "Oathsworn Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 44932,
},
[443232] = {
["source"] = "Nightfall Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 217485,
},
[440162] = {
["source"] = "Scarlet Stinkcap",
["event"] = "SPELL_CAST_START",
["npcID"] = 212579,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Touched Elemental",
["npcID"] = 212400,
},
[1231501] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["npcID"] = 220599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[437093] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[1231506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Dunewraith",
["npcID"] = 230621,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[435560] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Assistant",
["npcID"] = 216333,
},
[325535] = {
["source"] = "Depraved Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 164562,
},
[1229474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overgorged Mite",
["npcID"] = 242209,
},
[346006] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[351124] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[350101] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Venza Goldfuse",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176705,
},
[348566] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Brawling Patron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176562,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[1237671] = {
["source"] = "D'rude",
["event"] = "SPELL_CAST_START",
["npcID"] = 244453,
},
[469340] = {
["source"] = "Imperious Mixer",
["event"] = "SPELL_CAST_START",
["npcID"] = 233247,
},
[1221299] = {
["source"] = "Mug'Zee",
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[1221302] = {
["source"] = "Mug'Zee",
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[450407] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[1231540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Pilferer",
["npcID"] = 234033,
},
[1231542] = {
["isChanneled"] = true,
["source"] = "Shadowguard Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 241304,
},
[465761] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[1219263] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[436592] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[1237690] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Living Mass",
["npcID"] = 245255,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[440687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Jelly Purveyor",
["npcID"] = 220141,
},
[355225] = {
["source"] = "Murkbrine Fishmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 178142,
},
[1237694] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Artoshion",
["npcID"] = 245255,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1237695] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Pargoth",
["npcID"] = 245222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[451435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[1229510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Farstalker",
["npcID"] = 234962,
},
[423801] = {
["isChanneled"] = true,
["source"] = "Shadow-Blind Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206077,
},
[463206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[1217232] = {
["encounterName"] = "Azhiccar",
["source"] = "Azhiccar",
["npcID"] = 234893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3107,
},
[84521] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45259,
},
[445808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heelripper",
["npcID"] = 216555,
},
[1239754] = {
["isChanneled"] = false,
["source"] = "Revenant of the Wasteland",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 232189,
},
[1231567] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[473955] = {
["source"] = "Darkfuse Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229272,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[459627] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[440181] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[389518] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[411012] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[1217249] = {
["source"] = "Gallagio Customer Care",
["event"] = "SPELL_CAST_START",
["npcID"] = 237109,
},
[450929] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[473958] = {
["source"] = "Flame Laser",
["event"] = "SPELL_CAST_START",
["npcID"] = 234671,
},
[468841] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[440185] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[76719] = {
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 40021,
},
[1241833] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Ilyssa Darksorrow",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[468846] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3054,
},
[1215227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Darkmage",
["npcID"] = 235805,
},
[473964] = {
["source"] = "Gallagio Dealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 229437,
},
[1243887] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Dark Singularity",
["npcID"] = 243859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[450424] = {
["source"] = "Congealed Wax-Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[463218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 210269,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[453496] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Webmage",
["npcID"] = 225479,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[1219333] = {
["encounterName"] = "Chrome King Gallywix",
["event"] = "SPELL_CAST_START",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
},
[353706] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Brawling Patron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176562,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[1221385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
},
[423305] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[1227529] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["encounterID"] = 3134,
["event"] = "SPELL_CAST_START",
["npcID"] = 237763,
},
[433029] = {
["source"] = "Mirror Master Murkna",
["event"] = "SPELL_CAST_START",
["npcID"] = 247458,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[1237769] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Echo",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 241923,
},
[470388] = {
["source"] = "Sureki Siegelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 239208,
},
[1221395] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowguard Riftcaller",
["npcID"] = 230474,
},
[1221396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Riftcaller",
["npcID"] = 230474,
},
[1248009] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[1221401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Voidtamer",
["npcID"] = 234428,
},
[1227543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crackling Wyrm",
["npcID"] = 236191,
},
[470902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Thief",
["npcID"] = 234032,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[441221] = {
["source"] = "Escaped Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 232257,
},
[427404] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[470903] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wastelander Thief",
["npcID"] = 234032,
},
[328125] = {
["encounterName"] = "Echelon",
["source"] = "Undying Stonefiend",
["npcID"] = 164363,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2380,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[1243931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sand Swooper",
["npcID"] = 230365,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[1215278] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Soldier",
["npcID"] = 234050,
},
[1217327] = {
["encounterName"] = "Azhiccar",
["source"] = "Azhiccar",
["npcID"] = 234893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3107,
},
[471419] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[1231660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Eye",
["npcID"] = 242901,
},
[1235762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneborn Reaver",
["npcID"] = 167612,
},
[470910] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 233474,
},
[1235766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneborn Reaver",
["npcID"] = 167612,
},
[440207] = {
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[464772] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[426905] = {
["source"] = "Minion of Ghur'sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 212778,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[1217371] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 247390,
},
[465801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Crossfire",
["npcID"] = 230299,
},
[472454] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["encounterID"] = 3020,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228424,
},
[322000] = {
["source"] = "Architect Halen",
["event"] = "SPELL_CAST_START",
["npcID"] = 165008,
},
[460173] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Pit Mechanic",
["npcID"] = 228514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[1239901] = {
["source"] = "Shadowed Fateshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 242517,
},
[1231716] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 233824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[449940] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[1221483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Ritualist",
["npcID"] = 234957,
},
[1221484] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wastelander Ritualist",
["npcID"] = 234957,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lighteater",
["npcID"] = 216036,
},
[472458] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[473994] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[1227631] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[373692] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[1219448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Shredder",
["npcID"] = 227904,
},
[373693] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[443292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[469392] = {
["source"] = "Subwoofer",
["event"] = "SPELL_CAST_START",
["npcID"] = 232602,
},
[460181] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[466834] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Sharpshot Sentry",
["npcID"] = 231978,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[459671] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[432037] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[1237893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reshanor",
["npcID"] = 238319,
},
[76473] = {
["source"] = "Twilight Flame Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 39708,
},
[1225616] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[446368] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[1231759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cartel Thug",
["npcID"] = 243301,
},
[441252] = {
["source"] = "Horrid Effusia",
["event"] = "SPELL_CAST_START",
["npcID"] = 211866,
},
[1221532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Pactspeaker",
["npcID"] = 234955,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[445860] = {
["source"] = "Mirror Master Murkna",
["event"] = "SPELL_CAST_START",
["npcID"] = 247458,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[1239963] = {
["source"] = "Shadowed Fateshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 242517,
},
[1213354] = {
["source"] = "Princeguard Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 229440,
},
[427950] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[347094] = {
["encounterName"] = "Hylbrande",
["source"] = "Hylbrande",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175663,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[465822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Crossfire",
["npcID"] = 230299,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Eel",
["npcID"] = 215680,
},
[449447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[1244075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Arcanist",
["npcID"] = 244411,
},
[445866] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[1227704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Juggernaut",
["npcID"] = 241666,
},
[1231799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Wildcaller",
["npcID"] = 230624,
},
[1239988] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Unbound Phaseblade",
["npcID"] = 245008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[465826] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Crossfire",
["npcID"] = 230299,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenwork Ironstrider",
["npcID"] = 213951,
},
[449451] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A.",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[1219531] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[1233863] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[1219535] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3108,
},
[1219536] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3108,
},
[474018] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[349663] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Alcruux",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[1223634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Gaz'Kreth",
["npcID"] = 239702,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[431544] = {
["source"] = "Burrowing Stoneswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216537,
},
[1244108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Sandreaver",
["npcID"] = 248084,
},
[1227734] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[447921] = {
["source"] = "Lambent Siltworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 217556,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[1248209] = {
["encounterName"] = "So'azmi",
["source"] = "So'azmi",
["encounterID"] = 2437,
["event"] = "SPELL_CAST_START",
["npcID"] = 175806,
},
[447411] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[1240025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Untethered Rampager",
["npcID"] = 242525,
},
[432059] = {
["source"] = "Flickerflame Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212528,
},
[1227745] = {
["encounterName"] = "Azhiccar",
["source"] = "Azhiccar",
["npcID"] = 234893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3107,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[431549] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[463790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Gunner",
["npcID"] = 229180,
},
[1231849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Dunewraith",
["npcID"] = 230621,
},
[471467] = {
["source"] = "Darkfuse Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 229162,
},
[1227759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Creeper",
["npcID"] = 234421,
},
[1223667] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Watcher Gaz'Kreth",
["npcID"] = 239702,
},
[451510] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[431552] = {
["source"] = "Direweb Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 221303,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night-Twisted Hog",
["npcID"] = 215206,
},
[1227768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glutted Creeper",
["npcID"] = 234282,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[462771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Surveyor",
["npcID"] = 229686,
},
[443837] = {
["encounterName"] = "Speaker Halven",
["source"] = "Speaker Halven",
["npcID"] = 217570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3007,
},
[466866] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[1231871] = {
["encounterName"] = "Fractillus",
["source"] = "Fractillus",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[474031] = {
["source"] = "Void-Cursed Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[1227779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Creeper",
["npcID"] = 245783,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[1231875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Wildcaller",
["npcID"] = 230624,
},
[1227782] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3131,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[468915] = {
["source"] = "Imperious Blaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 229356,
},
[463798] = {
["isChanneled"] = false,
["source"] = "Torq",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229177,
},
[443840] = {
["encounterName"] = "Speaker Halven",
["source"] = "Speaker Halven",
["npcID"] = 217570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3007,
},
[1231882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nyz'raal the Umbral Blade",
["npcID"] = 234533,
},
[356843] = {
["source"] = "Hourglass Tidesage",
["event"] = "SPELL_CAST_START",
["npcID"] = 179388,
},
[1227792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Creeper",
["npcID"] = 245783,
},
[1213469] = {
["source"] = "Princeguard Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224175,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[1215521] = {
["source"] = "The Underpin",
["event"] = "SPELL_CAST_START",
["npcID"] = 247390,
},
[1242133] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[1227809] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1242143] = {
["isChanneled"] = true,
["source"] = "Observer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 246874,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[440266] = {
["source"] = "Duskborn Darkhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[474554] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[418262] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[446409] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[353783] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Disruptive Patron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176565,
},
[473533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obedient-ish Predator",
["npcID"] = 231930,
},
[449481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[448458] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Devoted Worshipper",
["npcID"] = 223318,
},
[76484] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Torturer",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39978,
},
[463811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Gunner",
["npcID"] = 229180,
},
[430036] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Squall",
["npcID"] = 194895,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[473537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Punchy Thug",
["npcID"] = 231904,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Voidspeaker",
["npcID"] = 223150,
},
[450509] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[446416] = {
["source"] = "Honey-Fused Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 213697,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Bound Despoiler",
["npcID"] = 212765,
},
[465863] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[456140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[1231954] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Golem",
["npcID"] = 240974,
},
[75590] = {
["isChanneled"] = true,
["source"] = "Twilight Sadist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[331274] = {
["source"] = "Consuming Rancor",
["event"] = "SPELL_CAST_START",
["npcID"] = 170002,
},
[456653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[473541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Punchy Thug",
["npcID"] = 231904,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[346116] = {
["encounterName"] = "Hylbrande",
["source"] = "Hylbrande",
["encounterID"] = 2426,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175663,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[463819] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[437721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[445910] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 237337,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[456147] = {
["source"] = "Bandtail Kestrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 220300,
},
[444377] = {
["source"] = "Enraged Kodiak",
["event"] = "SPELL_CAST_START",
["npcID"] = 229060,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[465871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Bloodwarper",
["npcID"] = 230748,
},
[450519] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 247387,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[465872] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[424421] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[260635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dire Barb",
["npcID"] = 140275,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[473550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aerial Support Bot",
["npcID"] = 231906,
},
[82757] = {
["isChanneled"] = true,
["source"] = "Neferset Theurgist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44980,
},
[1234044] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 239836,
},
[463828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[440288] = {
["source"] = "Duskborn Darkhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[445406] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soaring Devilfish",
["npcID"] = 246733,
},
[445407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soaring Devilfish",
["npcID"] = 246733,
},
[1227918] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[1219731] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "Taah'bat",
["npcID"] = 234933,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3108,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Murloc",
["npcID"] = 226666,
},
[447456] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtouched Speaker",
["npcID"] = 223469,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[1245752] = {
["encounterName"] = "So'azmi",
["source"] = "So'azmi",
["npcID"] = 175806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2437,
},
[318243] = {
["source"] = "Necromantic Dissident",
["event"] = "SPELL_CAST_START",
["npcID"] = 172479,
},
[424429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[1242259] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Ilyssa Darksorrow",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Fragment",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 227518,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 219676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2946,
},
[474453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 237587,
},
[76682] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Twilight Element Warden",
["encounterID"] = 1036,
["event"] = "SPELL_CAST_START",
["npcID"] = 40017,
},
[1229523] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plexus Sentinel",
["npcID"] = 239454,
},
[1244313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Arcanist",
["npcID"] = 244411,
},
[369674] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[445210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[424750] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[1236130] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[1233672] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Ilyssa Darksorrow",
["npcID"] = 237662,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[451044] = {
["source"] = "Gargantuan Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222960,
},
[424891] = {
["source"] = "Fungal Speartender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207456,
},
[1242071] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["encounterID"] = 3130,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233816,
},
[1226903] = {
["source"] = "Shadowguard Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 241242,
},
[426731] = {
["source"] = "Naz'jar Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[1213621] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
[387352] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[224729] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[1223859] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[469981] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[427897] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[98951] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[1217589] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 237337,
},
[432113] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[354297] = {
["source"] = "Focused Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 180431,
},
[1227962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unreal Observer",
["npcID"] = 231551,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[418297] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[461796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[76688] = {
["isChanneled"] = true,
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40019,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[465380] = {
["source"] = "Darkfuse Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 229162,
},
[1223880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Gaz'Kreth",
["npcID"] = 239702,
},
[470498] = {
["source"] = "Goblin Sapper Bot",
["event"] = "SPELL_CAST_START",
["npcID"] = 228053,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[352796] = {
["source"] = "Gatewarden Zo'mazz",
["event"] = "SPELL_CAST_START",
["npcID"] = 178392,
},
[98952] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[445935] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[440306] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Darkcaster",
["npcID"] = 219810,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mystic",
["npcID"] = 195877,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[470308] = {
["source"] = "Sureki Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 238771,
},
[1213656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drill Sergeant",
["npcID"] = 231925,
},
[357404] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Evaile",
["npcID"] = 180399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2440,
},
[98710] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[432120] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[469478] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[1223211] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nascent Darkmage",
["npcID"] = 248626,
},
[1230979] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[444915] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[353312] = {
["encounterName"] = "Hylbrande",
["source"] = "Hylbrande",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175663,
},
[456174] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[428926] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[1235326] = {
["source"] = "Stoneborn Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 167607,
},
[1236186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Void Adept",
["npcID"] = 244111,
},
[464149] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["encounterID"] = 3012,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230322,
},
[450546] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[332650] = {
["source"] = "Architect Halen",
["event"] = "SPELL_CAST_START",
["npcID"] = 165008,
},
[469993] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[431612] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[1236193] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Golem",
["npcID"] = 236549,
},
[200901] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[369409] = {
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[89105] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[1235064] = {
["source"] = "Zagithav",
["event"] = "SPELL_CAST_START",
["npcID"] = 230644,
},
[450037] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[357196] = {
["source"] = "Cartel Wiseguy",
["event"] = "SPELL_CAST_START",
["npcID"] = 180336,
},
[1225966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bandtail Kestrel",
["npcID"] = 237132,
},
[428407] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213770,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Overseer",
["npcID"] = 216856,
},
[88194] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[1227784] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[1239907] = {
["source"] = "Shadowed Fateshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 242517,
},
[453110] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220507,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[426768] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[442618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Dominator",
["npcID"] = 215601,
},
[427376] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[465905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Shredder",
["npcID"] = 227904,
},
[426741] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[82765] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[445705] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[444925] = {
["source"] = "Umbral Spore",
["event"] = "SPELL_CAST_START",
["npcID"] = 223916,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[450043] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[270419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Deposits",
["npcID"] = 223532,
},
[1231719] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3132,
},
[1223944] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Phase Stalker",
["npcID"] = 234843,
},
[1242088] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["encounterID"] = 3130,
["event"] = "SPELL_CAST_START",
["npcID"] = 233816,
},
[1230087] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1236229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Arcanotech",
["npcID"] = 244137,
},
[76590] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[470515] = {
["source"] = "Sureki Siegelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 239208,
},
[83780] = {
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 44897,
},
[1231005] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Living Mass",
["npcID"] = 242587,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3135,
},
[82760] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[1239407] = {
["encounterName"] = "Captain Nil'hitan",
["source"] = "Ethereal Scallywag",
["encounterID"] = 3279,
["event"] = "SPELL_CAST_START",
["npcID"] = 245722,
},
[432135] = {
["source"] = "Invading Kobold",
["event"] = "SPELL_CAST_START",
["npcID"] = 216157,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[1216826] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 230748,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[1239732] = {
["source"] = "Revenant of the Wasteland",
["event"] = "SPELL_CAST_START",
["npcID"] = 232189,
},
[348128] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Deathspeaker",
["npcID"] = 195851,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[465813] = {
["source"] = "Undercrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 231380,
},
[1223222] = {
["source"] = "Darkmage Zadus",
["event"] = "SPELL_CAST_START",
["npcID"] = 239454,
},
[473589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Barrel",
["npcID"] = 234498,
},
[76813] = {
["source"] = "Naz'jar Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[1242187] = {
["source"] = "Arcana-Monger So'zer",
["event"] = "SPELL_CAST_START",
["npcID"] = 241956,
},
[424462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taener Duelmal",
["npcID"] = 239834,
},
[330553] = {
["source"] = "Scathely",
["event"] = "SPELL_CAST_START",
["npcID"] = 172485,
},
[1230941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Infiltrator",
["npcID"] = 237285,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[1228065] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[441351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[1244443] = {
["source"] = "Commerce Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 179842,
},
[1236256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Phasecutter",
["npcID"] = 244101,
},
[83151] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[1239268] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Voidwarden",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 245705,
},
[1226024] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[355830] = {
["source"] = "Cartel Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 179893,
},
[1236263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Narathe",
["npcID"] = 231519,
},
[1228075] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-Prince Xevvos",
["npcID"] = 241798,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[432142] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[440768] = {
["source"] = "Black Blood Container",
["event"] = "SPELL_CAST_START",
["npcID"] = 234771,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Clacker",
["npcID"] = 215881,
},
[356404] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 180091,
},
[1228081] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-Prince Xevvos",
["npcID"] = 241798,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3134,
},
[318319] = {
["isChanneled"] = true,
["source"] = "Morbid Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164273,
},
[1239350] = {
["encounterName"] = "Captain Nil'hitan",
["source"] = "Captain Nil'hitan",
["encounterID"] = 3279,
["event"] = "SPELL_CAST_START",
["npcID"] = 244384,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[465408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[459779] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[323142] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[1217853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geargrinder Biker",
["npcID"] = 237516,
},
[428563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Flametender",
["npcID"] = 213913,
},
[1217855] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geargrinder Biker",
["npcID"] = 237516,
},
[323143] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[356407] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 180091,
},
[328206] = {
["encounterName"] = "Echelon",
["source"] = "Echelon",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[1237071] = {
["source"] = "Stoneborn Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 167607,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[1223364] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["npcID"] = 233814,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3129,
},
[434706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tasting Room Attendant",
["npcID"] = 214920,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[1242086] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["encounterID"] = 3130,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233816,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[116] = {
["npcID"] = 188027,
},
[1242028] = {
["source"] = "Shadowguard Sentinel Za'drin",
["event"] = "SPELL_CAST_START",
["npcID"] = 242705,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[1215015] = {
["encounterName"] = "Torque Clanfire and Sprok",
["source"] = "Sprok",
["npcID"] = 237552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3140,
},
[347903] = {
["source"] = "Overloaded Mailemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 176395,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[326409] = {
["source"] = "Shard of Halkias",
["event"] = "SPELL_CAST_START",
["npcID"] = 164557,
},
[1231893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelsoul Arcanoward",
["npcID"] = 247624,
},
[76588] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[359222] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Unruly Patron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 180158,
},
[431639] = {
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[323538] = {
["encounterName"] = "High Adjudicator Aleez",
["source"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2403,
},
[357436] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Verethian",
["npcID"] = 180470,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2440,
},
[1228115] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[442387] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[347716] = {
["source"] = "P.O.S.T. Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 176394,
},
[1246541] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Nullbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 248589,
},
[1224025] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3130,
},
[355577] = {
["source"] = "Stormforged Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 178171,
},
[451600] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Chamber Expeller",
["npcID"] = 224368,
},
[1234263] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Avalanche",
["npcID"] = 187082,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Candleflyer",
["npcID"] = 219343,
},
[135029] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[356929] = {
["source"] = "Tracker Zo'korss",
["event"] = "SPELL_CAST_START",
["npcID"] = 179837,
},
[1217456] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[15284] = {
["encounterName"] = "Karsh Steelbender",
["source"] = "Karsh Steelbender",
["encounterID"] = 1039,
["event"] = "SPELL_CAST_START",
["npcID"] = 39698,
},
[1242469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Sandreaver",
["npcID"] = 244410,
},
[1215850] = {
["source"] = "Burrowing Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 245092,
},
[87761] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[1213805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[445974] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[372794] = {
["isChanneled"] = true,
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[1215855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Manifestation",
["npcID"] = 231558,
},
[356812] = {
["source"] = "Leader Xy'viler",
["event"] = "SPELL_CAST_START",
["npcID"] = 180286,
},
[349498] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Alcruux",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[454675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Stones",
["npcID"] = 223526,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Clacker",
["npcID"] = 215881,
},
[1237245] = {
["source"] = "Great Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 244444,
},
[453141] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["npcID"] = 94960,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[347721] = {
["source"] = "Defective Sorter",
["event"] = "SPELL_CAST_START",
["npcID"] = 176396,
},
[428066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[87762] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[1231720] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[369465] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[353836] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Disruptive Patron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176565,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[466961] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[1214523] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[1226111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Destroyer",
["npcID"] = 236995,
},
[382696] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[1236348] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[1228161] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[465939] = {
["source"] = "Darkfuse Skyfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 227955,
},
[1228163] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 233823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[459799] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[350796] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[1236354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Soulbreaker",
["npcID"] = 244113,
},
[1225319] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[338003] = {
["source"] = "Depraved Obliterator",
["event"] = "SPELL_CAST_START",
["npcID"] = 165414,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[319941] = {
["encounterName"] = "Echelon",
["source"] = "Echelon",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[355306] = {
["source"] = "Rift Blast Portal",
["event"] = "SPELL_CAST_START",
["npcID"] = 179778,
},
[473579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aerial Support Bot",
["npcID"] = 231906,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[321633] = {
["source"] = "Morbid Boneguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 168266,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hilltop Jawcrawler",
["npcID"] = 227980,
},
[1228196] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 233823,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3134,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascendant Vis'coxria",
["npcID"] = 211261,
},
[449567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[1244556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orith the Dreadful",
["npcID"] = 232127,
},
[465432] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arcblade",
["npcID"] = 194898,
},
[356942] = {
["source"] = "Tracker Zo'korss",
["event"] = "SPELL_CAST_START",
["npcID"] = 179837,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Cliff",
["npcID"] = 187090,
},
[1224094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Creeper",
["npcID"] = 236947,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diabolic Imp",
["npcID"] = 219161,
},
[76634] = {
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 40925,
},
[431659] = {
["source"] = "Clotweave Widow",
["event"] = "SPELL_CAST_START",
["npcID"] = 216193,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[1232287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Darkweaver",
["npcID"] = 230962,
},
[463900] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[257090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Trogg",
["npcID"] = 226668,
},
[430125] = {
["isChanneled"] = true,
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[1228197] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Dimension Portal",
["npcID"] = 241916,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44819,
},
[1213852] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 247390,
},
[387652] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[1219053] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Unbound Assassin",
["npcID"] = 237871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[1242534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Wildcaller",
["npcID"] = 244418,
},
[473114] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[438827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atik",
["npcID"] = 217533,
},
[474004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drill Sergeant",
["npcID"] = 231925,
},
[465595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Electrician",
["npcID"] = 231312,
},
[1228216] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[1244596] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Evaile",
["npcID"] = 180399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2440,
},
[76508] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Crazed Mage",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39982,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[1228213] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[465952] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[471585] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[1230263] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-Prince Xevvos",
["npcID"] = 241798,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[82137] = {
["source"] = "Rom'ogg Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[82393] = {
["isChanneled"] = true,
["source"] = "Unstable Corruption",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39705,
},
[352345] = {
["encounterName"] = "Timecap'n Hooktail",
["source"] = "Hourglass Cannon",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 176178,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[1236428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeye Observer",
["npcID"] = 244138,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[1244600] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 247987,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[1240102] = {
["encounterName"] = "Timecap'n Hooktail",
["source"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 175546,
},
[352347] = {
["encounterName"] = "Hylbrande",
["source"] = "Vault Purifier",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 176551,
},
[1248699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Pactspeaker",
["npcID"] = 234955,
},
[422969] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[1248701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wastelander Pactspeaker",
["npcID"] = 234955,
},
[1248702] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wastelander Pactspeaker",
["npcID"] = 234955,
},
[1232327] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[474001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Masked Freelancer",
["npcID"] = 231910,
},
[1215953] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[456746] = {
["source"] = "Workmaster Earwax",
["event"] = "SPELL_CAST_START",
["npcID"] = 213195,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixkreten the Unbreakable",
["npcID"] = 211262,
},
[1228238] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[466470] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[442418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burkhalt",
["npcID"] = 228671,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[474147] = {
["source"] = "Gallagio Cocktail",
["event"] = "SPELL_CAST_START",
["npcID"] = 229435,
},
[87768] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[440372] = {
["source"] = "Understalker Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216249,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixkreten the Unbreakable",
["npcID"] = 211262,
},
[429114] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[355934] = {
["source"] = "Support Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 177817,
},
[1228214] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3132,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[445492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soaring Devilfish",
["npcID"] = 246733,
},
[431674] = {
["source"] = "Kaheti Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 217448,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Soot-Seer",
["npcID"] = 212876,
},
[1254321] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1244630] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Dirtwhistle",
["npcID"] = 180486,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2440,
},
[1230302] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Manaforged Titan",
["npcID"] = 241800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Blind Matriarch",
["npcID"] = 206078,
},
[349797] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Alcruux",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176556,
},
[329838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Stalker",
["npcID"] = 159027,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 229227,
},
[425536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[460847] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 232599,
},
[1228265] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[353635] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[437592] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[321652] = {
["source"] = "Morbid Boneguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 168266,
},
[349934] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Achillite",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[465966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Contractor",
["npcID"] = 231312,
},
[1240060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Untethered Rampager",
["npcID"] = 242525,
},
[444473] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[444985] = {
["source"] = "Shacklefang Hornet",
["event"] = "SPELL_CAST_START",
["npcID"] = 223178,
},
[355429] = {
["source"] = "Coastwalker Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 178165,
},
[468726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Diver",
["npcID"] = 231496,
},
[460156] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[1216525] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Rocket Launcher",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230360,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbral Shalehorn",
["npcID"] = 227933,
},
[1240561] = {
["source"] = "Grubber",
["event"] = "SPELL_CAST_START",
["npcID"] = 238540,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[450492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zekvir",
["npcID"] = 247387,
},
[346204] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[458423] = {
["source"] = "Kordac",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[1240567] = {
["source"] = "Grubber",
["event"] = "SPELL_CAST_START",
["npcID"] = 238540,
},
[372087] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[1244249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Sandreaver",
["npcID"] = 248084,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[465971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Skyfire",
["npcID"] = 227955,
},
[433731] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2906,
},
[1234939] = {
["source"] = "Zagithav",
["event"] = "SPELL_CAST_START",
["npcID"] = 230644,
},
[359016] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[355048] = {
["source"] = "Murkbrine Shellcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 178139,
},
[456249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthfury Cragshar",
["npcID"] = 222741,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 44404,
},
[434756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 210269,
},
[440899] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[59638] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[473650] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[441410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[377732] = {
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[465463] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[453989] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[325701] = {
["isChanneled"] = true,
["source"] = "Toiling Groundskeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165529,
},
[1228317] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 233823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[439365] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[423501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[1215023] = {
["encounterName"] = "Torque Clanfire and Sprok",
["source"] = "Torque Clankfire",
["npcID"] = 237554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3140,
},
[465827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Bloodwarper",
["npcID"] = 230748,
},
[355439] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176563,
},
[329340] = {
["encounterName"] = "High Adjudicator Aleez",
["source"] = "High Adjudicator Aleez",
["npcID"] = 165410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2403,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[449090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[473260] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[431691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki String Conductor",
["npcID"] = 216554,
},
[1226277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Netherfang Soulbarker",
["npcID"] = 234051,
},
[1216039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[351646] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Upland Bull",
["npcID"] = 226118,
},
[346742] = {
["encounterName"] = "Mailroom Mayhem",
["source"] = "P.O.S.T. Master",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[465071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[450628] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[452164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[467776] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Pit Mechanic",
["npcID"] = 228514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[470587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[470588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[440506] = {
["source"] = "Bubbling Mudskip",
["event"] = "SPELL_CAST_START",
["npcID"] = 214960,
},
[1237905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reshanor",
["npcID"] = 238319,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[466296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 237587,
},
[328322] = {
["encounterName"] = "Echelon",
["source"] = "Undying Stonefiend",
["npcID"] = 164363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[1218103] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Velaryn Bloodwrath",
["npcID"] = 237660,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[456260] = {
["event"] = "SPELL_CAST_START",
["source"] = "You?",
["npcID"] = 226694,
},
[456772] = {
["source"] = "Workmaster Nast",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[359028] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[385063] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 242837,
},
[460867] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Superheated Slag",
["npcID"] = 227382,
},
[470592] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[470591] = {
["source"] = "Nightfall Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[473993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Masked Freelancer",
["npcID"] = 231910,
},
[1226302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Netherfang Soulbarker",
["npcID"] = 234051,
},
[1235583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Fragment",
["npcID"] = 223416,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[1218117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[1231865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Thief",
["npcID"] = 234032,
},
[471736] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[1218120] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Junkmaker",
["npcID"] = 233306,
},
[422648] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2787,
},
[440912] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[452171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[461895] = {
["isChanneled"] = false,
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229296,
},
[1218127] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Junkmaker",
["npcID"] = 233306,
},
[347775] = {
["source"] = "Overloaded Mailemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 176395,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[434773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Patron",
["npcID"] = 214668,
},
[326794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Sigar",
["npcID"] = 167876,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[1239281] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3108,
},
[322936] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["source"] = "Halkias",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[1219438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Shredder",
["npcID"] = 227904,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegehold Defender",
["npcID"] = 216016,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[454319] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Careless Hopgoblin",
["npcID"] = 218671,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[1216093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unreal Observer",
["npcID"] = 230426,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Steam",
["npcID"] = 227383,
},
[465481] = {
["source"] = "Bloodfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 227843,
},
[466979] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[1229037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidcrawler",
["npcID"] = 245782,
},
[430171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[88056] = {
["isChanneled"] = true,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[320657] = {
["source"] = "Morbid Boneguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 168266,
},
[452177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Reserve",
["npcID"] = 235409,
},
[1236572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Null Bastion",
["npcID"] = 244115,
},
[447060] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Taste Tester",
["npcID"] = 222964,
},
[390256] = {
["source"] = "Proscenium Punk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215791,
},
[456272] = {
["event"] = "SPELL_CAST_START",
["source"] = "You?",
["npcID"] = 226694,
},
[1234529] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 233823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[426261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[455250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rumblestone",
["npcID"] = 223546,
},
[1239791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Siltfeaster",
["npcID"] = 230546,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[1234534] = {
["source"] = "Riftbreaker Tza'akir",
["event"] = "SPELL_CAST_START",
["npcID"] = 241383,
},
[426869] = {
["source"] = "Flickerflame Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[446328] = {
["source"] = "Shadow-Hemmed Fog Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 221663,
},
[431645] = {
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 212717,
},
[461904] = {
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_START",
["npcID"] = 229296,
},
[462416] = {
["source"] = "Darkfuse Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 229603,
},
[352390] = {
["source"] = "Portalmancer Zo'honn",
["event"] = "SPELL_CAST_START",
["npcID"] = 179334,
},
[1242521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Wildcaller",
["npcID"] = 244418,
},
[357508] = {
["source"] = "Enraged Direhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 180495,
},
[355464] = {
["source"] = "Coastwalker Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 178165,
},
[448600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 45259,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite-Infused Elemental",
["npcID"] = 137905,
},
[346766] = {
["encounterName"] = "Hylbrande",
["source"] = "Hylbrande",
["npcID"] = 175663,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2426,
},
[322711] = {
["encounterName"] = "Halkias, the Sin-Stained Goliath",
["source"] = "Halkias",
["npcID"] = 165408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2401,
},
[431714] = {
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 212717,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[1226366] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[427621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[1234558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flametouched Ray",
["npcID"] = 234197,
},
[357512] = {
["source"] = "Enraged Direhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 180495,
},
[443487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[87779] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[357513] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Hips",
["npcID"] = 180485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2440,
},
[357260] = {
["source"] = "Focused Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 180431,
},
[1234565] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[438883] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nakt",
["npcID"] = 218324,
},
[1236614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Sigar",
["npcID"] = 167876,
},
[458329] = {
["source"] = "Kordac",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[88055] = {
["isChanneled"] = true,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[470612] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[455260] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[1241023] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176563,
},
[1219450] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[466808] = {
["source"] = "Darkfuse Wretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 230028,
},
[473684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bopper Bot",
["npcID"] = 231908,
},
[355584] = {
["source"] = "Stormforged Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 178171,
},
[466518] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[468487] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[1242770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pactsworn Fraycaller",
["npcID"] = 244413,
},
[1226395] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["npcID"] = 233815,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3131,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[434281] = {
["source"] = "Weeping Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[1226401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Weavemaster",
["npcID"] = 240974,
},
[447076] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[355473] = {
["source"] = "Commander Zo'far",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1236640] = {
["source"] = "Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 244905,
},
[351119] = {
["encounterName"] = "So'leah",
["source"] = "So' Cartel Assassin",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177716,
},
[157331] = {
["source"] = "Lesser Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 229798,
},
[1242784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Fraycaller",
["npcID"] = 244413,
},
[471930] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228463,
},
[346957] = {
["encounterName"] = "Hylbrande",
["source"] = "Titanic Defense Turret",
["encounterID"] = 2426,
["event"] = "SPELL_CAST_START",
["npcID"] = 175667,
},
[473691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bopper Bot",
["npcID"] = 231908,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[474203] = {
["source"] = "Darkfuse Wretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 230028,
},
[473690] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[463967] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[323236] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[1224634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Creeper",
["npcID"] = 236947,
},
[316072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highway Serf",
["npcID"] = 169476,
},
[369806] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[432229] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[448616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[350875] = {
["encounterName"] = "So'leah",
["source"] = "So'leah",
["encounterID"] = 2442,
["event"] = "SPELL_CAST_START",
["npcID"] = 177269,
},
[81642] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[355479] = {
["source"] = "Commander Zo'far",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[1232569] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[1214147] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Underpin",
["npcID"] = 247390,
},
[463459] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40788,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[1230529] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Ambusher",
["npcID"] = 219715,
},
[369811] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[459997] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Geargrinder Biker",
["npcID"] = 225804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[454762] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ankle Biter",
["npcID"] = 219996,
},
[1226442] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3134,
},
[396423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galestrike Proto-Dragon",
["npcID"] = 187211,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[1238954] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Bone Melter",
["npcID"] = 245617,
},
[460393] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[429176] = {
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_START",
["npcID"] = 40943,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["npcID"] = 220741,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[1232590] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1222356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tamed Ruinstalker",
["npcID"] = 234960,
},
[377486] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[450505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zekvir",
["npcID"] = 247387,
},
[449136] = {
["isChanneled"] = true,
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212542,
},
[1228502] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Forgeweaver Araz",
["npcID"] = 233817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[423479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[428089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[1224980] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Thwacker",
["npcID"] = 237132,
},
[326829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Sigar",
["npcID"] = 167876,
},
[1232601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Creature",
["npcID"] = 242295,
},
[448111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[1216233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Golem",
["npcID"] = 236549,
},
[1234009] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowguard Voidcaller",
["npcID"] = 237132,
},
[1232605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Creature",
["npcID"] = 230958,
},
[1236703] = {
["encounterName"] = "Soul-Scribe",
["source"] = "Soul-Scribe",
["npcID"] = 234935,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3109,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[369818] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[356001] = {
["source"] = "Armored Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 177808,
},
[1232610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Creature",
["npcID"] = 242295,
},
[455281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[1216204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Golem",
["npcID"] = 236549,
},
[1214190] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[445559] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[319733] = {
["encounterName"] = "Echelon",
["source"] = "Echelon",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[410760] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[356133] = {
["source"] = "Burly Deckhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 180015,
},
[450677] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 242837,
},
[369865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakril",
["npcID"] = 193223,
},
[1234328] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3132,
},
[1232622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Infiltrator",
["npcID"] = 237285,
},
[355139] = {
["isChanneled"] = true,
["source"] = "Murkbrine Shorerunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179733,
},
[1238765] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 234478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[431744] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[448632] = {
["isChanneled"] = false,
["source"] = "Under-Lord Vik'tis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 247464,
},
[381593] = {
["source"] = "Ebonstone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[188046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Denizen of the Dream",
["npcID"] = 198489,
},
[430109] = {
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[88170] = {
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 45924,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[357542] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Vilt",
["npcID"] = 180484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2440,
},
[466545] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[448634] = {
["source"] = "Under-Lord Vik'tis",
["event"] = "SPELL_CAST_START",
["npcID"] = 247464,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[1232790] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowguard Voidtamer",
["npcID"] = 234429,
},
[1232789] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Voidtamer",
["npcID"] = 234429,
},
[1240821] = {
["source"] = "Bazaar Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 246285,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proscenium Puddlestomper",
["npcID"] = 216072,
},
[474223] = {
["source"] = "Hideous Amalgamation",
["event"] = "SPELL_CAST_START",
["npcID"] = 234208,
},
[1238782] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[346286] = {
["encounterName"] = "Mailroom Mayhem",
["source"] = "P.O.S.T. Master",
["encounterID"] = 2424,
["event"] = "SPELL_CAST_START",
["npcID"] = 175646,
},
[453242] = {
["source"] = "Trungal",
["event"] = "SPELL_CAST_START",
["npcID"] = 220268,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[1236247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lash'ir",
["npcID"] = 231529,
},
[455277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[1231438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Bulwark",
["npcID"] = 231586,
},
[369828] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["npcID"] = 220738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[1238780] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[1243017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Dustblade",
["npcID"] = 244415,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[422246] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[428169] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[473715] = {
["source"] = "Melbo the Magnificent",
["event"] = "SPELL_CAST_START",
["npcID"] = 229434,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[1230608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Dreadnaught",
["npcID"] = 234445,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[422541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[474228] = {
["source"] = "Silent Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 234210,
},
[450176] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[1233997] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Collector",
["npcID"] = 240905,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3132,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glooming Darkweaver",
["npcID"] = 216868,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[326846] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inquisitor Sigar",
["npcID"] = 167876,
},
[315076] = {
["source"] = "Morbid Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 164273,
},
[1230619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Colossus",
["npcID"] = 231585,
},
[1221384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
},
[326847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Sigar",
["npcID"] = 167876,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dustback Burrower",
["npcID"] = 230293,
},
[448644] = {
["source"] = "Under-Lord Vik'tis",
["event"] = "SPELL_CAST_START",
["npcID"] = 247464,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[1236770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Steelsoul",
["npcID"] = 244140,
},
[267997] = {
["source"] = "Charhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 226269,
},
[369675] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[1220489] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[1244964] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pactsworn Sandreaver",
["npcID"] = 248084,
},
[451608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shadeshaper",
["npcID"] = 215653,
},
[157348] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[347149] = {
["encounterName"] = "Timecap'n Hooktail",
["source"] = "Timecap'n Hooktail",
["encounterID"] = 2419,
["event"] = "SPELL_CAST_START",
["npcID"] = 175546,
},
[1234733] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[372397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Gnoll",
["npcID"] = 226667,
},
[1249065] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3130,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[326450] = {
["source"] = "Depraved Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 164562,
},
[350922] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Oasis Security",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 179269,
},
[1238834] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enforcer Jak'tull",
["npcID"] = 245601,
},
[452231] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[474237] = {
["source"] = "Silent Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 234210,
},
[1226064] = {
["source"] = "Escaped Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 232257,
},
[331479] = {
["source"] = "Flawed Rancor",
["event"] = "SPELL_CAST_START",
["npcID"] = 169992,
},
[426645] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glooming Skulk",
["npcID"] = 216869,
},
[424614] = {
["source"] = "Fungal Stabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 207450,
},
[395941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[267492] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bubbling Mead",
["npcID"] = 133429,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[356537] = {
["source"] = "Portalmancer Zo'honn",
["event"] = "SPELL_CAST_START",
["npcID"] = 179334,
},
[461446] = {
["isChanneled"] = true,
["source"] = "Skittering Swarmite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212579,
},
[456851] = {
["source"] = "Spore-Infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Mole",
["npcID"] = 213834,
},
[348350] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["event"] = "SPELL_CAST_START",
["npcID"] = 175616,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[448663] = {
["source"] = "Under-Lord Vik'tis",
["event"] = "SPELL_CAST_START",
["npcID"] = 247464,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[1245003] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 244752,
},
[1251138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glutted Creeper",
["npcID"] = 234282,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[467086] = {
["source"] = "Greater Acid Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 227930,
},
[1240912] = {
["source"] = "Bazaar Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 246285,
},
[1214325] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[450191] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[473220] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[369335] = {
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormshield",
["npcID"] = 194896,
},
[1214324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[1238867] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Echo",
["encounterID"] = 3132,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 241923,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Partially Teleported Murloc",
["npcID"] = 226666,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[395946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decaymonger Rotpaw",
["npcID"] = 205995,
},
[474212] = {
["source"] = "Darkfuse Wretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 230028,
},
[1238873] = {
["encounterName"] = "Forgeweaver Araz",
["source"] = "Arcane Echo",
["encounterID"] = 3132,
["event"] = "SPELL_CAST_START",
["npcID"] = 241923,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Chamber Guardian",
["npcID"] = 223204,
},
[1214315] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[445077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Ambusher",
["npcID"] = 219715,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Mole",
["npcID"] = 213834,
},
[1240925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Untethered Spellweaver",
["npcID"] = 234896,
},
[448660] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[455313] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[350916] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Oasis Security",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 179269,
},
[444055] = {
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[430238] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarming Cogwalker",
["npcID"] = 232871,
},
[472714] = {
["encounterName"] = "Rik Reverb",
["source"] = "Amplifier",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 230197,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[1218418] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230583,
},
[369853] = {
["source"] = "Burly Rock-Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[456861] = {
["source"] = "Spore-Infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[356548] = {
["source"] = "Gatewarden Zo'mazz",
["event"] = "SPELL_CAST_START",
["npcID"] = 178392,
},
[350919] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[464518] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228648,
},
[473876] = {
["source"] = "Globikus",
["event"] = "SPELL_CAST_START",
["npcID"] = 234640,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[424600] = {
["source"] = "Fungal Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211063,
},
[464399] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["encounterID"] = 3012,
["event"] = "SPELL_CAST_START",
["npcID"] = 230322,
},
[469900] = {
["source"] = "Mechano Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 228050,
},
[1245156] = {
["source"] = "Ky'veza",
["event"] = "SPELL_CAST_START",
["npcID"] = 248134,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[1218353] = {
["source"] = "Melbo the Magnificent",
["event"] = "SPELL_CAST_START",
["npcID"] = 229434,
},
[442525] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Hunter",
["npcID"] = 221198,
},
[449690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Crystal Monstrosity",
["npcID"] = 217200,
},
[450714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[332500] = {
["source"] = "Panicked Necroray",
["event"] = "SPELL_CAST_START",
["npcID"] = 165025,
},
[1238930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Sandreaver",
["npcID"] = 244410,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[469650] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[1243007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pactsworn Dustblade",
["npcID"] = 244415,
},
[1220394] = {
["encounterName"] = "Fractillus",
["source"] = "Fractillus",
["npcID"] = 237861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3133,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[449693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Re'zah",
["npcID"] = 223822,
},
[456346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[1236872] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "The Royal Voidwing",
["npcID"] = 233823,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3134,
},
[447135] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flavor Scientist",
["npcID"] = 222964,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[1234688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Captain Lakheesh",
["npcID"] = 230781,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[467606] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[471293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Worm",
["npcID"] = 238413,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[473748] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[449696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[468631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Diver",
["npcID"] = 231496,
},
[1216414] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Beam Turret",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230358,
},
[424621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 239836,
},
[1214369] = {
["encounterName"] = "Chrome King Gallywix",
["event"] = "SPELL_CAST_START",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
},
[1220511] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "Taah'bat",
["npcID"] = 234933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[436841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[1225174] = {
["encounterName"] = "Soul-Scribe",
["source"] = "Soul-Scribe",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[384194] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[456351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Hookjaw",
["npcID"] = 213805,
},
[465051] = {
["source"] = "Xal'atath",
["event"] = "SPELL_CAST_START",
["npcID"] = 230937,
},
[3110] = {
["source"] = "Lazpep",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[443510] = {
["source"] = "Nightfall Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Deepflayer",
["npcID"] = 219902,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[449135] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[191732] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[1219700] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[438954] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2926,
},
[1227900] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 241375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[442995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[471652] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Soldier",
["npcID"] = 226398,
},
[439467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yes Man",
["npcID"] = 219588,
},
[470684] = {
["source"] = "Darkfuse Melter",
["event"] = "SPELL_CAST_START",
["npcID"] = 229222,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[455273] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Wavecrasher",
["npcID"] = 216526,
},
[472220] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[1222341] = {
["source"] = "Wastes Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 234918,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[1232568] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Ilyssa Darksorrow",
["npcID"] = 237662,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3122,
},
[455480] = {
["source"] = "Take",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[355477] = {
["source"] = "Commander Zo'far",
["event"] = "SPELL_CAST_START",
["npcID"] = 179821,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[439403] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Yes Man",
["npcID"] = 219588,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[432116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Knight",
["npcID"] = 213833,
},
[426677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Batch",
["npcID"] = 220368,
},
[1232543] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Volatile Manifestation",
["encounterID"] = 3129,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 243241,
},
[467379] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[422393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Darkness",
["npcID"] = 208457,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen-Ward Sentinel",
["npcID"] = 216221,
},
[472659] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 233474,
},
[1220553] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[459943] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[1220555] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["event"] = "SPELL_CAST_START",
["npcID"] = 233814,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Snapper",
["npcID"] = 214550,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[467109] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["encounterID"] = 3012,
["event"] = "SPELL_CAST_START",
["npcID"] = 230322,
},
[453292] = {
["source"] = "Trungal",
["event"] = "SPELL_CAST_START",
["npcID"] = 220268,
},
[1241032] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakt",
["npcID"] = 218324,
},
[83066] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[448599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siege Webwing",
["npcID"] = 211591,
},
[451758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shadeshaper",
["npcID"] = 215653,
},
[1252952] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Shadowguard Mage",
["npcID"] = 237981,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[361088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cartel Xy Plunderer",
["npcID"] = 238318,
},
[1234898] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 241517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[1240310] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 234478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[454318] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brew Drop",
["npcID"] = 218671,
},
[1221152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Gorger",
["npcID"] = 234883,
},
[426684] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[474461] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
[1224669] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[1219407] = {
["source"] = "Gallagio Security",
["event"] = "SPELL_CAST_START",
["npcID"] = 229439,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Emissary",
["npcID"] = 229537,
},
[1226721] = {
["encounterName"] = "Loom'ithar",
["source"] = "Loom'ithar",
["encounterID"] = 3131,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233815,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[267532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honey-Crazed Mauler",
["npcID"] = 131568,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[452169] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[472233] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["event"] = "SPELL_CAST_START",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A.",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[1219526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawler Mine",
["npcID"] = 227956,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[467117] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["encounterID"] = 3012,
["event"] = "SPELL_CAST_START",
["npcID"] = 230322,
},
[340446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Envy",
["npcID"] = 167898,
},
[1232315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Duskwalker",
["npcID"] = 230963,
},
[473903] = {
["source"] = "Globikus",
["event"] = "SPELL_CAST_START",
["npcID"] = 234640,
},
[460977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slippery Syphoner",
["npcID"] = 214548,
},
[1236973] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flavor Scientist",
["npcID"] = 214673,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[446649] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[438973] = {
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[1232399] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Manaforged Titan",
["npcID"] = 241800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[355438] = {
["encounterName"] = "Myza's Oasis",
["source"] = "Zo'gron",
["encounterID"] = 2440,
["event"] = "SPELL_CAST_START",
["npcID"] = 176563,
},
[88186] = {
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 45922,
},
[326389] = {
["encounterName"] = "Echelon",
["source"] = "Echelon",
["npcID"] = 164185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2380,
},
[467510] = {
["source"] = "Skiggy Muckheimer",
["event"] = "SPELL_CAST_START",
["npcID"] = 229433,
},
[413387] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[1240577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coordinator Xy'thir",
["npcID"] = 232508,
},
[1214468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechadrone Sniper",
["npcID"] = 229069,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Convoked Tremor",
["npcID"] = 187079,
},
[413263] = {
["encounterName"] = "Asaad",
["source"] = "Skyfall Nova",
["encounterID"] = 1042,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 52019,
},
[356967] = {
["source"] = "Cartel Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 180348,
},
[1225582] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[468658] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[1220618] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["npcID"] = 233814,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3129,
},
[470706] = {
["source"] = "Darkfuse Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229272,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[455354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Flameslinger",
["npcID"] = 223528,
},
[472452] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[460472] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[1224719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Sentinel",
["npcID"] = 234041,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[437956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[456891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[1231311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Slateback Shade",
["npcID"] = 239830,
},
[1241100] = {
["encounterName"] = "Soulbinder Naazindhri",
["source"] = "Soulbinder Naazindhri",
["npcID"] = 233816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3130,
},
[1219482] = {
["encounterName"] = "Taah'bat and A'wazj",
["source"] = "A'wazj",
["npcID"] = 237514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3108,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Kobyss",
["npcID"] = 215750,
},
[471733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 231223,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[1225673] = {
["encounterName"] = "Fractillus",
["source"] = "Fractillus",
["encounterID"] = 3133,
["event"] = "SPELL_CAST_START",
["npcID"] = 237861,
},
[1224731] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[434740] = {
["source"] = "Nightfall Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[1245203] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 244752,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[432179] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[1226783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Entity",
["npcID"] = 236072,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[463905] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[355057] = {
["source"] = "Murkbrine Shellcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 178139,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Machine Speaker",
["npcID"] = 212878,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44704,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[329113] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2381,
},
[1223235] = {
["isChanneled"] = false,
["source"] = "Darkmage Zadus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 239454,
},
[88061] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[345990] = {
["encounterName"] = "Zo'phex the Sentinel",
["source"] = "Zo'phex",
["encounterID"] = 2425,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175616,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[465326] = {
["source"] = "Bloodfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 227843,
},
[450757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[358131] = {
["encounterName"] = "Hylbrande",
["source"] = "Stormbound Breaker",
["npcID"] = 180640,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2426,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[455364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kx",
["npcID"] = 216582,
},
[328791] = {
["encounterName"] = "Lord Chamberlain",
["source"] = "Lord Chamberlain",
["npcID"] = 164218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2381,
},
[472764] = {
["source"] = "Consuming Voidstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[473276] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230583,
},
[1244461] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 244752,
},
[1224760] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Sentinel",
["npcID"] = 234041,
},
[1213803] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[317792] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[1217653] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[468672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombshell Crab",
["npcID"] = 231497,
},
[473070] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[86911] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[452539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[1245240] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 244752,
},
[205231] = {
["source"] = "Darkglare",
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[443598] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[1226991] = {
["source"] = "Sand Swirler",
["event"] = "SPELL_CAST_START",
["npcID"] = 237972,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[430805] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[463169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Surveyor",
["npcID"] = 229686,
},
[472833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb Bot",
["npcID"] = 231928,
},
[1244462] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 3326,
["event"] = "SPELL_CAST_START",
["npcID"] = 244752,
},
[426712] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2837,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[1214546] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[473351] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[451277] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[88959] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[1232973] = {
["encounterName"] = "Dimensius, the All-Devouring",
["source"] = "Dimensius",
["npcID"] = 233824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3135,
},
[350086] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Venza Goldfuse",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176705,
},
[1224787] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[414944] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[464584] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["encounterID"] = 3011,
["event"] = "SPELL_CAST_START",
["npcID"] = 228648,
},
[1215084] = {
["encounterName"] = "Torque Clanfire and Sprok",
["source"] = "Sprok",
["npcID"] = 237552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3140,
},
[369399] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporemancer",
["npcID"] = 215538,
},
[1224793] = {
["encounterName"] = "Soul-Scribe",
["source"] = "Soul-Scribe",
["encounterID"] = 3109,
["event"] = "SPELL_CAST_START",
["npcID"] = 234935,
},
[1239740] = {
["source"] = "Untethered Voidshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 234897,
},
[369400] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[13860] = {
["source"] = "Monstrous Larva",
["event"] = "SPELL_CAST_START",
["npcID"] = 240091,
},
[349954] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Achillite",
["encounterID"] = 2441,
["event"] = "SPELL_CAST_START",
["npcID"] = 176555,
},
[1220982] = {
["encounterName"] = "Plexus Sentinel",
["source"] = "Plexus Sentinel",
["encounterID"] = 3129,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 233814,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[451793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Al'haggro",
["npcID"] = 216560,
},
[449298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[430812] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[355640] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Veteran Sparkcaster",
["encounterID"] = 2441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[1214780] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[82753] = {
["isChanneled"] = true,
["source"] = "Neferset Theurgist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44980,
},
[355638] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Market Peacekeeper",
["encounterID"] = 2441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[466124] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226404,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[1235045] = {
["encounterName"] = "The Soul Hunters",
["source"] = "Adarus Duskblaze",
["npcID"] = 237661,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3122,
},
[1231315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coordinator Xy'thir",
["npcID"] = 232508,
},
[1224812] = {
["encounterName"] = "Nexus-King Salhadaar",
["source"] = "Nexus-King Salhadaar",
["npcID"] = 237763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3134,
},
[355637] = {
["encounterName"] = "The Grand Menagerie",
["source"] = "Market Peacekeeper",
["encounterID"] = 2441,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 179840,
},
[91408] = {
["isChanneled"] = true,
["source"] = "Augh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49045,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[1223007] = {
["source"] = "Wastes Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 234918,
},
[1235052] = {
["isChanneled"] = false,
["source"] = "Stormforged Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 178171,
},
[1237381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mercenary Acquisitionist",
["npcID"] = 244442,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[428399] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213770,
},
[1239906] = {
["isChanneled"] = true,
["source"] = "Shadowed Fateshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 242517,
},
[16568] = {
["isChanneled"] = true,
["source"] = "Monstrous Larva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 240091,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[448854] = {
["source"] = "Burly Contender",
["event"] = "SPELL_CAST_START",
["npcID"] = 217646,
},
[428542] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[463058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Hyena",
["npcID"] = 229252,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[472782] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 233474,
},
[442589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[1217446] = {
["encounterName"] = "Azhiccar",
["source"] = "Azhiccar",
["npcID"] = 234893,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3107,
},
[427384] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[99503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Wielder",
["npcID"] = 53575,
},
[433448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 216621,
},
[449522] = {
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[463061] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Hyena",
["npcID"] = 229252,
},
[369411] = {
["source"] = "Cavern Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[431333] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213893,
},
[449941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[1214607] = {
["encounterName"] = "Chrome King Gallywix",
["event"] = "SPELL_CAST_START",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
},
[449245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[75441] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Flame Caller",
["encounterID"] = 1040,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40447,
},
[443162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[354572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Patron",
["npcID"] = 176561,
},
[76584] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[1214614] = {
["source"] = "Maulspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 247480,
},
[465754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[411910] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Eel",
["npcID"] = 215680,
},
[468694] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[1214620] = {
["source"] = "Maulspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 247480,
},
[459995] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Geargrinder Biker",
["npcID"] = 225804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shellbreaker",
["npcID"] = 213598,
},
[418791] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[465165] = {
["source"] = "Darkfuse Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 229603,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[1222815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastelander Ritualist",
["npcID"] = 234957,
},
[1214628] = {
["isChanneled"] = true,
["source"] = "Consuming Voidstone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212739,
},
[453856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfall Tactician",
["npcID"] = 225601,
},
[82362] = {
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39987,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[449251] = {
["source"] = "Nerubian Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[410870] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[465820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterworks Crocolisk",
["npcID"] = 227145,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-09-18 23:08:12 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-18 21:29:52 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-18 19:24:43 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-18 19:12:49 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-18 16:34:16 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-16 21:43:33 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-16 21:05:21 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-16 18:20:49 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 18:08:14 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 17:03:18 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-14 16:43:10 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 14:27:49 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-14 14:20:09 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Mbuzi",
"2025-09-14 13:14:41 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 10:04:55 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 09:50:59 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-14 09:37:03 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-13 09:48:40 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
"2025-09-11 20:35:01 | INIT | Plater-v615-Retail | Framework v619 | 11.2.0 | enUS | Bægnaskeren",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
